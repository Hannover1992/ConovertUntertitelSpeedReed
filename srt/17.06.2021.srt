1
00:00:00,000 --> 00:00:13,000
Also Transformationen kennen Sie, Fourier-Transformationen. Da nehmen Sie ein Zeitsignal oder bei Bildern wäre es ja ein Ortssignal und transformieren das in den Frequenzbereich und dann wissen Sie, welche Frequenzen in dem Signal da sind.

2
00:00:13,000 --> 00:00:23,000
Nun kann man eine Fourier-Transformation nehmen oder auch wie viele andere. Wir gehen jetzt einfach mal davon aus, dass wir f haben, ein Vektor, ganz allgemein.

3
00:00:23,000 --> 00:00:37,000
Da sind Zahlen drin. Das könnten also auch Zahlen von unserem Bild sein und dann haben wir eine Basis, eine Transformationsbasis hier.

4
00:00:37,000 --> 00:00:58,000
Dann bilden wir das Skalarprodukt zwischen diesen beiden, zwischen der Transformationsbasis, jeweils einem Vektor davon und unseren Eingangsdaten und kriegen dann das Signal in der Frequenzdarstellung oder hier der kleine Buchstabe ist die Bildebene oder Zeitebene.

5
00:00:58,000 --> 00:01:20,000
Das können wir berechnen aus den Transformationskoeffizienten fk, die wir mit der Basis multiplizieren. Wenn Sie jetzt einen Vektor der Länge 16 haben, also 16 Bildpunkte als Eingang, brauchen Sie eine Transformation, die Ihnen 16 Vektoren für die Orthonormalbasis bereitstellt.

6
00:01:20,000 --> 00:01:33,000
Sie multiplizieren diese Basis mit diesen Koeffizienten, kriegen das Signal heraus und das kann man auch umgekehrt machen. Der Fourier-Koeffizient, dann ist die Basis eben von Fourier.

7
00:01:33,000 --> 00:01:53,000
Große Buchstaben sind im Transformationsraum, wobei der Transformationsraum typischerweise immer eine Frequenzdarstellung ist, meint man auch eine Frequenz-Ortsauflösung. Das waren die großen Buchstaben, die kleinen Buchstaben sind Zeit- oder Ortsbereich.

8
00:01:53,000 --> 00:02:16,000
Ich habe jetzt also mein Ding hier neu gestartet. Kein WLAN, das ist ja auch schön. Dann klicke ich mal auf Einstellungen und da gibt es WLAN, wiederum verbunden.

9
00:02:16,000 --> 00:02:35,000
Dann Browser, da gibt es im Shortcut Digitale Bildverarbeitung. Da gebe ich jetzt meinen Namen ein, damit er sich merkt.

10
00:02:35,000 --> 00:03:04,000
Jetzt machen wir ihn noch zum Präsentor.

11
00:03:04,000 --> 00:03:08,000
Damit ist das Ganze dann auch wieder zu Ende.

12
00:03:08,000 --> 00:03:18,000
Egal, also allgemein das war die Transformation. Jetzt bin ich hier Präsentor, kann aber nichts machen.

13
00:03:18,000 --> 00:03:38,000
Was genau macht eine Transformation? Das ist eine gute Frage.

14
00:03:39,000 --> 00:03:50,000
Kommen wir gleich zu. Hier haben wir jetzt mal ein Bild. Das ist das Standard-Referenzbild für alle, die Bild-Codierung betreiben.

15
00:03:50,000 --> 00:03:59,000
Jetzt wird eine Transformation, eine zweidimensionale Fourier-Transformation berechnet. Wir gehen über alle Zeilen.

16
00:04:00,000 --> 00:04:06,000
Die zweidimensionale Fourier-Transformation ist separierbar, was auch immer das heißen mag.

17
00:04:06,000 --> 00:04:16,000
Das heißt, Sie nehmen eine Zeile, in diesem Beispiel eine Zeile besteht aus 256 Bildpunkten. Sie berechnen daraus die Fourier-Transformation, speichern das ab als eine Zeile.

18
00:04:16,000 --> 00:04:23,000
Dann nehmen Sie die nächste Zeile aus dem Bild, berechnen wieder die 256-Punkt-Fourier-Transformation, speichern das ab.

19
00:04:23,000 --> 00:04:28,000
Das machen Sie für alle Zeilen. Jetzt nehmen Sie diesen Block, den Sie hier haben, wo Sie schon einmal transformiert haben, und zwar horizontal.

20
00:04:28,000 --> 00:04:38,000
Jetzt nehmen Sie diesen Block und machen die gleiche Transformation vertikal. Dann kriegen Sie eine zweidimensionale Fourier-Transformation.

21
00:04:38,000 --> 00:04:48,000
Die Koeffizienten entsprechen dann den Frequenzen. Jetzt haben wir die Frequenzen dargestellt, und zwar so, dass die Frequenz 0, das ist der gleiche Anteil, hier in der Mitte liegt.

22
00:04:48,000 --> 00:04:56,000
Wenn wir in diese Richtung weitergehen, gehen die Frequenzen hoch und das Ganze ist symmetrisch. Hier gehen die Frequenzen auch hoch im negativen Bereich, betragsmäßig gehen sie hoch.

23
00:04:56,000 --> 00:05:04,000
Und hier haben wir die vertikalen Frequenzen. Das heißt, die tiefen Frequenzen in dieser Nachstellung haben wir in der Mitte und die hohen Frequenzen draußen.

24
00:05:04,000 --> 00:05:08,000
Wo der Übergang zwischen tief und hoch ist, Geschmackssache.

25
00:05:09,000 --> 00:05:18,000
Und die Fourier-Transformation, das ist eine komplexe Transformation, liefert Ihnen dann auch noch die Phase, die ist hier dargestellt.

26
00:05:18,000 --> 00:05:32,000
Ich erkenne in dieser Phase nichts. Hier oben erkennen wir jetzt auch nicht so richtig viel, weil die Farbe den Helligkeitswert überlagert.

27
00:05:32,000 --> 00:05:37,000
Sie sehen, hier gibt es so helle Streifen bei den horizontalen und vertikalen Frequenzen.

28
00:05:37,000 --> 00:05:44,000
Und wenn wir jetzt die Farbeüberlagerung nicht hätten, dann würden wir hellere Farben, mehr Energie bei der tiefen Frequenzen finden.

29
00:05:44,000 --> 00:05:49,000
Und je weiter wir nach außen gehen, desto geringer wird die Energie.

30
00:05:51,000 --> 00:05:54,000
Was macht die Fourier-Transformation?

31
00:05:54,000 --> 00:06:05,000
Letztendlich, wie jede andere Transformation, das hier ist unser Bildsignal. Das bekommen wir durch gewichtete Überlagerung.

32
00:06:05,000 --> 00:06:13,000
FK sind die Fourier-Koeffizienten, das sind die Gewichte. Überlagerung von dieser Otto-Normal-Basis. Das sind unsere Basisvektoren.

33
00:06:13,000 --> 00:06:26,000
Und da gibt es dann zum Beispiel ein Basisbild, das hat in der vertikalen eine gewisse Frequenz, die von 0 verschieden ist.

34
00:06:26,000 --> 00:06:35,000
In der horizontalen eine Frequenz 0. Wenn Sie eine Zeile nehmen, sehen Sie keine Veränderung.

35
00:06:35,000 --> 00:06:42,000
Das ist ein Basisbild, was diesen Fourier-Koeffizienten entspricht.

36
00:06:43,000 --> 00:06:52,000
Wenn Sie eine schräge Signalswelle haben, dann haben Sie letztendlich, wenn Sie einmal horizontal gehen, eine gewisse Frequenz.

37
00:06:52,000 --> 00:06:56,000
Und wenn Sie vertikal gehen, haben Sie in diesem Fall eine andere Frequenz.

38
00:06:56,000 --> 00:06:59,000
Fourier-Koeffizienten sind hier.

39
00:06:59,000 --> 00:07:12,000
Heißt also, wenn wir unser Bild durch Fourier-Koeffizienten zusammensetzen, dann wird unter anderem dieses Basisbild mit der Größe dieses Koeffizienten gewichtet, aufaddiert.

40
00:07:12,000 --> 00:07:18,000
Und dieses Basisbild mit der Größe des Koeffizienten, der an dieser Stelle sitzt, gewichtet und auch aufaddiert.

41
00:07:21,000 --> 00:07:26,000
Von daher, auf die Frage, was genau passiert bei der Fourier-Analyse.

42
00:07:27,000 --> 00:07:40,000
Meine Wahrnehmung oder für mich das Einfachste zu verstehen ist, wir haben gewisse Basisbilder und die überlagern wir gewichtet und kriegen das Bild raus, was wir haben wollen.

43
00:07:40,000 --> 00:07:47,000
Diese Basisbilder stellen natürlich irgendwas dar bei der Fourier-Transformation. Sinuswellen unterschiedlicher Frequenzen.

44
00:07:47,000 --> 00:07:56,000
Und deswegen kann man eben auch sagen, dass diese Fourier-Koeffizienten uns Aufschluss darüber geben, welche Frequenzen in dem Bild oder im Signal vorhanden sind.

45
00:08:01,000 --> 00:08:10,000
Die Fourier-Transformation in diesem Beispiel hier nimmt das ganze Bild.

46
00:08:10,000 --> 00:08:20,000
Es gibt auch Anwendungen, da zerlegen sie das Bild in Blöcke, zum Beispiel der Größe 16x16.

47
00:08:20,000 --> 00:08:26,000
Und sie transformieren jeden Block vom Bild unabhängig von den anderen Blöcken.

48
00:08:26,000 --> 00:08:33,000
Dann wird die Fourier-Transformation ihnen nur eine Aussage geben über den Block, den sie transformieren.

49
00:08:33,000 --> 00:08:38,000
Und zwar unabhängig davon, was links, rechts, oben oder unten von diesem Block passiert.

50
00:08:38,000 --> 00:08:50,000
Das heißt, die Fourier-Transformation macht eine Analyse nur der Bildpunkte innerhalb des Blocks.

51
00:08:50,000 --> 00:08:56,000
Und die Veränderungen werden dann eben dargestellt durch gewichtete Überlagerung dieser Basisbilder.

52
00:08:56,000 --> 00:09:09,000
Es gibt viele Anwendungen. Eine Variation der Fourier-Transformation ist die Diskrete-Cosinus-Transformation.

53
00:09:09,000 --> 00:09:12,000
Das haben sie alle auf ihrem Handy. Das ist ein JPEG.

54
00:09:12,000 --> 00:09:20,000
Wenn sie Bilder segmentieren wollen, sie wollen Objekte verfolgen, sie wollen Objekte klassifizieren,

55
00:09:20,000 --> 00:09:28,000
werden häufig auch die Frequenzeigenschaften des Signals, was sie detektieren wollen, was sie verfolgen wollen, als Merkmal benutzt.

56
00:09:28,000 --> 00:09:32,000
Was macht man auch mit einer Transformation?

57
00:09:32,000 --> 00:09:38,000
Wir werden uns die DCT angucken, die Diskrete-Cosinus-Transformation.

58
00:09:38,000 --> 00:09:41,000
Das ist letztendlich in der Kommunikation die Transformation.

59
00:09:41,000 --> 00:09:45,000
Die Transformation wird verwendet in JPEG, in jedem Video-Codec, den sie haben.

60
00:09:45,000 --> 00:09:51,000
Sie wird verwendet auch in MP3, in den ganzen Audio-Codecs.

61
00:09:51,000 --> 00:10:05,000
Die Hadamard-Transformation wird in einigen Anwendungen verwendet, häufig für die Merkmalsberechnung.

62
00:10:06,000 --> 00:10:09,000
Lässt sich schnell berechnen.

63
00:10:09,000 --> 00:10:18,000
Wenn wir die Diskrete-Cosinus-Transformation besprechen, werden sie merken, dass die Fourier-Transformation ihnen Frequenzanteile vorspiegelt, die es vielleicht nicht gibt.

64
00:10:18,000 --> 00:10:25,000
Dann gibt es die gefensterte Fourier-Transformation und auch die H-Transformation, die sich genauso wie die Hadamard-Transformation besonders schnell berechnen lässt.

65
00:10:25,000 --> 00:10:33,000
Die Basisbilder einer Fourier-Transformation, hier ist nur der Betrag dargestellt.

66
00:10:33,000 --> 00:10:35,000
Die haben auch eine Phase.

67
00:10:35,000 --> 00:10:52,000
Von daher gibt die gewichtete Überlagerung dieser Basisbilder dann im Frequenzbereich komplexe Werte.

68
00:10:52,000 --> 00:10:56,000
Aber das Signal, was sie synthetisieren, ist dann ein reelles Signal.

69
00:10:56,000 --> 00:11:00,000
Deswegen sind die Fourier-Koeffizienten auch symmetrisch.

70
00:11:01,000 --> 00:11:05,000
Die Fourier-Transformation ist ja mal analogen definiert.

71
00:11:05,000 --> 00:11:10,000
Im diskreten ist sie aus Signalen und Systemen letztendlich so definiert.

72
00:11:10,000 --> 00:11:13,000
Sie kennen das eigentlich nur als eindimensionale Transformation.

73
00:11:13,000 --> 00:11:17,000
Dann hätte man ein Fi, das ist gleich 1 durch Wurzeln.

74
00:11:17,000 --> 00:11:19,000
Das ist die Transformationslänge.

75
00:11:19,000 --> 00:11:21,000
Summe x gleich 0n minus 1.

76
00:11:21,000 --> 00:11:22,000
Hier haben wir das Signal.

77
00:11:22,000 --> 00:11:26,000
Und dann hätten sie einen Transformationskanal, Eo minus j2p x durch n.

78
00:11:26,000 --> 00:11:29,000
Wenn sie das zweidimensional haben, dann schreiben sie das so.

79
00:11:29,000 --> 00:11:38,000
n, die Anzahl der Bildpunkte, die sie transformieren in horizontale Richtung.

80
00:11:38,000 --> 00:11:40,000
m, die Anzahl der Spalten.

81
00:11:40,000 --> 00:11:43,000
In vielen Anwendungen ist n gleich m.

82
00:11:43,000 --> 00:11:47,000
Und hier sehen sie die Inverse.

83
00:11:47,000 --> 00:11:51,000
Diskrete Fourier-Transformation ist letztendlich von der Formel her das gleiche wie da oben.

84
00:11:51,000 --> 00:11:57,000
Nur der Transformationskörner hat hier ein Minuszeichen und hier ein Pluszeichen.

85
00:12:02,000 --> 00:12:07,000
Diese diskrete Fourier-Transformation liefert Ihnen, das sehen Sie ja hier,

86
00:12:07,000 --> 00:12:11,000
eine komplexe Fourier-Kurve.

87
00:12:11,000 --> 00:12:15,000
Hier steht jetzt ungünstig für praktische Anwendung, kann man darüber streiten.

88
00:12:15,000 --> 00:12:18,000
Letztendlich haben sie bei der Fourier-Transformation,

89
00:12:18,000 --> 00:12:22,000
wenn sie ein Block n mal m transformieren,

90
00:12:22,000 --> 00:12:28,000
n mal m reelle Zahlen, im Transformationsbereich n mal m komplexe Zahlen.

91
00:12:28,000 --> 00:12:30,000
Also doppelt so viele Zahlen.

92
00:12:30,000 --> 00:12:34,000
Weil sie aber ein reelles Signal transformieren,

93
00:12:34,000 --> 00:12:37,000
haben sie im Frequenzbereich Symmetrie-Eigenschaften,

94
00:12:37,000 --> 00:12:40,000
sodass sie letztendlich nicht doppelt so viele Zahlen berechnen müssen.

95
00:12:40,000 --> 00:12:44,000
Wenn sie die Hälfte berechnet haben, können sie sich den Rest dazu decken.

96
00:12:44,000 --> 00:12:48,000
Aber komplexen Zahlen wird vielleicht ungern gerechnet.

97
00:12:50,000 --> 00:12:54,000
Kann man jetzt das gleiche auch mit reellwertigen Basisfunktionen bekommen?

98
00:12:54,000 --> 00:12:59,000
Also hier statt e hoch minus j 2pi nur reelle Zahlen.

99
00:12:59,000 --> 00:13:02,000
Die Antwort darauf ist ja und das ist dann die Diskrete-Cosinus-Transformation.

100
00:13:02,000 --> 00:13:06,000
Die Diskrete-Cosinus-Transformation hat neben der

101
00:13:06,000 --> 00:13:15,000
Eigenschaft, dass man sie nur mit reellen Zahlen berechnen kann,

102
00:13:15,000 --> 00:13:17,000
noch eine weitere Eigenschaft.

103
00:13:17,000 --> 00:13:20,000
Und die ist vielleicht die relevantere.

104
00:13:20,000 --> 00:13:25,000
Wenn sie eine Fourier-Transformation machen von einem Signal endlicher Länge,

105
00:13:25,000 --> 00:13:29,000
dann ist die Annahme, die hinter der Fourier-Transformation steckt,

106
00:13:29,000 --> 00:13:34,000
dass dieses Signal im Orts- oder Zeitbereich sich periodisch fortsetzt.

107
00:13:34,000 --> 00:13:40,000
Also wenn sie irgendein Signal haben, hier haben sie ihre n Bildpunkte in einer Zeile,

108
00:13:40,000 --> 00:13:44,000
dann ist die Annahme, die hinter der Fourier-Transformation steckt,

109
00:13:44,000 --> 00:13:46,000
dass sich dieses Signal periodisch wiederholt.

110
00:13:46,000 --> 00:13:49,000
Also sie transformieren letztendlich nicht diesen Block hier,

111
00:13:49,000 --> 00:13:54,000
den wir hier mit 1 bis n beschriftet haben,

112
00:13:54,000 --> 00:13:58,000
sondern den Block unendlich oft wiederholt.

113
00:13:58,000 --> 00:14:03,000
Und was sie sehen ist, hier haben sie Sprünge.

114
00:14:03,000 --> 00:14:05,000
Die sind nicht gut.

115
00:14:05,000 --> 00:14:08,000
Nicht gut im Sinne von, das sind hohe Frequenzen,

116
00:14:08,000 --> 00:14:11,000
die eigentlich in dem realen Signal gar nicht vorhanden sind.

117
00:14:11,000 --> 00:14:14,000
Wenn sie jetzt Codierung machen oder Analyse, dann haben sie hier hohe Frequenzen,

118
00:14:14,000 --> 00:14:18,000
obwohl die letztendlich ein Artefakt der Fourier-Transformation sind.

119
00:14:18,000 --> 00:14:21,000
Die Diskrete-Cosinus-Transformation nimmt dieses Signal,

120
00:14:21,000 --> 00:14:24,000
was wir transformieren wollen, hier diesen Block 1 bis n,

121
00:14:24,000 --> 00:14:30,000
und spiegelt ihn erstmal an dieser Achse.

122
00:14:30,000 --> 00:14:35,000
Und dieses Signal wird jetzt Fourier-transformiert.

123
00:14:35,000 --> 00:14:39,000
Weil wir hier schon eine Symmetrie in diesem Signal haben,

124
00:14:39,000 --> 00:14:45,000
werden die Koeffizienten, die hierbei herauskommen, alle real sein.

125
00:14:45,000 --> 00:14:52,000
Und wir haben zwar jetzt eine Transformationslänge für die Fourier-Transformation von 2n,

126
00:14:52,000 --> 00:14:57,000
aber aufgrund der vielfältigen Eigenschaften Symmetrie im Bildbereich

127
00:14:57,000 --> 00:15:02,000
und reales Eingangssignal ist die Anzahl der Transformations-Koeffizienten,

128
00:15:02,000 --> 00:15:07,000
die wir letztendlich berechnen müssen, immer wieder nur n.

129
00:15:07,000 --> 00:15:10,000
Das ist dann letztendlich die Diskrete-Cosinus-Transformation,

130
00:15:10,000 --> 00:15:13,000
die, weil sie diese Sprünge hier vermeidet,

131
00:15:13,000 --> 00:15:22,000
uns keine hohen Frequenzen vorgaukelt, wo keine hohen Frequenzen sind.

132
00:15:23,000 --> 00:15:26,000
Also letztendlich, wenn das hier unser Signal ist, von 0 bis n-1,

133
00:15:26,000 --> 00:15:30,000
das wollen wir transformieren, die DCT erweitert dieses Signal.

134
00:15:30,000 --> 00:15:34,000
Das machen sie nicht physikalisch, nur bei der Herleitung machen sie das letztendlich.

135
00:15:34,000 --> 00:15:41,000
Machen diese Annahmen raus, kommt dann eine Gleichung für die Diskrete-Cosinus-Transformation.

136
00:15:43,000 --> 00:15:47,000
Die Symmetrie-Eigenschaften können wir nutzen, hatte ich schon gesagt.

137
00:15:47,000 --> 00:15:53,000
Hier können sie das alles rechnen und das hier ist dann die Formel für die Diskrete-Cosinus-Transformation.

138
00:15:55,000 --> 00:16:00,000
Wir haben hier einen Normalisierungsfaktor, Summe, wieder Transformationslänge n,

139
00:16:00,000 --> 00:16:05,000
dann brauchen wir n Koeffizienten, das sind die fi und das hier sind die Basisbilder.

140
00:16:05,000 --> 00:16:09,000
Und dieses i hier ist jetzt nicht das komplexe i, sondern es ist einfach hier der z-Links.

141
00:16:10,000 --> 00:16:13,000
Und was sie auch sehen,

142
00:16:15,000 --> 00:16:19,000
diese Cosinus, da rechnen sie natürlich lange um den Cosinus von der Zahler zu kriegen,

143
00:16:19,000 --> 00:16:25,000
aber bei einer Endpunkt-DCT haben sie n verschiedene Werte für den Cosinus.

144
00:16:25,000 --> 00:16:30,000
Die können sie vorher mal berechnen, speichern sie ab und dann ist die Multiplikation hier auch einfach erledigt.

145
00:16:31,000 --> 00:16:40,000
Ja, das hier ist im Eindimensionalen und genauso wie bei der Fourier-Transformation können sie das zweidimensional machen.

146
00:16:40,000 --> 00:16:47,000
Dann haben sie alles doppelt, wieder n Zahlenlänge, n Spaltenlänge und hier zweimal der Transformationskörper, sein Cosinus.

147
00:16:50,000 --> 00:16:53,000
Die DCT ist jetzt Reell.

148
00:16:54,000 --> 00:16:59,000
Das heißt, die Gewichtung der Basisbilder erfolgt jetzt nur im Reellen.

149
00:16:59,000 --> 00:17:08,000
Die Basisbilder haben keine Phase mehr, die Transformationskoeffizienten haben keine Phase

150
00:17:08,000 --> 00:17:18,000
und damit werden jetzt diese Basisbilder, die wir hier sehen, einfach gewichtet überlagert, um ein Bild zu synthetisieren.

151
00:17:19,000 --> 00:17:28,000
Das hier ist der Gleichanteil, also wenn sie eine gewisse Grundhelligkeit in ihrem Block haben,

152
00:17:28,000 --> 00:17:36,000
nehmen sie dieses Basisbild, Frequenz 0,0 letztendlich, mit einem gewissen Multiplikationsfaktor, Gewichtsfaktor,

153
00:17:36,000 --> 00:17:39,000
das ist dann der DCT-Koeffizient, um die mittlere Helligkeit für diesen Block einzustellen.

154
00:17:39,000 --> 00:17:46,000
Das hier ist dann die erste Frequenz in horizontaler Richtung, vertikal ist die Frequenz noch 0.

155
00:17:47,000 --> 00:17:50,000
Hier in dieser Richtung steigt die Frequenz.

156
00:17:50,000 --> 00:17:56,000
Sie sehen auch hier haben wir nur eine Halbwelle und hier dann die höchste Frequenz, die wir darstellen können

157
00:17:56,000 --> 00:18:00,000
und hier das gleich jetzt aufsteigende Frequenz in vertikaler Richtung.

158
00:18:00,000 --> 00:18:06,000
Horizontale Frequenz ist in dieser Spalte 0 und hier haben wir die ganze Mischfrequenz.

159
00:18:06,000 --> 00:18:09,000
Das ist die höchste Frequenz.

160
00:18:09,000 --> 00:18:12,000
Das hier sind die Basisbilder einer DCT für n gleich 8.

161
00:18:12,000 --> 00:18:15,000
Also das hier sind 8 mal 8 Bildpunkte.

162
00:18:15,000 --> 00:18:19,000
Können Sie hier oben nicht sehen, aber hier unten können Sie nachzählen.

163
00:18:19,000 --> 00:18:21,000
Das sind 8 mal 8 Bildpunkte.

164
00:18:21,000 --> 00:18:28,000
Gewichtete Überlagerung dieser Basisbilder liefert Ihnen dann jedes beliebige Bild, was Sie sich vorstellen können.

165
00:18:28,000 --> 00:18:35,000
Die Basisbilder sind orthogonal zueinander, das heißt, wenn Sie ein Skalarprodukt zwischen zwei Basisbildern bilden, kommt 0 Schluss.

166
00:18:43,000 --> 00:18:46,000
Schauen Sie sich dieses Bild mal genauer an.

167
00:18:46,000 --> 00:18:48,000
Das hier ist das Originalbild.

168
00:18:48,000 --> 00:18:54,000
Dieses Bild wurde jetzt aufgeteilt in Blöcke der Größe 8 mal 8.

169
00:18:54,000 --> 00:19:00,000
Jeder Block wird dann unabhängig voneinander, so macht es auch die Bildcodierung,

170
00:19:00,000 --> 00:19:06,000
jeder Block wird unabhängig voneinander in den Transformationsraum, in den DCT Raum transformiert.

171
00:19:06,000 --> 00:19:09,000
Und dann haben wir ja beim 8 mal 8 mal 64 Komponenten.

172
00:19:09,000 --> 00:19:15,000
Von diesen 64 Komponenten schmeißen wir jetzt alle weg, außer die ersten 4.

173
00:19:15,000 --> 00:19:21,000
Und zwar welche 4? Wir nehmen diese 4 Komponenten, die behalten wir.

174
00:19:21,000 --> 00:19:24,000
Und dann machen wir eine Rücktransformation.

175
00:19:24,000 --> 00:19:30,000
Das heißt, wir versuchen das Eingangsbild zu approximieren durch gewichtete Überlagerung dieser 4 Basisbilder.

176
00:19:30,000 --> 00:19:36,000
Ganz klar, das Eingangsbild kriegen wir damit nicht komplett zurück, aber Näherungsverhältnisse sehen Sie hier unten.

177
00:19:36,000 --> 00:19:39,000
Sie können jetzt hier auf alle Fälle eine Blockstruktur erkennen.

178
00:19:39,000 --> 00:19:42,000
Dann wissen Sie letztendlich auch, wie groß sind die 8 mal 8 Blöcke.

179
00:19:42,000 --> 00:19:50,000
Und wenn wir jetzt mehr Koeffizienten nehmen, hier 8 oder hier 16, dann wird das Bild offensichtlich besser.

180
00:19:50,000 --> 00:19:55,000
Und wenn man diese beiden Bilder vergleicht, das Original und das mit 16 Transformationskoeffizienten,

181
00:19:55,000 --> 00:19:59,000
16 von 64, also nur einem Viertel der Transformationskoeffizienten,

182
00:19:59,000 --> 00:20:01,000
dann sind sich diese Bilder schon verdammt ähnlich.

183
00:20:02,000 --> 00:20:08,000
Das heißt, die Energie eines natürlichen Bildes ist typischerweise bei den niedrigen Frequenzen.

184
00:20:08,000 --> 00:20:13,000
Wenn Sie zu wenige niedrige Frequenzen haben, dann sehen Sie die Artefakte.

185
00:20:13,000 --> 00:20:16,000
Hier sehen Sie auch, die hohen Frequenzen fehlen.

186
00:20:16,000 --> 00:20:20,000
Deswegen ist dieser Strich hier zum Beispiel als Treppenform sichtbar.

187
00:20:20,000 --> 00:20:32,000
Und hier sehen Sie dann, wie Sie die Transformation berechnen können.

188
00:20:32,000 --> 00:20:39,000
Typischerweise haben wir dann im Transformationsbereich hier den Gleichanteil.

189
00:20:39,000 --> 00:20:42,000
Das ist typischerweise auch der größte Koeffizient, der vorkommt.

190
00:20:42,000 --> 00:20:47,000
Und dann die anderen Frequenzen sind Transformationskoeffizienten.

191
00:20:47,000 --> 00:20:51,000
Die können positiv und auch negativ sein.

192
00:20:51,000 --> 00:20:55,000
Die meiste Energie, die meisten großen Transformationskoeffizienten haben wir bei den niedrigen Frequenzen.

193
00:20:55,000 --> 00:21:00,000
Und die hohen Frequenzen sind oft nahe 0 und entsprechend dann klein.

194
00:21:00,000 --> 00:21:07,000
Und man muss sie, wenn man das Bild kodiert, dann auch nicht abspeichern.

195
00:21:07,000 --> 00:21:11,000
Wenn Sie das kodieren wollen oder quantisieren dieses Signal,

196
00:21:11,000 --> 00:21:15,000
haben Sie hier die transformierten Blöcke im DCT-Bereich.

197
00:21:15,000 --> 00:21:19,000
Diesen zweite-dimensionalen Block, den scannen Sie ab.

198
00:21:19,000 --> 00:21:21,000
Da nimmt man so einen Zig-Zag-Scan.

199
00:21:21,000 --> 00:21:26,000
Und diese Transformationskoeffizienten schicken Sie dann durch einen Quantisierer.

200
00:21:26,000 --> 00:21:32,000
Typischerweise werden dann die letzten Transformationskoeffizienten Müll.

201
00:21:32,000 --> 00:21:36,000
Und wenn Sie das dann auf die Festplatte schreiben, sind Ihre Eingangssignale,

202
00:21:36,000 --> 00:21:39,000
die Sie da schreiben, letztendlich diese Koeffizienten.

203
00:21:39,000 --> 00:21:42,000
Und dann gibt es ein Symbol, das heißt EndofBlock.

204
00:21:42,000 --> 00:21:44,000
Und danach kommt nichts mehr.

205
00:21:44,000 --> 00:21:49,000
Das wird dann noch entropie-kodiert und weggeschrieben und dann haben Sie den Effekt.

206
00:21:53,000 --> 00:21:56,000
Bildkodierung bedeutet, Sie haben hier Ihre Bilddaten.

207
00:21:56,000 --> 00:21:59,000
Von der Kamera typischerweise in RGB.

208
00:21:59,000 --> 00:22:02,000
Das wird umgerechnet in einen anderen Farbraum.

209
00:22:02,000 --> 00:22:06,000
YCbCr. Y ist die schwarz-weiß-Komponente.

210
00:22:06,000 --> 00:22:10,000
YCbCr sind dann die Farbdifferenzsignale, die Sie brauchen,

211
00:22:10,000 --> 00:22:14,000
um aus diesem schwarz-weiß-Signal RGB ausrechnen zu können.

212
00:22:15,000 --> 00:22:22,000
Jede dieser drei Farbkomponenten wird unabhängig voneinander durch eine Transformation geschickt.

213
00:22:22,000 --> 00:22:24,000
Der Größe 8x8.

214
00:22:24,000 --> 00:22:28,000
Die Transformationskoeffizienten werden quantisiert, kodiert und dann auf die Platte geschrieben.

215
00:22:28,000 --> 00:22:31,000
Und wenn Sie die Platte aus dem Rahmen lesen wollen,

216
00:22:32,000 --> 00:22:34,000
dann nehmen Sie diese Datei,

217
00:22:36,000 --> 00:22:38,000
dekodieren das,

218
00:22:38,000 --> 00:22:42,000
dann die Quantisiererstufenzahlen werden in Repräsentativwerte umgerechnet.

219
00:22:42,000 --> 00:22:44,000
Dann haben Sie hier die Inverse DCT.

220
00:22:44,000 --> 00:22:49,000
Sie machen jetzt die Umwandlung von YCbCr nach RGB und schauen sich das Bild an.

221
00:22:51,000 --> 00:22:54,000
Warum diese Bildumwandlung?

222
00:22:54,000 --> 00:22:58,000
Ich meine, da gehen vorher drei Werte raus, drei Werte kommen rein, drei Werte kommen raus.

223
00:22:59,000 --> 00:23:05,000
Es stellt sich aus, dass die Rot-Grün-Blau-Darstellung dazu führt,

224
00:23:05,000 --> 00:23:12,000
dass diese drei Komponenten statistisch voneinander abhängig sind.

225
00:23:12,000 --> 00:23:18,000
Wenn Sie den Grünwert kennen, dann können Sie eine gute Vorhersage machen, wie der Rot-Blau aussieht.

226
00:23:19,000 --> 00:23:21,000
Wenn Sie diese Transformation machen,

227
00:23:22,000 --> 00:23:25,000
dann sind diese drei Komponenten

228
00:23:27,000 --> 00:23:31,000
mehr voneinander statistisch gestrengt, sind also statistisch unabhängiger.

229
00:23:32,000 --> 00:23:35,000
Und das ist dann für die Kodierung vorteilhaft.

230
00:23:35,000 --> 00:23:42,000
Außerdem, Schwarz-Weiß-Signale, die können wir als Mensch mit unserem Auge viel besser sehen als Farbsignale.

231
00:23:42,000 --> 00:23:47,000
Das heißt, was dann typischerweise auch gemacht wird, wenn Sie hier die RGB-Umwandlung nach YCbCr gemacht haben,

232
00:23:47,000 --> 00:23:51,000
dann wird das Y, das Schwarz-Weiß-Komponent, in voller Auflösung übertragen.

233
00:23:51,000 --> 00:23:57,000
Und die Farbkomponenten, die werden nur in halber horizontaler und halber vertikaler Auflösung übertragen.

234
00:23:57,000 --> 00:24:01,000
Das heißt, Sie sparen Bildpunkte und damit auch Daten.

235
00:24:01,000 --> 00:24:04,000
Und mit unserem Auge sehen wir das nicht.

236
00:24:07,000 --> 00:24:12,000
Also diese diskrete Cosinus-Transformation wird eingesetzt in JPEG.

237
00:24:12,000 --> 00:24:17,000
MPEG-1 und MPEG-2, das ist das, was wir auch bei DVD haben.

238
00:24:17,000 --> 00:24:22,000
MPEG-4, das ist auch bekannt unter dem Namen AVC.

239
00:24:22,000 --> 00:24:24,000
Das haben Sie alle auf Ihrem Handy als Videocodec.

240
00:24:24,000 --> 00:24:33,000
KIVC, das ist der Videocodec, der in den modernen Fernsehern in Deutschland ist.

241
00:24:33,000 --> 00:24:37,000
ARD, ZDF und so weiter, die nutzen den Videocodec.

242
00:24:37,000 --> 00:24:40,000
Und das müsste VVC heißen.

243
00:24:40,000 --> 00:24:42,000
Das ist der neueste Videocodec.

244
00:24:42,000 --> 00:24:45,000
Der ist noch nicht kommerziell verfügbar.

245
00:24:45,000 --> 00:24:47,000
Es gibt auch JPEG-2000.

246
00:24:47,000 --> 00:24:52,000
Das benutzt keine diskrete Cosinus-Transformation, sondern eine Wavelength-Transformation,

247
00:24:52,000 --> 00:24:56,000
die heute auch die Audio-Kompositionen benutzt.

248
00:24:59,000 --> 00:25:05,000
Die Definition der diskreten Cosinus-Transformation ist natürlich aufgrund des Cosinus ein Floating Point.

249
00:25:05,000 --> 00:25:13,000
Aber Sie finden letztendlich in Hardware überall Integer-Implementierung.

250
00:25:13,000 --> 00:25:17,000
Das ist klar mit Floating Point, da rechnen Sie mit 32 oder 64 Bit.

251
00:25:17,000 --> 00:25:20,000
Wenn Sie das Ganze richtig skalieren und sich geschickt anstellen,

252
00:25:20,000 --> 00:25:24,000
können Sie das auch in Integer-Rechnung machen mit der gleichen Bit-Anzahl.

253
00:25:28,000 --> 00:25:32,000
Man kann sich natürlich die Frage stellen, wenn einem die Frequenzauflösung,

254
00:25:32,000 --> 00:25:35,000
wie sie die Fourier-Transformation und damit die DCT liefert,

255
00:25:35,000 --> 00:25:40,000
nicht ganz so wichtig ist, sondern Sie näherungsweise wissen wollen,

256
00:25:40,000 --> 00:25:42,000
was sind denn da für Frequenzen drin,

257
00:25:42,000 --> 00:25:47,000
kann ich dann nicht vielleicht eine Basis, eine Transformation definieren,

258
00:25:47,000 --> 00:25:51,000
die nur ganzeszahlige Koeffizienten hat

259
00:25:51,000 --> 00:25:55,000
und vielleicht auch auf die aufwändigen Multiplikationen verzichtet.

260
00:25:55,000 --> 00:25:57,000
Und dann sind wir bei der Hadamard-Transformation.

261
00:26:02,000 --> 00:26:14,000
Die Hadamard-Transformation, die kleinste Transformation H0, ist einfach nur eine 1.

262
00:26:14,000 --> 00:26:20,000
Wenn ich jetzt von einer kleinen Transformation zunächst größeren kommen will,

263
00:26:20,000 --> 00:26:22,000
dann kann ich nur die Blockgröße verdoppeln.

264
00:26:22,000 --> 00:26:24,000
Also von 1 komme ich nach 2.

265
00:26:24,000 --> 00:26:28,000
Die Transformation, die doppelt so groß ist, sehen Sie hier,

266
00:26:28,000 --> 00:26:30,000
die nimmt die kleine Transformation dreimal

267
00:26:30,000 --> 00:26:33,000
und dann viertes Mal nimmt sie die kleine Transformation negativ.

268
00:26:33,000 --> 00:26:39,000
Heißt also, von H0 nach H1 habe ich 3 mal die 1 und einmal die minus 1.

269
00:26:39,000 --> 00:26:45,000
Und wenn Sie jetzt bei H3 sind, das ist dann schon die Größe 8,

270
00:26:45,000 --> 00:26:48,000
dann haben Sie eine Basisfunktion, die besteht aus lauter Plus-1en,

271
00:26:48,000 --> 00:26:52,000
eine andere Abwechslung aus Plus- und Minus-1en usw.

272
00:26:52,000 --> 00:26:55,000
Wenn Sie damit jetzt also ein Bild transformieren,

273
00:26:55,000 --> 00:26:59,000
dann müssen Sie nur noch addieren und subtrahieren.

274
00:26:59,000 --> 00:27:01,000
Das lässt sich besonders schnell machen.

275
00:27:01,000 --> 00:27:04,000
Und Sie kriegen trotzdem irgendwo eine Frequenzauflösung.

276
00:27:04,000 --> 00:27:07,000
Hier hätten Sie das Basisbild für den Gleichanteil.

277
00:27:07,000 --> 00:27:10,000
Hier haben Sie eine recht hohe Frequenz.

278
00:27:10,000 --> 00:27:12,000
Hier haben Sie eine kleine Frequenz.

279
00:27:12,000 --> 00:27:15,000
Eine Hälfte ist 1, die andere Hälfte ist minus 1.

280
00:27:15,000 --> 00:27:18,000
Also in Ehrungsweise kriegen Sie auch eine Frequenzauflösung hin.

281
00:27:18,000 --> 00:27:22,000
Wird in der Codierung eher selten eingesetzt für die Bildanalyse,

282
00:27:22,000 --> 00:27:26,000
Beschreibung von irgendwelchen Bildmerkmalen durchaus gerne.

283
00:27:27,000 --> 00:27:30,000
Wir hätten hier unser Signal, in diesem Fall ein eindimensionales Signal.

284
00:27:30,000 --> 00:27:34,000
Und dann berechnen wir die Transformationskoeffizienten.

285
00:27:34,000 --> 00:27:37,000
Also diese Basisfunktion mit diesem Vektor liefert uns den Gleichanteil

286
00:27:37,000 --> 00:27:40,000
und entsprechend die anderen Koeffizienten.

287
00:27:45,000 --> 00:27:47,000
Genauso wie es die Fourier-Transformation gibt

288
00:27:47,000 --> 00:27:49,000
und die schnelle Fourier-Transformation,

289
00:27:49,000 --> 00:27:52,000
gibt es auch die schnelle Hadamard-Transformation.

290
00:27:52,000 --> 00:27:54,000
Es gibt auch die schnelle diskrete Cosinus-Transformation.

291
00:27:54,000 --> 00:28:01,000
Dann ist die Komplexität nicht O n², wenn Sie das hier so ausrechnen,

292
00:28:01,000 --> 00:28:04,000
sondern O n log n.

293
00:28:04,000 --> 00:28:08,000
Und eine Komplexität von n mal log n,

294
00:28:08,000 --> 00:28:12,000
das ist dann schon eher vertretbar als n².

295
00:28:17,000 --> 00:28:21,000
Hier können Sie mal sehen, wie das berechnet wird.

296
00:28:21,000 --> 00:28:24,000
Die Transformation ist auch separierbar.

297
00:28:24,000 --> 00:28:26,000
Sie können das in Zweidimensionalen berechnen,

298
00:28:26,000 --> 00:28:28,000
also die Basisfunktion hij.

299
00:28:28,000 --> 00:28:31,000
Die j, zwei Indizes zweidimensional,

300
00:28:31,000 --> 00:28:34,000
bekommen Sie, indem Sie ein Basisbild hi nehmen

301
00:28:34,000 --> 00:28:38,000
und ein Basisbild hij, das nehmen Sie aber transformiert.

302
00:28:43,000 --> 00:28:48,000
Also zum Beispiel ist das hier hi und das hier ist hij.

303
00:28:49,000 --> 00:28:52,000
Dann haben Sie diese Matrix und das können wir uns wieder vorstellen,

304
00:28:52,000 --> 00:28:56,000
dass die Hadamard-Transformation durch gewichtete Überlagerung

305
00:28:56,000 --> 00:29:01,000
solcher Basisbilder jedes Bild synthetisieren kann.

306
00:29:04,000 --> 00:29:08,000
Hier sehen wir die Basisbilder der Hadamard-Transformation.

307
00:29:11,000 --> 00:29:14,000
Man könnte auch sagen, Sie bekommen diese Basisbilder

308
00:29:14,000 --> 00:29:18,000
durch Mineralisierung der DCT-Basisbilder.

309
00:29:18,000 --> 00:29:21,000
Wir haben wieder hier aufsteigende Frequenzen,

310
00:29:21,000 --> 00:29:23,000
horizontaler in vertikaler Richtung,

311
00:29:23,000 --> 00:29:26,000
hier die Mischfrequenzen, hier unten die höchste Frequenz.

312
00:29:26,000 --> 00:29:29,000
Wenn Sie so ein Bild jetzt mal transformieren

313
00:29:29,000 --> 00:29:31,000
mit der Hadamard-Transformation,

314
00:29:31,000 --> 00:29:33,000
hier haben wir jetzt die Frequenzen 0,0,

315
00:29:33,000 --> 00:29:35,000
hier aufsteigende Frequenzen,

316
00:29:35,000 --> 00:29:37,000
hier aufsteigende vertikale Frequenzen

317
00:29:37,000 --> 00:29:40,000
und hier die Mischfrequenzen,

318
00:29:40,000 --> 00:29:43,000
ist dunkelblau 0 und rot groß.

319
00:29:43,000 --> 00:29:45,000
Dann sehen Sie auch hier,

320
00:29:45,000 --> 00:29:47,000
so wie ich das von der DCT erzählt habe,

321
00:29:47,000 --> 00:29:53,000
die meiste Energie steckt bei den niederfrequenten Koeffizienten.

322
00:30:02,000 --> 00:30:05,000
Eine Form von JPEG, JPEG XR,

323
00:30:05,000 --> 00:30:07,000
haben wir auf unseren Handys nicht,

324
00:30:07,000 --> 00:30:10,000
verwendet die Hadamard-Transformation

325
00:30:10,000 --> 00:30:13,000
in dem Videoprojekt H.264 oder AVC,

326
00:30:13,000 --> 00:30:15,000
den Sie auf Ihrem Handy haben.

327
00:30:15,000 --> 00:30:19,000
Wird die Hadamard-Transformation angewendet

328
00:30:19,000 --> 00:30:22,000
auf den DC-Koeffizienten,

329
00:30:22,000 --> 00:30:25,000
den gleichen Teil-Koeffizienten

330
00:30:25,000 --> 00:30:27,000
der diskreten Kohäsionstransformation

331
00:30:27,000 --> 00:30:29,000
als zweite Transformationsschlüssel.

332
00:30:29,000 --> 00:30:31,000
Muss man nicht unbedingt wissen, warum.

333
00:30:31,000 --> 00:30:33,000
Da wird sich auch keiner nachfragen,

334
00:30:33,000 --> 00:30:35,000
ob die hier verwendet wird.

335
00:30:35,000 --> 00:30:37,000
In der Datenverschlüsselung wird sie gerne verwendet,

336
00:30:37,000 --> 00:30:39,000
in der Signalverarbeitung,

337
00:30:39,000 --> 00:30:41,000
Mustererkennung und ähnliches.

338
00:30:41,000 --> 00:30:43,000
Datenkompression steht hier oben.

339
00:30:50,000 --> 00:30:53,000
Diese Transformationen,

340
00:30:53,000 --> 00:30:55,000
egal ob es nun die Fourier-Transformation ist,

341
00:30:55,000 --> 00:30:58,000
die DCT oder die Hadamard-Transformation,

342
00:30:58,000 --> 00:31:02,000
die nehmen einen Bildblock

343
00:31:02,000 --> 00:31:04,000
und transformieren ihn in den Frequenzbereich.

344
00:31:04,000 --> 00:31:06,000
Dann steht hier so,

345
00:31:06,000 --> 00:31:08,000
die Basisfunktionen,

346
00:31:08,000 --> 00:31:10,000
Sinuswellen, Cosinuswellen

347
00:31:10,000 --> 00:31:12,000
oder diese Binärbilder

348
00:31:12,000 --> 00:31:14,000
sind über das gesamte Bild zugeordnet.

349
00:31:14,000 --> 00:31:16,000
Das heißt, wenn ich jetzt ein Basisbild

350
00:31:16,000 --> 00:31:18,000
mit einem gewissen Koeffizienten finde,

351
00:31:18,000 --> 00:31:20,000
berechne,

352
00:31:20,000 --> 00:31:22,000
dann weiß ich nur,

353
00:31:22,000 --> 00:31:24,000
dieses Basisbild gehört zu dem Bild.

354
00:31:24,000 --> 00:31:26,000
Aber wo die Frequenz,

355
00:31:26,000 --> 00:31:28,000
die dieses Basisbild repräsentiert,

356
00:31:28,000 --> 00:31:30,000
wirklich am größten ist,

357
00:31:30,000 --> 00:31:32,000
wir können mit der DCT ja auch ein Bild

358
00:31:32,000 --> 00:31:34,000
transformieren, wo

359
00:31:34,000 --> 00:31:36,000
es ist alles gleich enthalten,

360
00:31:36,000 --> 00:31:38,000
dann kommt da eine Welle

361
00:31:38,000 --> 00:31:40,000
und dann ist auch wieder alles gleich enthalten.

362
00:31:40,000 --> 00:31:42,000
Wenn Sie das transformieren,

363
00:31:42,000 --> 00:31:44,000
dann werden Sie natürlich diesen

364
00:31:44,000 --> 00:31:46,000
Koeffizienten haben,

365
00:31:46,000 --> 00:31:48,000
der diese Welle,

366
00:31:48,000 --> 00:31:50,000
die da in Teilen des Bildes ist,

367
00:31:50,000 --> 00:31:52,000
repräsentiert. Aber im Frequenzbereich

368
00:31:52,000 --> 00:31:54,000
wissen Sie nicht, wo diese Welle denn nun ist.

369
00:31:54,000 --> 00:31:56,000
Wenn Sie das Bild verschieben,

370
00:31:56,000 --> 00:31:58,000
diese Welle kommt am Anfang

371
00:31:58,000 --> 00:32:00,000
auf,

372
00:32:00,000 --> 00:32:02,000
würde dieser Koeffizient

373
00:32:02,000 --> 00:32:04,000
da genauso auftreten.

374
00:32:04,000 --> 00:32:06,000
Was wäre anders bei dem Bild?

375
00:32:06,000 --> 00:32:08,000
Die Koeffizienten, die dafür sorgen,

376
00:32:08,000 --> 00:32:10,000
dass das Basisbild, was uns diese Welle erzeugt,

377
00:32:10,000 --> 00:32:12,000
nur lokal

378
00:32:12,000 --> 00:32:14,000
durchdringt und

379
00:32:14,000 --> 00:32:16,000
anderswo diese Welle unterdrückt wird,

380
00:32:16,000 --> 00:32:18,000
die werden dann anders sein.

381
00:32:18,000 --> 00:32:20,000
Aber das ist schwer durchschaubar,

382
00:32:20,000 --> 00:32:22,000
eigentlich gar nicht durchschaubar.

383
00:32:22,000 --> 00:32:24,000
Das heißt, die Ortsauflösung ist weg.

384
00:32:24,000 --> 00:32:26,000
Schön wäre es für manche Anwendungen,

385
00:32:26,000 --> 00:32:28,000
wenn wir jetzt wissen, wo ist

386
00:32:28,000 --> 00:32:30,000
die Energie für verschiedene Frequenzen

387
00:32:30,000 --> 00:32:32,000
im Bild untergebracht. Das heißt, wir wollen

388
00:32:32,000 --> 00:32:34,000
eine Transformation haben, die eine Orts-

389
00:32:34,000 --> 00:32:36,000
und eine Frequenzzuordnung ermöglicht.

390
00:32:36,000 --> 00:32:38,000
Das bedeutet,

391
00:32:38,000 --> 00:32:40,000
unsere Basisfunktionen

392
00:32:40,000 --> 00:32:42,000
sind dann nicht gültig

393
00:32:42,000 --> 00:32:44,000
für den gesamten Block

394
00:32:44,000 --> 00:32:46,000
oder das gesamte Bild,

395
00:32:46,000 --> 00:32:48,000
sondern nur noch für einen lokalen

396
00:32:48,000 --> 00:32:50,000
Teil eines Blocks und des Bildes.

397
00:32:50,000 --> 00:32:52,000
Also wir wollen

398
00:32:52,000 --> 00:32:54,000
Basisfunktionen haben mit örtlich begrenzter Ausdehnung.

399
00:32:56,000 --> 00:32:58,000
Das können Sie machen,

400
00:32:58,000 --> 00:33:00,000
indem Sie zum Beispiel

401
00:33:02,000 --> 00:33:04,000
die Basisfunktionen

402
00:33:04,000 --> 00:33:06,000
der Fourier-Transformation,

403
00:33:06,000 --> 00:33:08,000
mit einer gewissen Fensterfunktion

404
00:33:08,000 --> 00:33:10,000
gewichten

405
00:33:10,000 --> 00:33:12,000
und diese Fensterfunktion auch noch

406
00:33:12,000 --> 00:33:14,000
verschieben. Damit würde dann nur

407
00:33:14,000 --> 00:33:16,000
ein

408
00:33:16,000 --> 00:33:18,000
Teil

409
00:33:18,000 --> 00:33:20,000
des Bildes durch dieses

410
00:33:20,000 --> 00:33:22,000
Basisbild mit der Gewichtungsfunktion

411
00:33:22,000 --> 00:33:24,000
beschrieben werden.

412
00:33:26,000 --> 00:33:28,000
Und was man dann bekommt,

413
00:33:28,000 --> 00:33:30,000
ist

414
00:33:30,000 --> 00:33:32,000
so etwas wie hier, wo wir, das ist jetzt

415
00:33:32,000 --> 00:33:34,000
ein eindimensionales Signal,

416
00:33:34,000 --> 00:33:36,000
haben wir eine zweidimensionale Darstellung. Warum?

417
00:33:36,000 --> 00:33:38,000
Weil wir über dem Ort

418
00:33:40,000 --> 00:33:42,000
auch die Frequenz haben.

419
00:33:52,000 --> 00:33:54,000
Da kommen noch mal ein paar Bilder dazu.

420
00:33:56,000 --> 00:33:58,000
Wir könnten

421
00:33:58,000 --> 00:34:00,000
Garbo-Fenster nehmen.

422
00:34:00,000 --> 00:34:02,000
Wir

423
00:34:02,000 --> 00:34:04,000
gewichten die

424
00:34:04,000 --> 00:34:06,000
Fourier-Transformierten Basisbilder mit einer

425
00:34:06,000 --> 00:34:08,000
Gauss-Funktion.

426
00:34:08,000 --> 00:34:10,000
Das bedeutet, wir kriegen dann

427
00:34:10,000 --> 00:34:12,000
diese Wellen als

428
00:34:12,000 --> 00:34:14,000
Basisbilder

429
00:34:14,000 --> 00:34:16,000
und

430
00:34:16,000 --> 00:34:18,000
diese Filter schlagen dann letztendlich an,

431
00:34:18,000 --> 00:34:20,000
wenn ich an einem gewissen Ort ein Signal habe,

432
00:34:20,000 --> 00:34:22,000
was ich hiermit irgendwie beschreiben kann.

433
00:34:22,000 --> 00:34:24,000
Und hier mal beispielhaft

434
00:34:24,000 --> 00:34:26,000
Strukturen,

435
00:34:26,000 --> 00:34:28,000
die Sie mit Garbo-Filtern

436
00:34:28,000 --> 00:34:30,000
synthetisieren können. Also hier

437
00:34:30,000 --> 00:34:32,000
letztendlich das System.

438
00:34:32,000 --> 00:34:34,000
Hier haben Sie ein paar Dellen,

439
00:34:34,000 --> 00:34:36,000
hier werden die Dellen mehr und

440
00:34:36,000 --> 00:34:38,000
das können Sie dann auch, Sie sehen hier,

441
00:34:38,000 --> 00:34:40,000
in unterschiedlichen Ortspositionen haben.

442
00:34:40,000 --> 00:34:42,000
Das heißt, man würde

443
00:34:42,000 --> 00:34:44,000
jetzt versuchen, das Bild

444
00:34:44,000 --> 00:34:46,000
durch gewichtete Überlagerung dieser

445
00:34:46,000 --> 00:34:48,000
Basisbilder, die aber auch noch verschoben

446
00:34:48,000 --> 00:34:50,000
werden können, darzustellen.

447
00:34:50,000 --> 00:34:52,000
Diese Garbo-

448
00:34:52,000 --> 00:34:54,000
Transformation ist extrem rechenaufwendig.

449
00:34:54,000 --> 00:34:56,000
Von daher hat sie sich nicht so

450
00:34:56,000 --> 00:34:58,000
ganz durchgesetzt.

451
00:35:00,000 --> 00:35:02,000
Aber Sie können zum Beispiel,

452
00:35:02,000 --> 00:35:04,000
wenn man hier so ein Bild hat, mit verschiedenen

453
00:35:04,000 --> 00:35:06,000
Texturen, wenn Sie jetzt diese

454
00:35:06,000 --> 00:35:08,000
Garbo-Filter haben, die eben auf

455
00:35:08,000 --> 00:35:10,000
gewisse Frequenzen und Orientierung

456
00:35:10,000 --> 00:35:12,000
lokal ansprechen, nicht für

457
00:35:12,000 --> 00:35:14,000
das gesamte Bild, nicht für den gesamten Block, sondern

458
00:35:14,000 --> 00:35:16,000
lokal, entsprechend der Ausdehnung

459
00:35:16,000 --> 00:35:18,000
dieses Filters, was Sie haben,

460
00:35:18,000 --> 00:35:20,000
können Sie das benutzen und dann herausfinden,

461
00:35:20,000 --> 00:35:22,000
dass wir

462
00:35:22,000 --> 00:35:24,000
das Bild können Sie so segmentieren.

463
00:35:24,000 --> 00:35:26,000
Natürlich hier an den segmenten

464
00:35:26,000 --> 00:35:28,000
Grenzen kriegt man Fehler, das ist ganz

465
00:35:28,000 --> 00:35:30,000
klar, dann haben Sie ein Basisbild, was eben

466
00:35:30,000 --> 00:35:32,000
auf der linken Seite noch Textur 1 hat,

467
00:35:32,000 --> 00:35:34,000
da schlägt es an und auf der rechten Seite ist die Textur

468
00:35:34,000 --> 00:35:36,000
nicht mehr, da schlägt es nicht so an, also kriegen Sie

469
00:35:36,000 --> 00:35:38,000
so etwas

470
00:35:38,000 --> 00:35:40,000
mittleres Signal, was Sie dann

471
00:35:40,000 --> 00:35:42,000
infibrinerisieren müssen.

472
00:35:42,000 --> 00:35:44,000
Aber Sie kriegen das auseinander. Wenn Sie

473
00:35:44,000 --> 00:35:46,000
dieses Bild hier durch eine

474
00:35:46,000 --> 00:35:48,000
Fourier-Transformation schicken würden, dann würden Sie nichts sehen.

475
00:35:48,000 --> 00:35:50,000
Dann wäre die

476
00:35:50,000 --> 00:35:52,000
Ortsauflösung verschwunden.

477
00:35:54,000 --> 00:35:56,000
Nächster Schritt war dann

478
00:35:56,000 --> 00:35:58,000
die Wavelet-Transformation.

479
00:35:58,000 --> 00:36:00,000
Dann wird das Bild

480
00:36:00,000 --> 00:36:02,000
letztendlich auch wieder im Frequenzraum

481
00:36:02,000 --> 00:36:04,000
transformiert, aber zusätzlich kriegen wir noch Ortsinformationen

482
00:36:04,000 --> 00:36:06,000
dazu. Diese

483
00:36:06,000 --> 00:36:08,000
Wavelet-Transformation ist erstmal

484
00:36:08,000 --> 00:36:10,000
eine umkehrbare Transformation, das heißt

485
00:36:10,000 --> 00:36:12,000
ich kann mein Signal

486
00:36:12,000 --> 00:36:14,000
als ursprüngliches Signal

487
00:36:14,000 --> 00:36:16,000
repräsentieren, das ist ja offensichtlich, ich kann es aber auch

488
00:36:16,000 --> 00:36:18,000
repräsentieren im

489
00:36:18,000 --> 00:36:20,000
Frequenz-Ortsraum.

490
00:36:20,000 --> 00:36:22,000
Und wenn ich es im Frequenz-Ortsraum repräsentiere,

491
00:36:22,000 --> 00:36:24,000
kann ich auch das Original wieder zurückrechnen.

492
00:36:26,000 --> 00:36:28,000
Die

493
00:36:28,000 --> 00:36:30,000
Transformation erhält Energie,

494
00:36:30,000 --> 00:36:32,000
naja, das ist immer eine Frage der Skalierung,

495
00:36:32,000 --> 00:36:34,000
aber die

496
00:36:34,000 --> 00:36:36,000
Energie wird irgendwie kompaktiert, wenn Sie

497
00:36:36,000 --> 00:36:38,000
eine gewisse Frequenzenergie haben, die wird

498
00:36:38,000 --> 00:36:40,000
örtlich zugeordnet.

499
00:36:40,000 --> 00:36:42,000
Die einfachste

500
00:36:42,000 --> 00:36:44,000
Variante dazu ist die H-Transformation.

501
00:36:44,000 --> 00:36:46,000
Die typische Wavelet-Transformation

502
00:36:46,000 --> 00:36:48,000
beinhaltet

503
00:36:48,000 --> 00:36:50,000
wieder Integer-Multiplikationen

504
00:36:50,000 --> 00:36:52,000
mit nicht nur binären Zahlen,

505
00:36:52,000 --> 00:36:54,000
wie hier die H-Transformation, das wird

506
00:36:54,000 --> 00:36:56,000
dann eingesetzt in JPEG 2000 zum Beispiel

507
00:36:56,000 --> 00:36:58,000
und auch in vielen Anwendungen

508
00:36:58,000 --> 00:37:00,000
der Signalverarbeitung, wenn Sie Signale analysieren

509
00:37:00,000 --> 00:37:02,000
wollen.

510
00:37:02,000 --> 00:37:04,000
Im einfachsten Fall, die H-Transformation,

511
00:37:04,000 --> 00:37:06,000
sehen Sie hier

512
00:37:06,000 --> 00:37:08,000
ein Transformationskörner für die Größe

513
00:37:08,000 --> 00:37:10,000
8x8.

514
00:37:10,000 --> 00:37:12,000
Da gibt es die

515
00:37:12,000 --> 00:37:14,000
Basisvektoren, die sind

516
00:37:14,000 --> 00:37:16,000
örtlich begrenzt.

517
00:37:16,000 --> 00:37:18,000
Hier in diesem Beispiel

518
00:37:18,000 --> 00:37:20,000
haben wir zweimal die 1 in einer

519
00:37:20,000 --> 00:37:22,000
Zeile und ansonsten nur Nullen und

520
00:37:22,000 --> 00:37:24,000
dieses 1,1 wird an verschiedenen

521
00:37:24,000 --> 00:37:26,000
Stellen unseres Eingangssignals,

522
00:37:26,000 --> 00:37:28,000
das hier ist eine

523
00:37:28,000 --> 00:37:30,000
8-Transformation,

524
00:37:30,000 --> 00:37:32,000
also das hier ist das erste

525
00:37:32,000 --> 00:37:34,000
Basisbild, was wir dann mit den 8

526
00:37:34,000 --> 00:37:36,000
Bildpunkten einer Zeile oder Spalte

527
00:37:36,000 --> 00:37:38,000
modifizieren würden. Das liefert uns

528
00:37:38,000 --> 00:37:40,000
dann letztendlich als ersten

529
00:37:40,000 --> 00:37:42,000
die Summe von F1 und F2 und

530
00:37:42,000 --> 00:37:44,000
der zweite Kumpel

531
00:37:44,000 --> 00:37:46,000
F3 plus F4 und so weiter und dann

532
00:37:46,000 --> 00:37:48,000
ab hier werden die Differenzen

533
00:37:48,000 --> 00:37:50,000
berechnet.

534
00:37:52,000 --> 00:37:54,000
Und

535
00:37:54,000 --> 00:37:56,000
wenn F1 jetzt von 0

536
00:37:56,000 --> 00:37:58,000
verschieden ist, dann wissen wir,

537
00:37:58,000 --> 00:38:00,000
dann kriegen wir letztendlich den Summenwert an diesem Ort.

538
00:38:00,000 --> 00:38:02,000
Sie wollen

539
00:38:02,000 --> 00:38:04,000
den Gleichanteil an diesem Ort

540
00:38:04,000 --> 00:38:06,000
für diese zwei

541
00:38:06,000 --> 00:38:08,000
Bildpunkte und wenn F2

542
00:38:08,000 --> 00:38:10,000
von 0 verschieden ist, dann ist es der Gleichanteil

543
00:38:10,000 --> 00:38:12,000
eben an dieser Stelle.

544
00:38:12,000 --> 00:38:14,000
Das heißt, wir haben eine

545
00:38:14,000 --> 00:38:16,000
Ortsauflösung.

546
00:38:18,000 --> 00:38:20,000
Bedeutet auch in diesem Beispiel,

547
00:38:20,000 --> 00:38:22,000
statt einem Gleichanteil, wie wir eben von der

548
00:38:22,000 --> 00:38:24,000
Fourier-Transformation oder

549
00:38:24,000 --> 00:38:26,000
DCT kennen,

550
00:38:26,000 --> 00:38:28,000
haben wir jetzt in diesem Beispiel vier Gleichanteile.

551
00:38:34,000 --> 00:38:36,000
Das kann man natürlich

552
00:38:36,000 --> 00:38:38,000
auch zurückrechnen,

553
00:38:38,000 --> 00:38:40,000
angucken.

554
00:38:44,000 --> 00:38:46,000
Hier haben wir jetzt mal

555
00:38:46,000 --> 00:38:48,000
ein Bild

556
00:38:48,000 --> 00:38:50,000
zerlegt.

557
00:38:54,000 --> 00:38:56,000
Nur in eine Richtung

558
00:38:56,000 --> 00:38:58,000
und dann

559
00:38:58,000 --> 00:39:00,000
unterab getastet.

560
00:39:00,000 --> 00:39:02,000
Dann hätten wir hier das tiefpassgefilterte Signal

561
00:39:02,000 --> 00:39:04,000
und hier das

562
00:39:04,000 --> 00:39:06,000
tiefpassgefilterte Signal.

563
00:39:06,000 --> 00:39:08,000
Was bedeutet das jetzt?

564
00:39:08,000 --> 00:39:10,000
Das bedeutet,

565
00:39:12,000 --> 00:39:14,000
dass wir hier oben nur noch die Hälfte

566
00:39:14,000 --> 00:39:16,000
der Bildpunkte brauchen, aber wir haben das Bildsignal

567
00:39:16,000 --> 00:39:18,000
in klein und hier haben

568
00:39:18,000 --> 00:39:20,000
wir dann die Details,

569
00:39:20,000 --> 00:39:22,000
die hochfrequenten

570
00:39:22,000 --> 00:39:24,000
Anteile.

571
00:39:26,000 --> 00:39:28,000
Wenn man das mal im

572
00:39:28,000 --> 00:39:30,000
Frequenzbereich betrachtet,

573
00:39:30,000 --> 00:39:32,000
wird

574
00:39:32,000 --> 00:39:34,000
so eine

575
00:39:34,000 --> 00:39:36,000
Wavelet-Zerlegung dazu, dass

576
00:39:36,000 --> 00:39:38,000
das Eingangs-Signal, was ein gewisses Spektrum hat,

577
00:39:38,000 --> 00:39:40,000
hier sei es mal konstant, nach der Filterung

578
00:39:40,000 --> 00:39:42,000
in einen Tiefpass- und einen Hochpass-Signal

579
00:39:42,000 --> 00:39:44,000
zerlegt wird.

580
00:39:44,000 --> 00:39:46,000
Diese Filter sind keine idealen Filter.

581
00:39:46,000 --> 00:39:48,000
Ideale Filter hätten ja

582
00:39:50,000 --> 00:39:52,000
hier eine senkrechte

583
00:39:52,000 --> 00:39:54,000
Linie,

584
00:39:54,000 --> 00:39:56,000
sondern die können sich überlappen.

585
00:39:56,000 --> 00:39:58,000
Solange

586
00:39:58,000 --> 00:40:00,000
die gewissen Eigenschaften erfüllen,

587
00:40:00,000 --> 00:40:02,000
ist die Überlappung

588
00:40:02,000 --> 00:40:04,000
von Hochfrequenz und Tieffrequenz

589
00:40:04,000 --> 00:40:06,000
gar kein Problem.

590
00:40:08,000 --> 00:40:10,000
Jetzt versuche ich nochmal

591
00:40:10,000 --> 00:40:12,000
auf meinem Laptop

592
00:40:12,000 --> 00:40:14,000
das Leben zu rufen.

593
00:40:14,000 --> 00:40:16,000
Das ist mir nicht gelungen.

594
00:40:44,000 --> 00:40:46,000
Der Trick war,

595
00:40:46,000 --> 00:40:48,000
ich muss meinen Stift

596
00:40:48,000 --> 00:40:50,000
einmal an

597
00:40:50,000 --> 00:40:52,000
das Ladeportal

598
00:40:52,000 --> 00:40:54,000
des Pads halten.

599
00:40:54,000 --> 00:40:56,000
Beim idealen Filter

600
00:40:56,000 --> 00:40:58,000
würden Sie ja sagen,

601
00:40:58,000 --> 00:41:00,000
ich mache hier die Trennung so,

602
00:41:00,000 --> 00:41:02,000
habe hier Tiefpass, hier Hochpass.

603
00:41:02,000 --> 00:41:04,000
Das ist nicht nötig

604
00:41:04,000 --> 00:41:06,000
bei der Wavelet-Transformation,

605
00:41:06,000 --> 00:41:08,000
dass Sie das haben.

606
00:41:08,000 --> 00:41:10,000
Trotzdem kriegen Sie hier überwiegend

607
00:41:10,000 --> 00:41:12,000
die Tieffrequenzen, hier überwiegend die Hochfrequenzen.

608
00:41:12,000 --> 00:41:14,000
So,

609
00:41:18,000 --> 00:41:20,000
was man jetzt

610
00:41:20,000 --> 00:41:22,000
bei der H-Transformation, bei der Wavelet-Transformation

611
00:41:22,000 --> 00:41:24,000
typischerweise macht,

612
00:41:24,000 --> 00:41:26,000
Sie filtern

613
00:41:26,000 --> 00:41:28,000
Ihr Signal, Sie teilen Ihr Signal

614
00:41:28,000 --> 00:41:30,000
in zwei Frequenzbänder auf.

615
00:41:30,000 --> 00:41:32,000
Sie wenden also einen

616
00:41:32,000 --> 00:41:34,000
Tiefpassfilter und einen Hochpassfilter an

617
00:41:34,000 --> 00:41:36,000
und dann haben Sie

618
00:41:36,000 --> 00:41:38,000
eigentlich nur noch die halbe Bandbreite.

619
00:41:38,000 --> 00:41:40,000
Das heißt, Sie können Ihr Signal unterabtasten

620
00:41:40,000 --> 00:41:42,000
um den Faktor 2.

621
00:41:42,000 --> 00:41:44,000
Das verbirgt sich hinter diesem hier.

622
00:41:50,000 --> 00:41:52,000
Wenn wir uns dieses Bild

623
00:41:52,000 --> 00:41:54,000
hier nochmal anschauen,

624
00:41:54,000 --> 00:41:56,000
hier ist viel Energie,

625
00:41:56,000 --> 00:41:58,000
hier im Detail ist wenig Energie.

626
00:41:58,000 --> 00:42:00,000
Dann macht es durchaus Sinn,

627
00:42:00,000 --> 00:42:02,000
dort wo ich viel Energie habe,

628
00:42:02,000 --> 00:42:04,000
im Tiefpassband, das nochmal aufzuteilen

629
00:42:04,000 --> 00:42:06,000
und unterabzutasten.

630
00:42:06,000 --> 00:42:08,000
Das Hochpassband,

631
00:42:08,000 --> 00:42:10,000
kann man natürlich auch weiter aufteilen,

632
00:42:10,000 --> 00:42:12,000
macht aber keinen Sinn,

633
00:42:12,000 --> 00:42:14,000
da können Sie nicht mehr viel lernen

634
00:42:14,000 --> 00:42:16,000
oder die Energie aufteilen.

635
00:42:16,000 --> 00:42:18,000
Dann spricht man auch von einer

636
00:42:18,000 --> 00:42:20,000
Teilbandzerlegung.

637
00:42:20,000 --> 00:42:22,000
Mit dem Beispiel, was wir hier eben hatten,

638
00:42:22,000 --> 00:42:24,000
kriegen wir drei Bänder

639
00:42:24,000 --> 00:42:26,000
und diese drei Bänder,

640
00:42:26,000 --> 00:42:28,000
die liegen dann im Frequenzbereich

641
00:42:28,000 --> 00:42:30,000
so nebeneinander. Sie überlappen sich,

642
00:42:30,000 --> 00:42:32,000
weil wir keine idealen Filter haben.

643
00:42:34,000 --> 00:42:36,000
Hier sehen Sie mal,

644
00:42:36,000 --> 00:42:38,000
wie das mit den idealen Bildern aussieht.

645
00:42:40,000 --> 00:42:42,000
Dieses Bild,

646
00:42:42,000 --> 00:42:44,000
jetzt eine

647
00:42:44,000 --> 00:42:46,000
Tiefpassfilterung

648
00:42:46,000 --> 00:42:48,000
in horizontaler Richtung,

649
00:42:48,000 --> 00:42:50,000
dann wird es horizontal, um den Faktor 2

650
00:42:50,000 --> 00:42:52,000
kleiner können wir unterabtasten.

651
00:42:52,000 --> 00:42:54,000
Dann in vertikaler Richtung,

652
00:42:54,000 --> 00:42:56,000
kleiner,

653
00:42:56,000 --> 00:42:58,000
dann ist das hier

654
00:42:58,000 --> 00:43:00,000
das tiefpassgefilterte Bild.

655
00:43:00,000 --> 00:43:02,000
Horizontal und vertikal.

656
00:43:02,000 --> 00:43:04,000
Hier in einer Richtung

657
00:43:04,000 --> 00:43:06,000
tiefpassgefiltert,

658
00:43:06,000 --> 00:43:08,000
in der anderen Richtung hochpassgefiltert.

659
00:43:08,000 --> 00:43:10,000
Hier genau umgekehrt.

660
00:43:10,000 --> 00:43:12,000
Hier genau umgekehrt

661
00:43:12,000 --> 00:43:14,000
und hier in beide Richtungen

662
00:43:14,000 --> 00:43:16,000
hochpassgefiltert.

663
00:43:16,000 --> 00:43:18,000
Sie sehen auch den

664
00:43:18,000 --> 00:43:20,000
Unterschied, hier diese Kante zum Beispiel

665
00:43:20,000 --> 00:43:22,000
ist ganz klar sichtbar.

666
00:43:22,000 --> 00:43:24,000
Das heißt, hier haben wir

667
00:43:24,000 --> 00:43:26,000
einen Hochpass in

668
00:43:26,000 --> 00:43:28,000
horizontaler Richtung,

669
00:43:28,000 --> 00:43:30,000
Tiefpass dann in vertikaler Richtung.

670
00:43:30,000 --> 00:43:32,000
Diese gleiche Kante ist hier nicht zu sehen.

671
00:43:34,000 --> 00:43:36,000
Das heißt, da waren die Filter genau andersrum.

672
00:43:36,000 --> 00:43:38,000
Hier Hochpassfilterung

673
00:43:38,000 --> 00:43:40,000
in beide Richtungen ist die Kante zu sehen.

674
00:43:40,000 --> 00:43:42,000
Dann wird

675
00:43:42,000 --> 00:43:44,000
letztendlich das tiefpassgefilterte Bild

676
00:43:44,000 --> 00:43:46,000
in unserem zweidimensionalen Fall

677
00:43:46,000 --> 00:43:48,000
das zweimal tiefpassgefilterte Bild,

678
00:43:48,000 --> 00:43:50,000
also dieses hier. Horizontal und vertikal

679
00:43:50,000 --> 00:43:52,000
tiefpassgefilterte Bild.

680
00:43:52,000 --> 00:43:54,000
Das wird dann nochmal zerlegt,

681
00:43:54,000 --> 00:43:56,000
so wie das hier

682
00:43:56,000 --> 00:43:58,000
dargestellt wird.

683
00:43:58,000 --> 00:44:00,000
In diesem Bild werden nochmal vier Bilder

684
00:44:00,000 --> 00:44:02,000
gemacht und Sie sehen

685
00:44:02,000 --> 00:44:04,000
in dem Bild, was zweimal

686
00:44:04,000 --> 00:44:06,000
tiefpassgefiltert ist,

687
00:44:06,000 --> 00:44:08,000
zweimal hoch, zweimal vertikal

688
00:44:08,000 --> 00:44:10,000
und dann auch entsprechend runter abgetastet.

689
00:44:10,000 --> 00:44:12,000
Haben Sie immer noch das Originalbild, können das erkennen.

690
00:44:12,000 --> 00:44:14,000
Das ist natürlich nicht mehr so scharf.

691
00:44:14,000 --> 00:44:16,000
Und dann haben Sie hier

692
00:44:16,000 --> 00:44:18,000
diese vier Komponenten. Wenn Sie diese vier Komponenten

693
00:44:18,000 --> 00:44:20,000
alle kennen, können Sie das hier berechnen.

694
00:44:20,000 --> 00:44:22,000
Durch Interpolation

695
00:44:22,000 --> 00:44:24,000
und

696
00:44:24,000 --> 00:44:26,000
durch Interpolation

697
00:44:32,000 --> 00:44:34,000
Das können Sie

698
00:44:34,000 --> 00:44:36,000
spaltenweise

699
00:44:36,000 --> 00:44:38,000
berechnen.

700
00:44:38,000 --> 00:44:40,000
Können Sie sich zu Hause angucken.

701
00:44:40,000 --> 00:44:42,000
Hier die Transformationsgröße.

702
00:44:42,000 --> 00:44:44,000
Wenn Sie

703
00:44:44,000 --> 00:44:46,000
die Transformationsgröße

704
00:44:46,000 --> 00:44:48,000
haben für die H-Transformation,

705
00:44:48,000 --> 00:44:50,000
da war das ja H1, daraus berechnen wir H2

706
00:44:50,000 --> 00:44:52,000
und wir haben jetzt

707
00:44:52,000 --> 00:44:54,000
hier das

708
00:44:54,000 --> 00:44:56,000
Konica-Produkt,

709
00:44:56,000 --> 00:44:58,000
das mit diesen Basisbildern dazu führt, dass

710
00:44:58,000 --> 00:45:00,000
den gleichen Teil hatten wir ja eben

711
00:45:00,000 --> 00:45:02,000
viermal haben.

712
00:45:02,000 --> 00:45:04,000
Hier haben wir die gleiche

713
00:45:04,000 --> 00:45:06,000
Transformation jetzt

714
00:45:06,000 --> 00:45:08,000
nach Frequenzen geordnet.

715
00:45:08,000 --> 00:45:10,000
Aber wir kriegen

716
00:45:10,000 --> 00:45:12,000
die Ortsauflösung.

717
00:45:12,000 --> 00:45:14,000
Das erkennen Sie zum Beispiel hier.

718
00:45:14,000 --> 00:45:16,000
Das hier ist ja ein Hochpassfilter.

719
00:45:16,000 --> 00:45:18,000
Ich berechne die Differenz zwischen zwei

720
00:45:18,000 --> 00:45:20,000
benachbarten Bildpunkten und das mache ich

721
00:45:20,000 --> 00:45:22,000
an verschiedenen Stellen.

722
00:45:22,000 --> 00:45:24,000
Den Gleichanteil

723
00:45:26,000 --> 00:45:28,000
kriege ich nur einmal.

724
00:45:32,000 --> 00:45:34,000
Die nächste Frequenz,

725
00:45:34,000 --> 00:45:36,000
die höhere Frequenz,

726
00:45:42,000 --> 00:45:44,000
die kriege ich auch nur einmal.

727
00:45:44,000 --> 00:45:46,000
Dann die nächste

728
00:45:46,000 --> 00:45:48,000
höhere Frequenz,

729
00:45:48,000 --> 00:45:50,000
die kriege ich

730
00:45:50,000 --> 00:45:52,000
Ortsauflösung, zweimal.

731
00:45:52,000 --> 00:45:54,000
Und noch mal eine Frequenz

732
00:45:54,000 --> 00:45:56,000
höher.

733
00:45:56,000 --> 00:45:58,000
Das kriege ich viermal.

734
00:45:58,000 --> 00:46:00,000
Also je höher die Frequenz ist,

735
00:46:00,000 --> 00:46:02,000
desto besser ist die Ortsauflösung.

736
00:46:02,000 --> 00:46:04,000
Ist auch irgendwie klar,

737
00:46:04,000 --> 00:46:06,000
wenn ich eine ganz tiefe Frequenz habe,

738
00:46:06,000 --> 00:46:08,000
die braucht Platz, um sich auszubilden.

739
00:46:10,000 --> 00:46:12,000
Wenn ich irgendwas hochflicke,

740
00:46:12,000 --> 00:46:14,000
wenn ich irgendwas hochfrequentes habe,

741
00:46:14,000 --> 00:46:16,000
das kann ich viel besser

742
00:46:16,000 --> 00:46:18,000
lokalisieren.

743
00:46:18,000 --> 00:46:20,000
Hier sind die Basisfunktionen

744
00:46:20,000 --> 00:46:22,000
nochmal dargestellt.

745
00:46:22,000 --> 00:46:24,000
Sie sehen in diesem Bild das, was ich Ihnen

746
00:46:24,000 --> 00:46:26,000
gerade erzählt habe.

747
00:46:32,000 --> 00:46:34,000
Auch die

748
00:46:34,000 --> 00:46:36,000
Haartransformation können Sie dann natürlich schnell

749
00:46:36,000 --> 00:46:38,000
berechnen. Das sind eben Additionen und Subtraktionen.

750
00:46:42,000 --> 00:46:44,000
Die Grauwerte

751
00:46:44,000 --> 00:46:46,000
berechnen Sie die 1. Ebene, 2. Ebene, 3. Ebene.

752
00:46:48,000 --> 00:46:50,000
Die Summen liefern immer einen Tiefpass,

753
00:46:50,000 --> 00:46:52,000
das Gleichanteil ähnlich ist.

754
00:46:52,000 --> 00:46:54,000
Die Differenzen liefern Ihnen

755
00:46:54,000 --> 00:46:56,000
immer den Hochpassfilter.

756
00:46:58,000 --> 00:47:00,000
Und hier haben wir jetzt die Basisbilder.

757
00:47:00,000 --> 00:47:02,000
Die wichtige Überlagerung

758
00:47:02,000 --> 00:47:04,000
dieser Basisbilder

759
00:47:04,000 --> 00:47:06,000
liefert Ihnen

760
00:47:06,000 --> 00:47:08,000
das Bild,

761
00:47:08,000 --> 00:47:10,000
was Sie synthetisieren wollen.

762
00:47:10,000 --> 00:47:12,000
Sie sehen

763
00:47:14,000 --> 00:47:16,000
mit steigender

764
00:47:16,000 --> 00:47:18,000
Frequenz, hier haben wir

765
00:47:18,000 --> 00:47:20,000
Gleichanteil, hier haben wir eine Frequenz,

766
00:47:20,000 --> 00:47:22,000
diese Frequenz ist doppelt so groß. Wir haben zwar

767
00:47:22,000 --> 00:47:24,000
nur einen Schwarz-Weiß-Wechsel, aber

768
00:47:24,000 --> 00:47:26,000
jetzt auf der Hälfte des Bildes,

769
00:47:26,000 --> 00:47:28,000
statt auf dem ganzen Bild, damit hat sich die Frequenz verdoppelt.

770
00:47:28,000 --> 00:47:30,000
Das kriegen wir dann zweimal

771
00:47:30,000 --> 00:47:32,000
aufgelöst und die noch höhere Frequenz

772
00:47:32,000 --> 00:47:34,000
kriegen wir

773
00:47:34,000 --> 00:47:36,000
vierfach aufgelöst. Das Gleiche gilt

774
00:47:36,000 --> 00:47:38,000
in dieser Richtung und dann entsprechend in der Diagonalen,

775
00:47:38,000 --> 00:47:40,000
wo wir dann diese

776
00:47:40,000 --> 00:47:42,000
Auflösung und

777
00:47:42,000 --> 00:47:44,000
acht verschiedenen

778
00:47:44,000 --> 00:47:46,000
Orten haben.

779
00:47:48,000 --> 00:47:50,000
Was kann man damit

780
00:47:50,000 --> 00:47:52,000
machen? Sie könnten zum Beispiel

781
00:47:52,000 --> 00:47:54,000
ein Signal

782
00:47:54,000 --> 00:47:56,000
entrauschen.

783
00:47:58,000 --> 00:48:00,000
Hier mal ein Eingangssignal.

784
00:48:04,000 --> 00:48:06,000
Hier die Haartransformation.

785
00:48:08,000 --> 00:48:10,000
Alle kleinen

786
00:48:10,000 --> 00:48:12,000
Koeffizienten setzen Sie jetzt

787
00:48:12,000 --> 00:48:14,000
zu null.

788
00:48:16,000 --> 00:48:18,000
Das wäre dann hier das

789
00:48:18,000 --> 00:48:20,000
entrauschte Signal an dieser Stelle.

790
00:48:20,000 --> 00:48:22,000
Das entrauschte Signal mit

791
00:48:22,000 --> 00:48:24,000
allen Koeffizienten,

792
00:48:24,000 --> 00:48:26,000
die einen gewissen Schwerwert

793
00:48:26,000 --> 00:48:28,000
überschreiten. Wenn Sie das dann

794
00:48:28,000 --> 00:48:30,000
zurücktransformieren,

795
00:48:30,000 --> 00:48:32,000
dann haben Sie das Eingangssignal

796
00:48:32,000 --> 00:48:34,000
ohne dieses

797
00:48:34,000 --> 00:48:36,000
hochfrequente Rauschen. Warum passiert

798
00:48:36,000 --> 00:48:38,000
das? Weil Sie

799
00:48:38,000 --> 00:48:40,000
alle Koeffizienten, zum Beispiel

800
00:48:40,000 --> 00:48:42,000
diese hier,

801
00:48:42,000 --> 00:48:44,000
die hohe Frequenzen beschreiben,

802
00:48:44,000 --> 00:48:46,000
wenn sie klein sind,

803
00:48:46,000 --> 00:48:48,000
wegdrücken.

804
00:48:48,000 --> 00:48:50,000
Wenn

805
00:48:50,000 --> 00:48:52,000
Sie an irgendeiner Stelle

806
00:48:52,000 --> 00:48:54,000
in diesem Bild sehr viel

807
00:48:54,000 --> 00:48:56,000
Energie

808
00:48:56,000 --> 00:48:58,000
mit diesem Muster haben,

809
00:48:58,000 --> 00:49:00,000
dann wird die Schwellwertentscheidung diesen Koeffizienten

810
00:49:00,000 --> 00:49:02,000
durchlassen. Das heißt, es wird

811
00:49:02,000 --> 00:49:04,000
wirklich nur eine Entrauschung

812
00:49:04,000 --> 00:49:06,000
durchgeführt.

813
00:49:06,000 --> 00:49:08,000
Es ist nicht eine

814
00:49:08,000 --> 00:49:10,000
Tiefpassfilterung, die würde

815
00:49:10,000 --> 00:49:12,000
hohe Frequenzen einfach wegdrücken,

816
00:49:12,000 --> 00:49:14,000
sondern das sorgt jetzt

817
00:49:14,000 --> 00:49:16,000
nur dafür, dass wenn

818
00:49:16,000 --> 00:49:18,000
Sie bei einer gewissen Frequenz am Ort

819
00:49:18,000 --> 00:49:20,000
wenig Energie haben, dann wird das

820
00:49:20,000 --> 00:49:22,000
platt gemacht. Wenn Sie dort

821
00:49:22,000 --> 00:49:24,000
viel Energie haben, ist die Annahme, es ist kein Rauschen

822
00:49:24,000 --> 00:49:26,000
und das Signal bleibt erhalten.

823
00:49:26,000 --> 00:49:28,000
Zum Beispiel an dieser Stelle.

824
00:49:28,000 --> 00:49:30,000
Und somit

825
00:49:30,000 --> 00:49:32,000
ist das

826
00:49:32,000 --> 00:49:34,000
Signal, das hier

827
00:49:34,000 --> 00:49:36,000
eher tieffrequent ist, hier

828
00:49:36,000 --> 00:49:38,000
haben wir nur einen Gleichanteil und hier

829
00:49:38,000 --> 00:49:40,000
haben wir eine hohe Frequenz. So bleiben

830
00:49:40,000 --> 00:49:42,000
diese ganzen Frequenzen erhalten

831
00:49:42,000 --> 00:49:44,000
halt eben ohne das Rauschen.

832
00:49:44,000 --> 00:49:46,000
Hier haben wir immer wieder

833
00:49:46,000 --> 00:49:48,000
tiefe Frequenzen, Gleichanteil,

834
00:49:48,000 --> 00:49:50,000
hohe Frequenzen.

835
00:49:50,000 --> 00:49:52,000
Ja,

836
00:49:52,000 --> 00:49:54,000
HMR-Transformation

837
00:49:54,000 --> 00:49:56,000
und

838
00:49:56,000 --> 00:49:58,000
H-Transformation, der Unterschied

839
00:49:58,000 --> 00:50:00,000
ist letztendlich,

840
00:50:00,000 --> 00:50:02,000
was wird weiter

841
00:50:02,000 --> 00:50:04,000
verarbeitet.

842
00:50:04,000 --> 00:50:06,000
Machen Sie die Aufteilung

843
00:50:06,000 --> 00:50:08,000
nur, eine weitere hierarchische

844
00:50:08,000 --> 00:50:10,000
Aufteilung nur von dem

845
00:50:10,000 --> 00:50:12,000
tiefpassgefilterten Bild oder machen wir das

846
00:50:12,000 --> 00:50:14,000
auf allen Ebenen.

847
00:50:14,000 --> 00:50:16,000
Das sehen Sie hier

848
00:50:16,000 --> 00:50:18,000
an den Balken.

849
00:50:18,000 --> 00:50:20,000
Das sehen Sie hier an den Basisbildern.

850
00:50:20,000 --> 00:50:22,000
Hier wird auf allen Ebenen

851
00:50:22,000 --> 00:50:24,000
die hohe Frequenz weiter analysiert.

852
00:50:24,000 --> 00:50:26,000
Bei der

853
00:50:26,000 --> 00:50:28,000
zu Anfang gezeigten

854
00:50:28,000 --> 00:50:30,000
Hadamard-Transformation

855
00:50:30,000 --> 00:50:32,000
oder bei den Anwendungen für die Wavelets

856
00:50:32,000 --> 00:50:34,000
haben wir immer nur das tiefpassgefilterte Bild

857
00:50:34,000 --> 00:50:36,000
weiter zerlegt.

858
00:50:40,000 --> 00:50:42,000
Die Wavelets,

859
00:50:42,000 --> 00:50:44,000
die

860
00:50:44,000 --> 00:50:46,000
gerne eingesetzt werden,

861
00:50:46,000 --> 00:50:48,000
wenn wir nicht die

862
00:50:48,000 --> 00:50:50,000
ganz

863
00:50:50,000 --> 00:50:52,000
einfache Arithmetik

864
00:50:52,000 --> 00:50:54,000
haben wollen, wie sie uns

865
00:50:54,000 --> 00:50:56,000
Hadamard- und H-Transformationen liefert,

866
00:50:56,000 --> 00:50:58,000
sind die Dobuishi-Wavelets.

867
00:50:58,000 --> 00:51:00,000
Sie liefern uns

868
00:51:00,000 --> 00:51:02,000
auch eine

869
00:51:02,000 --> 00:51:04,000
Ortsfrequenz

870
00:51:04,000 --> 00:51:06,000
Auflösung,

871
00:51:08,000 --> 00:51:10,000
aber mit,

872
00:51:10,000 --> 00:51:12,000
das erkennen Sie hier,

873
00:51:12,000 --> 00:51:14,000
mehr Rechenaufwand und dann

874
00:51:14,000 --> 00:51:16,000
wird die Energieanalyse

875
00:51:16,000 --> 00:51:18,000
etwas sauberer gemacht oder die Frequenzanalyse

876
00:51:18,000 --> 00:51:20,000
wird sauberer gemacht, die Energie wird

877
00:51:20,000 --> 00:51:22,000
verdichtet. Das heißt, wir brauchen

878
00:51:22,000 --> 00:51:24,000
zur Beschreibung des selben Bildsignals

879
00:51:24,000 --> 00:51:26,000
weniger Koeffizienten.

880
00:51:26,000 --> 00:51:28,000
Diese wenigeren Koeffizienten haben mehr Energie

881
00:51:28,000 --> 00:51:30,000
und können das Bild dann genauso gut beschreiben.

882
00:51:30,000 --> 00:51:32,000
Auch hier sind die

883
00:51:32,000 --> 00:51:34,000
Basisfunktionen wieder eine Ortonormalbasis.

884
00:51:38,000 --> 00:51:40,000
Basisbilder für

885
00:51:40,000 --> 00:51:42,000
die Dobuishi-Wavelets

886
00:51:42,000 --> 00:51:44,000
sehen Sie hier.

887
00:51:46,000 --> 00:51:48,000
Ich weiß jetzt nicht so richtig,

888
00:51:48,000 --> 00:51:50,000
was man hier sehen soll, außer, dass wir

889
00:51:50,000 --> 00:51:52,000
in dieser Richtung wieder

890
00:51:52,000 --> 00:51:54,000
steigende

891
00:51:54,000 --> 00:51:56,000
Frequenzen haben.

892
00:51:56,000 --> 00:51:58,000
Wir sehen, dass wir offensichtlich

893
00:51:58,000 --> 00:52:00,000
hier eine

894
00:52:00,000 --> 00:52:02,000
Ortsauflösung

895
00:52:02,000 --> 00:52:04,000
bekommen für die höheren Frequenzen.

896
00:52:06,000 --> 00:52:08,000
Letztendlich genauso wie bei der

897
00:52:08,000 --> 00:52:10,000
letztgezeigten Transformation.

898
00:52:10,000 --> 00:52:12,000
Wie auch immer man

899
00:52:12,000 --> 00:52:14,000
diese Wavelets berechnet,

900
00:52:14,000 --> 00:52:16,000
ist vielleicht gar nicht so

901
00:52:16,000 --> 00:52:18,000
wichtig, aber von der Darstellung her

902
00:52:18,000 --> 00:52:20,000
bekommen Sie etwas, was wir

903
00:52:20,000 --> 00:52:22,000
hier sehen und das ist

904
00:52:22,000 --> 00:52:24,000
letztendlich genauso für die

905
00:52:24,000 --> 00:52:26,000
anderen

906
00:52:26,000 --> 00:52:28,000
waveletartigen

907
00:52:28,000 --> 00:52:30,000
Transformationen. Hier haben wir den Ortsbereich,

908
00:52:30,000 --> 00:52:32,000
hier haben wir den Frequenzbereich.

909
00:52:34,000 --> 00:52:36,000
Die tiefen Frequenzen

910
00:52:36,000 --> 00:52:38,000
kommen wir mit niedriger

911
00:52:38,000 --> 00:52:40,000
örtlicher Auflösung.

912
00:52:40,000 --> 00:52:42,000
Je höher die Frequenzen werden,

913
00:52:42,000 --> 00:52:44,000
desto höher ist die

914
00:52:44,000 --> 00:52:46,000
örtliche Auflösung.

915
00:52:52,000 --> 00:52:54,000
Die Darstellung,

916
00:52:54,000 --> 00:52:56,000
die man dann häufig hat,

917
00:52:56,000 --> 00:52:58,000
wenn Sie ein

918
00:52:58,000 --> 00:53:00,000
eindimensionales Signal

919
00:53:00,000 --> 00:53:02,000
betrachten, ist

920
00:53:02,000 --> 00:53:04,000
die, dass wir

921
00:53:04,000 --> 00:53:06,000
hier die

922
00:53:06,000 --> 00:53:08,000
Frequenz-Orts-Ebene haben.

923
00:53:08,000 --> 00:53:10,000
Da werden dann diese Kästchen

924
00:53:10,000 --> 00:53:12,000
eingezeichnet

925
00:53:12,000 --> 00:53:14,000
und

926
00:53:14,000 --> 00:53:16,000
in Farbe wird

927
00:53:16,000 --> 00:53:18,000
dann codiert, wie viel Energie da ist.

928
00:53:18,000 --> 00:53:20,000
Sodass Sie diese Bilder dann immer

929
00:53:22,000 --> 00:53:24,000
in Farbe

930
00:53:24,000 --> 00:53:26,000
sehen und dann könnte man sehen,

931
00:53:26,000 --> 00:53:28,000
hier ist vielleicht wenig

932
00:53:28,000 --> 00:53:30,000
hochfrequente Energie und hier ist entsprechend mehr.

933
00:53:32,000 --> 00:53:34,000
Von der Berechnung her

934
00:53:36,000 --> 00:53:38,000
sind alles

935
00:53:38,000 --> 00:53:40,000
separierbare Transformationen. Das heißt,

936
00:53:40,000 --> 00:53:42,000
Sie berechnen das

937
00:53:42,000 --> 00:53:44,000
zeilenweise und dann spaltenweise oder umgekehrt,

938
00:53:44,000 --> 00:53:46,000
aber immer nur eindimensional.

939
00:53:48,000 --> 00:53:50,000
Sie haben einen Hochpassfilter, Sie haben einen Tiefpassfilter.

940
00:53:50,000 --> 00:53:52,000
Sie schicken Ihr Signal durch

941
00:53:52,000 --> 00:53:54,000
das Hochpassfilter und das Tiefpassfilter

942
00:53:56,000 --> 00:53:58,000
und dann machen Sie eine Unterabtastung im Faktor 2.

943
00:54:00,000 --> 00:54:02,000
Das heißt, Sie schmeißen jeden zweiten

944
00:54:02,000 --> 00:54:04,000
Bildpunkt oder

945
00:54:04,000 --> 00:54:06,000
Koeffizienten weg.

946
00:54:06,000 --> 00:54:08,000
Das ist also ganz einfach.

947
00:54:08,000 --> 00:54:10,000
Dieses Signal

948
00:54:10,000 --> 00:54:12,000
filtern Sie dann wieder.

949
00:54:14,000 --> 00:54:16,000
Machen Sie wieder eine Unterabtastung

950
00:54:16,000 --> 00:54:18,000
durch

951
00:54:18,000 --> 00:54:20,000
wegschmeißen

952
00:54:20,000 --> 00:54:22,000
eines jeden zweiten Koeffizienten

953
00:54:22,000 --> 00:54:24,000
und dann haben Sie hier zum Beispiel

954
00:54:24,000 --> 00:54:26,000
vier Signale, hier zweimal Tiefpass gefiltert,

955
00:54:26,000 --> 00:54:28,000
Tiefpass, Hochpass, Hochpass, Tiefpass.

956
00:54:28,000 --> 00:54:30,000
Wenn wir jetzt die Anzahl der

957
00:54:30,000 --> 00:54:32,000
Koeffizienten, die wir haben, zählen,

958
00:54:32,000 --> 00:54:34,000
haben wir hier zum Beispiel n mal n

959
00:54:34,000 --> 00:54:36,000
Bildpunkte

960
00:54:36,000 --> 00:54:38,000
und dann hätten wir hier an dieser Stelle

961
00:54:38,000 --> 00:54:40,000
nur zweimal n mal n.

962
00:54:40,000 --> 00:54:42,000
Dann wird aber unterabgetastet

963
00:54:42,000 --> 00:54:44,000
und dann haben wir auch an dieser Stelle nur n mal n

964
00:54:44,000 --> 00:54:46,000
und hier auch nur n mal n

965
00:54:48,000 --> 00:54:50,000
Koeffizienten.

966
00:54:50,000 --> 00:54:52,000
Okay.

967
00:54:52,000 --> 00:54:54,000
Damit sind wir dann auch schon

968
00:54:54,000 --> 00:54:56,000
am Ende.

969
00:54:56,000 --> 00:54:58,000
Das hier sind die ganzen Transformationen,

970
00:54:58,000 --> 00:55:00,000
die wir eben besprochen hatten.

971
00:55:00,000 --> 00:55:02,000
Die Derbyschee-Wavelets werden

972
00:55:02,000 --> 00:55:04,000
überwiegend in der Kompression

973
00:55:04,000 --> 00:55:06,000
eingesetzt.

974
00:55:06,000 --> 00:55:08,000
JPEG 2000 als ein Beispiel.

975
00:55:08,000 --> 00:55:10,000
Nochmal eine ganz andere

976
00:55:10,000 --> 00:55:12,000
Anwendung, die wir hier

977
00:55:12,000 --> 00:55:14,000
haben, ist der

978
00:55:14,000 --> 00:55:16,000
JPEG 2000.

979
00:55:16,000 --> 00:55:18,000
Der JPEG 2000

980
00:55:18,000 --> 00:55:20,000
ist aber eine ganz andere Anwendung.

981
00:55:20,000 --> 00:55:22,000
Die ist auf jedem Fotoapparat

982
00:55:22,000 --> 00:55:24,000
oder auf jedem Handy, was Gesichter erkennt,

983
00:55:24,000 --> 00:55:26,000
drin.

984
00:55:26,000 --> 00:55:28,000
Diese Kameras, die erzeugen

985
00:55:28,000 --> 00:55:30,000
ja, die detektieren

986
00:55:30,000 --> 00:55:32,000
Gesichter und Ihnen ist wahrscheinlich auch

987
00:55:32,000 --> 00:55:34,000
aufgefallen, wenn Sie Ihre Kamera um

988
00:55:34,000 --> 00:55:36,000
45 Grad drehen, dann sind die Gesichter weg.

989
00:55:36,000 --> 00:55:38,000
Sie sehen sie noch, aber die Detektion funktioniert nicht.

990
00:55:42,000 --> 00:55:44,000
Letztendlich wird eine

991
00:55:44,000 --> 00:55:46,000
Gesichtsdetektion dadurch

992
00:55:46,000 --> 00:55:48,000
umgesetzt.

993
00:55:48,000 --> 00:55:50,000
Die

994
00:55:52,000 --> 00:55:54,000
Bilder werden gefiltert mit

995
00:55:54,000 --> 00:55:56,000
diesen H-like Features

996
00:55:56,000 --> 00:55:58,000
und

997
00:55:58,000 --> 00:56:00,000
wenn Sie dann an den

998
00:56:00,000 --> 00:56:02,000
richtigen Stellen Ausschläge

999
00:56:02,000 --> 00:56:04,000
bekommen in den Transformationskoeffizienten,

1000
00:56:04,000 --> 00:56:06,000
dann wird irgendwann

1001
00:56:06,000 --> 00:56:08,000
gesagt, da ist ein Gesicht.

1002
00:56:12,000 --> 00:56:14,000
Okay.

1003
00:56:14,000 --> 00:56:16,000
So viel zu diesem Datensatz.

1004
00:56:32,000 --> 00:56:34,000
Dann kommen wir jetzt noch

1005
00:56:34,000 --> 00:56:36,000
zu Bildpyramiden und

1006
00:56:36,000 --> 00:56:38,000
Multiresolutionsdarstellung.

1007
00:56:38,000 --> 00:56:40,000
Wir haben hier in dieser Stelle

1008
00:56:40,000 --> 00:56:42,000
gesehen, dass man durch

1009
00:56:42,000 --> 00:56:44,000
Tiefpassfilterung und Unterabtastung

1010
00:56:44,000 --> 00:56:46,000
das gleiche Bild

1011
00:56:46,000 --> 00:56:48,000
bekommt, nur in klein und dann

1012
00:56:48,000 --> 00:56:50,000
natürlich auch nicht ganz so scharf, also Details gehen verloren.

1013
00:56:50,000 --> 00:56:52,000
Und das ist dann

1014
00:56:52,000 --> 00:56:54,000
auch etwas, was man in einer

1015
00:56:54,000 --> 00:56:56,000
Bildpyramide darstellen kann.

1016
00:56:56,000 --> 00:56:58,000
Wenn ich jetzt nicht unterabtaste

1017
00:56:58,000 --> 00:57:00,000
oder Teile des Bildes wegschmeiße,

1018
00:57:00,000 --> 00:57:02,000
sondern ich habe hier mein Originalbild,

1019
00:57:02,000 --> 00:57:04,000
filtere das,

1020
00:57:04,000 --> 00:57:06,000
dann habe ich hier das Bild in halber Auflösung,

1021
00:57:06,000 --> 00:57:08,000
hier in einem Viertel der Auflösung,

1022
00:57:08,000 --> 00:57:10,000
dann habe ich eine Bildpyramide.

1023
00:57:10,000 --> 00:57:12,000
Je nachdem,

1024
00:57:12,000 --> 00:57:14,000
wie ich das filtere, was für Filter ich

1025
00:57:14,000 --> 00:57:16,000
verwende, heißen diese

1026
00:57:16,000 --> 00:57:18,000
Filter dann vielleicht auch anders.

1027
00:57:18,000 --> 00:57:20,000
Oder die Pyramiden

1028
00:57:20,000 --> 00:57:22,000
und Bildpyramiden heißen eine Gauss-Pyramide,

1029
00:57:22,000 --> 00:57:24,000
wenn ich einen Gauss-Filter verwende von einer Stufe

1030
00:57:24,000 --> 00:57:26,000
zur nächsten.

1031
00:57:26,000 --> 00:57:28,000
Bildpyramiden

1032
00:57:28,000 --> 00:57:30,000
werden auch manchmal als Multiresolution-Darstellung

1033
00:57:30,000 --> 00:57:32,000
bezeichnet, weil sie

1034
00:57:32,000 --> 00:57:34,000
eben ein Bild in verschiedenen

1035
00:57:34,000 --> 00:57:36,000
Auflösungen haben.

1036
00:57:36,000 --> 00:57:38,000
Im Gegensatz

1037
00:57:38,000 --> 00:57:40,000
zu der Wavelength-Beschreibung, die wir eben hatten,

1038
00:57:40,000 --> 00:57:42,000
bei der die

1039
00:57:42,000 --> 00:57:44,000
Zerlegung des Bildes mit

1040
00:57:44,000 --> 00:57:46,000
der Unterabtastung dazu führte, dass die Anzahl

1041
00:57:46,000 --> 00:57:48,000
der Koeffizienten, mit denen

1042
00:57:48,000 --> 00:57:50,000
ich das Bild beschreibe, immer

1043
00:57:50,000 --> 00:57:52,000
n mal n war oder n mal m, wenn das Bild

1044
00:57:52,000 --> 00:57:54,000
die entsprechende Größe hat,

1045
00:57:54,000 --> 00:57:56,000
wird hier

1046
00:57:56,000 --> 00:57:58,000
die Anzahl der Bildpunkte verdoppelt.

1047
00:57:58,000 --> 00:58:00,000
Wenn ich hier n mal n habe, dann habe ich hier n Quadrat

1048
00:58:00,000 --> 00:58:02,000
Viertel und hier habe ich

1049
00:58:02,000 --> 00:58:04,000
n Quadrat Sechzehntel Bildpunkte, die dazukommen.

1050
00:58:08,000 --> 00:58:10,000
Ist aber

1051
00:58:10,000 --> 00:58:12,000
nicht unbedingt blöd.

1052
00:58:12,000 --> 00:58:14,000
Die meisten

1053
00:58:14,000 --> 00:58:16,000
Betriebssysteme

1054
00:58:16,000 --> 00:58:18,000
haben ja für Bilder irgendwelche Vorschauen.

1055
00:58:18,000 --> 00:58:20,000
Sie

1056
00:58:20,000 --> 00:58:22,000
gucken in ihrem File Explorer sich die Dateien

1057
00:58:22,000 --> 00:58:24,000
an und sehen dann nicht nur die

1058
00:58:24,000 --> 00:58:26,000
Filenamen, sondern es ist auch ein kleines Bild

1059
00:58:26,000 --> 00:58:28,000
des großen Bildes, was

1060
00:58:28,000 --> 00:58:30,000
da abgespeichert ist, für sie sofort

1061
00:58:30,000 --> 00:58:32,000
sichtbar. Das wäre dann

1062
00:58:32,000 --> 00:58:34,000
letztendlich ein Teil

1063
00:58:34,000 --> 00:58:36,000
einer solchen Bildpyramiden-Darstellung.

1064
00:58:36,000 --> 00:58:38,000
Dass ich von hier nach hier die Unterabtastung

1065
00:58:38,000 --> 00:58:40,000
oder die Auflösungsreduktion

1066
00:58:40,000 --> 00:58:42,000
im Faktor 2 mache,

1067
00:58:42,000 --> 00:58:44,000
muss ja nicht sein.

1068
00:58:44,000 --> 00:58:46,000
Das ist ja genau im Faktor 20.

1069
00:58:50,000 --> 00:58:52,000
Von einer Stufe

1070
00:58:52,000 --> 00:58:54,000
zur nächsten, bei dieser Berechnung der Pyramide,

1071
00:58:54,000 --> 00:58:56,000
geht man letztendlich davon so aus,

1072
00:58:56,000 --> 00:58:58,000
Sie nehmen dieses Signal,

1073
00:58:58,000 --> 00:59:00,000
das hochaufgelöste Signal, Sie filtern es

1074
00:59:00,000 --> 00:59:02,000
und Sie machen eine Unterabtastung.

1075
00:59:02,000 --> 00:59:04,000
Bedeutet dann im Frequenzbereich

1076
00:59:04,000 --> 00:59:06,000
unser Signal

1077
00:59:08,000 --> 00:59:10,000
hier wird durch die

1078
00:59:10,000 --> 00:59:12,000
Tiefpassfilterung bandbegrenzt.

1079
00:59:12,000 --> 00:59:14,000
Hier ist unser Signal

1080
00:59:14,000 --> 00:59:16,000
und das hier ist dann die periodische Wiederholung

1081
00:59:16,000 --> 00:59:18,000
in positive

1082
00:59:18,000 --> 00:59:20,000
und negative Richtung. Durch die

1083
00:59:20,000 --> 00:59:22,000
Bandbegrenzung, Tiefpassfilterung

1084
00:59:22,000 --> 00:59:24,000
wird das Spektrum reduziert.

1085
00:59:24,000 --> 00:59:26,000
Ich habe dann hier Luft, kann dadurch,

1086
00:59:26,000 --> 00:59:28,000
dass ich jeden zweiten Abtastwert

1087
00:59:28,000 --> 00:59:30,000
weglasse, dann die Abtastfrequenz halbieren.

1088
00:59:30,000 --> 00:59:32,000
Diese beiden Signale

1089
00:59:32,000 --> 00:59:34,000
rücken dann wieder

1090
00:59:34,000 --> 00:59:36,000
dichter zusammen, aber

1091
00:59:36,000 --> 00:59:38,000
das hier ist der Frequenzbereich,

1092
00:59:38,000 --> 00:59:40,000
der mich dann interessiert und der

1093
00:59:40,000 --> 00:59:42,000
korrespondiert dann zu diesem

1094
00:59:42,000 --> 00:59:44,000
unterabgetasteten kleineren Signal.

1095
00:59:46,000 --> 00:59:48,000
Sie können zum Beispiel

1096
00:59:48,000 --> 00:59:50,000
einen Binominalfilter nehmen,

1097
00:59:50,000 --> 00:59:52,000
hatten wir

1098
00:59:52,000 --> 00:59:54,000
vor einigen Stunden schon mal

1099
00:59:54,000 --> 00:59:56,000
kennengelernt.

1100
00:59:56,000 --> 00:59:58,000
Hier sehen Sie

1101
00:59:58,000 --> 01:00:00,000
die Filterkoeffizienten.

1102
01:00:02,000 --> 01:00:04,000
Und hier

1103
01:00:04,000 --> 01:00:06,000
werden diese vier

1104
01:00:06,000 --> 01:00:08,000
Bildpunkte berechnet.

1105
01:00:08,000 --> 01:00:10,000
Sie können Ihr Bild tiefpassfiltern und dann

1106
01:00:10,000 --> 01:00:12,000
jeden zweiten Bildpunkt wegschmeißen.

1107
01:00:12,000 --> 01:00:14,000
Sie können natürlich auch nur gleich sagen,

1108
01:00:14,000 --> 01:00:16,000
da ich jeden zweiten Bildpunkt wegschmeiße,

1109
01:00:16,000 --> 01:00:18,000
berechne ich auch noch jeden zweiten Bildpunkt.

1110
01:00:18,000 --> 01:00:20,000
Das ist das, was wir hier gemacht haben.

1111
01:00:20,000 --> 01:00:22,000
Und dann werden

1112
01:00:22,000 --> 01:00:24,000
aus diesen Bildpunkten

1113
01:00:24,000 --> 01:00:26,000
die nächste

1114
01:00:26,000 --> 01:00:28,000
Stufe berechnet.

1115
01:00:32,000 --> 01:00:34,000
Hier

1116
01:00:34,000 --> 01:00:36,000
sehen Sie dann

1117
01:00:36,000 --> 01:00:38,000
die

1118
01:00:40,000 --> 01:00:42,000
Speicherbedarf

1119
01:00:42,000 --> 01:00:44,000
steigt, wenn Sie eine Pyramide

1120
01:00:44,000 --> 01:00:46,000
abspeichern. Wo wird das

1121
01:00:46,000 --> 01:00:48,000
gerne gemacht?

1122
01:00:48,000 --> 01:00:50,000
Wenn Sie irgendwie

1123
01:00:50,000 --> 01:00:52,000
instabile

1124
01:00:52,000 --> 01:00:54,000
Spreizverfahren haben.

1125
01:00:54,000 --> 01:00:56,000
Wir haben ein Bild.

1126
01:00:56,000 --> 01:00:58,000
Stellen Sie sich

1127
01:00:58,000 --> 01:01:00,000
vor, dieses Auto,

1128
01:01:00,000 --> 01:01:02,000
das bewegt sich.

1129
01:01:04,000 --> 01:01:06,000
Stellen Sie sich noch vor, die Kamera bewegt sich.

1130
01:01:06,000 --> 01:01:08,000
Dann haben Sie das Problem,

1131
01:01:08,000 --> 01:01:10,000
und Sie wollen jetzt die Bewegung schätzen,

1132
01:01:10,000 --> 01:01:12,000
dass Sie

1133
01:01:12,000 --> 01:01:14,000
diesen Bildbereich

1134
01:01:14,000 --> 01:01:16,000
in dem einen Bild nehmen und Sie wollen

1135
01:01:16,000 --> 01:01:18,000
in dem zweiten Bild wiederfinden.

1136
01:01:18,000 --> 01:01:20,000
Dann ist das hier alles grau.

1137
01:01:22,000 --> 01:01:24,000
Da ist die Wahrscheinlichkeit

1138
01:01:24,000 --> 01:01:26,000
groß, dass es

1139
01:01:26,000 --> 01:01:28,000
in dem zweiten Bild viele Orte gibt,

1140
01:01:30,000 --> 01:01:32,000
die auch das gleiche Grau haben.

1141
01:01:32,000 --> 01:01:34,000
Die Verschiebung von einem

1142
01:01:34,000 --> 01:01:36,000
Bild zum nächsten beschreibt die Bewegung.

1143
01:01:38,000 --> 01:01:40,000
Welcher

1144
01:01:40,000 --> 01:01:42,000
Vektor, der diese Bewegung beschreibt,

1145
01:01:42,000 --> 01:01:44,000
die Verschiebung von einem Bild zum nächsten,

1146
01:01:44,000 --> 01:01:46,000
ist denn dann der richtige? Ja, man würde sagen, da wo der

1147
01:01:46,000 --> 01:01:48,000
Bildinhalt gleich ist.

1148
01:01:50,000 --> 01:01:52,000
Da haben Sie mehrere Kandidaten.

1149
01:01:52,000 --> 01:01:54,000
Das ist blöd.

1150
01:01:54,000 --> 01:01:56,000
Wenn Sie jetzt eine Bildpyramide haben,

1151
01:01:56,000 --> 01:01:58,000
dann sollte man erstmal das ganz kleine Bild nehmen

1152
01:01:58,000 --> 01:02:00,000
und dort

1153
01:02:00,000 --> 01:02:02,000
einen Block der Größe

1154
01:02:02,000 --> 01:02:04,000
4x4

1155
01:02:04,000 --> 01:02:06,000
nehmen und suchen, wo ist der im zweiten Bild.

1156
01:02:06,000 --> 01:02:08,000
Dieser kleine Block

1157
01:02:08,000 --> 01:02:10,000
würde aber in der

1158
01:02:10,000 --> 01:02:12,000
Originalauflösung

1159
01:02:12,000 --> 01:02:14,000
einen recht großen Bildinhalt beschreiben.

1160
01:02:14,000 --> 01:02:16,000
Das heißt, die Wahrscheinlichkeit,

1161
01:02:16,000 --> 01:02:18,000
dass Sie da einen identischen Block,

1162
01:02:18,000 --> 01:02:20,000
mehrere identische

1163
01:02:20,000 --> 01:02:22,000
Blocke im zweiten Bild finden, ist mehr oder weniger

1164
01:02:22,000 --> 01:02:24,000
gleich 0. Sie können dann also

1165
01:02:24,000 --> 01:02:26,000
die Bewegung in diesem ganz

1166
01:02:26,000 --> 01:02:28,000
klein aufgelösten Bild

1167
01:02:30,000 --> 01:02:32,000
gut schätzen.

1168
01:02:32,000 --> 01:02:34,000
Zuverlässig schätzen. Zuverlässig ist

1169
01:02:34,000 --> 01:02:36,000
vielleicht das richtige Wort.

1170
01:02:38,000 --> 01:02:40,000
Trotzdem

1171
01:02:40,000 --> 01:02:42,000
hat man natürlich dann Probleme,

1172
01:02:42,000 --> 01:02:44,000
wenn Ihr Block dann so

1173
01:02:44,000 --> 01:02:46,000
diesen Bildinhalt hat,

1174
01:02:46,000 --> 01:02:48,000
dann haben Sie da unterschiedliche

1175
01:02:48,000 --> 01:02:50,000
Bewegungen in diesem Block.

1176
01:02:50,000 --> 01:02:52,000
Das werden Sie mit diesem großen Block nicht

1177
01:02:52,000 --> 01:02:54,000
in den Griff kriegen. Deswegen geht man dann,

1178
01:02:54,000 --> 01:02:56,000
nachdem man grob

1179
01:02:56,000 --> 01:02:58,000
Bewegungen in der kleinsten Auflösung geschätzt hat,

1180
01:02:58,000 --> 01:03:00,000
in eine höhere Bildauflösung,

1181
01:03:02,000 --> 01:03:04,000
arbeitet mit der gleichen Blockgröße,

1182
01:03:04,000 --> 01:03:06,000
Anzahl der Bildpunkte, was dann aber

1183
01:03:06,000 --> 01:03:08,000
physikalisch bedeutet, der Bildbereich ist kleiner

1184
01:03:08,000 --> 01:03:10,000
und guckt dann

1185
01:03:10,000 --> 01:03:12,000
diese Blöcke,

1186
01:03:12,000 --> 01:03:14,000
wie bewegen die sich denn. Und da kann man

1187
01:03:14,000 --> 01:03:16,000
den Suchbereich, wie weit dürfen die sich denn

1188
01:03:16,000 --> 01:03:18,000
bewegen, durchaus einschränken, weil man die

1189
01:03:18,000 --> 01:03:20,000
grobe Richtung ja schon in der oberen Ebene

1190
01:03:20,000 --> 01:03:22,000
bekommen hat. Das macht man letztendlich

1191
01:03:22,000 --> 01:03:24,000
hierarchisch. Dann können Sie auch

1192
01:03:24,000 --> 01:03:26,000
rechtsüberlässig für jeden Bildpunkt

1193
01:03:26,000 --> 01:03:28,000
von einem Bild zum nächsten Bewegung schätzen.

1194
01:03:28,000 --> 01:03:30,000
Sie bekommen dann

1195
01:03:30,000 --> 01:03:32,000
solche Verschiebungsvektoren.

1196
01:03:32,000 --> 01:03:34,000
Das macht man gerne auf

1197
01:03:34,000 --> 01:03:36,000
Bildpyramiden.

1198
01:03:36,000 --> 01:03:38,000
Genauso, wenn Sie Objekte wiedererkennen wollen.

1199
01:03:38,000 --> 01:03:40,000
Bleiben wir erstmal

1200
01:03:40,000 --> 01:03:42,000
bei der Bewegung.

1201
01:03:44,000 --> 01:03:46,000
Wir haben hier

1202
01:03:46,000 --> 01:03:48,000
Bild T, Bild T plus 1,

1203
01:03:48,000 --> 01:03:50,000
das vorangegangene

1204
01:03:50,000 --> 01:03:52,000
Bild ist Bild T, das aktuelle Bild ist

1205
01:03:52,000 --> 01:03:54,000
Bild T plus 1.

1206
01:03:54,000 --> 01:03:56,000
Dann will man vielleicht

1207
01:03:56,000 --> 01:03:58,000
wissen,

1208
01:03:58,000 --> 01:04:00,000
wo hat sich dieser Bildbereich

1209
01:04:00,000 --> 01:04:02,000
hin

1210
01:04:02,000 --> 01:04:04,000
geschoben. Und dann

1211
01:04:04,000 --> 01:04:06,000
definiert man sich einen Suchbereich.

1212
01:04:06,000 --> 01:04:08,000
Das ist

1213
01:04:08,000 --> 01:04:10,000
Vorwissen. Man sagt, naja,

1214
01:04:10,000 --> 01:04:12,000
ich will hier Objekte haben, die

1215
01:04:12,000 --> 01:04:14,000
bewegen sich mit

1216
01:04:14,000 --> 01:04:16,000
maximal 150 Kilometer

1217
01:04:16,000 --> 01:04:18,000
pro Stunde. Ich habe eine

1218
01:04:18,000 --> 01:04:20,000
Wiederholrate von 50 Hertz.

1219
01:04:20,000 --> 01:04:22,000
Dann weiß ich,

1220
01:04:22,000 --> 01:04:24,000
wie weit. Und die Objekte haben einen gewissen Abstand

1221
01:04:24,000 --> 01:04:26,000
zur Kamera. Dann weiß ich, wie groß die maximale Bewegung ist.

1222
01:04:26,000 --> 01:04:28,000
Die definiert mir dann den Suchbereich.

1223
01:04:28,000 --> 01:04:30,000
Und dann wird innerhalb dieses

1224
01:04:30,000 --> 01:04:32,000
Suchbereichs letztendlich das Bildsignal

1225
01:04:32,000 --> 01:04:34,000
mit diesem Inhalt gesucht

1226
01:04:34,000 --> 01:04:36,000
durch

1227
01:04:36,000 --> 01:04:38,000
Bildpunktweisenvergleich.

1228
01:04:38,000 --> 01:04:40,000
Dann wird eine

1229
01:04:40,000 --> 01:04:42,000
systematische Suche gemacht. Sie schieben

1230
01:04:42,000 --> 01:04:44,000
ihr Suchfenster

1231
01:04:44,000 --> 01:04:46,000
über alle Bilderbereiche.

1232
01:04:46,000 --> 01:04:48,000
Sie berechnen die

1233
01:04:48,000 --> 01:04:50,000
Differenz zwischen dem Block,

1234
01:04:50,000 --> 01:04:52,000
den Sie wiederfinden wollten,

1235
01:04:52,000 --> 01:04:54,000
im I1 und

1236
01:04:54,000 --> 01:04:56,000
im nächsten Bild berechnen Sie

1237
01:04:56,000 --> 01:04:58,000
die Differenz zu dem verschobenen Block.

1238
01:04:58,000 --> 01:05:00,000
Und dann suchen Sie das Minimum

1239
01:05:00,000 --> 01:05:02,000
dieses SIDs und das liefert Ihnen

1240
01:05:02,000 --> 01:05:04,000
den Bewegungsvektor.

1241
01:05:04,000 --> 01:05:06,000
Das kann man dann auch in verschiedenen

1242
01:05:06,000 --> 01:05:08,000
Hierarchiestufen machen.

1243
01:05:10,000 --> 01:05:12,000
Das sehen Sie dann hier,

1244
01:05:12,000 --> 01:05:14,000
wo Sie dann

1245
01:05:14,000 --> 01:05:16,000
jeweils in diesen Bildern

1246
01:05:16,000 --> 01:05:18,000
dieses

1247
01:05:18,000 --> 01:05:20,000
sogenannte Block Matching,

1248
01:05:20,000 --> 01:05:22,000
was wir hier beschrieben haben,

1249
01:05:22,000 --> 01:05:24,000
mit diesem Kriterium durchführen.

1250
01:05:24,000 --> 01:05:26,000
Und für die

1251
01:05:28,000 --> 01:05:30,000
Initialisierung der Suche

1252
01:05:30,000 --> 01:05:32,000
auf dieser Ebene

1253
01:05:32,000 --> 01:05:34,000
benutzen Sie schon mal die Verschiebung,

1254
01:05:34,000 --> 01:05:36,000
die Sie

1255
01:05:36,000 --> 01:05:38,000
auf der kleineren Ebene

1256
01:05:38,000 --> 01:05:40,000
berechnet haben.

1257
01:05:40,000 --> 01:05:42,000
Heißt also,

1258
01:05:42,000 --> 01:05:44,000
wenn ich jetzt in dieser

1259
01:05:44,000 --> 01:05:46,000
Pyramide

1260
01:05:46,000 --> 01:05:48,000
mich bewege,

1261
01:05:48,000 --> 01:05:50,000
würde ich

1262
01:05:50,000 --> 01:05:52,000
auf der

1263
01:05:52,000 --> 01:05:54,000
ersten Stufe schon mal eine

1264
01:05:54,000 --> 01:05:56,000
Bewegung schätzen und dann

1265
01:05:56,000 --> 01:05:58,000
meinen Suchbereich

1266
01:05:58,000 --> 01:06:00,000
entsprechend der Bewegung,

1267
01:06:00,000 --> 01:06:02,000
die ich in der ersten Ebene

1268
01:06:02,000 --> 01:06:04,000
geschätzt habe, verschieben.

1269
01:06:04,000 --> 01:06:06,000
Und dann nur noch

1270
01:06:06,000 --> 01:06:08,000
in diesem verschobenen Suchbereich suchen.

1271
01:06:08,000 --> 01:06:10,000
Wird

1272
01:06:10,000 --> 01:06:12,000
auch auf Ihrem Handy so gemacht

1273
01:06:12,000 --> 01:06:14,000
für die gesamte Video-Übung.

1274
01:06:18,000 --> 01:06:20,000
Es gibt

1275
01:06:20,000 --> 01:06:22,000
auch die

1276
01:06:22,000 --> 01:06:24,000
Laplace-Pyramiden.

1277
01:06:24,000 --> 01:06:26,000
Bevor ich

1278
01:06:26,000 --> 01:06:28,000
dahin gehe, also das war jetzt

1279
01:06:28,000 --> 01:06:30,000
die

1280
01:06:30,000 --> 01:06:32,000
Bildpyramide für

1281
01:06:32,000 --> 01:06:34,000
die

1282
01:06:34,000 --> 01:06:36,000
Laplace-Pyramide.

1283
01:06:36,000 --> 01:06:38,000
Bildpyramide

1284
01:06:38,000 --> 01:06:40,000
für

1285
01:06:40,000 --> 01:06:42,000
Bewegungsschätzung.

1286
01:06:42,000 --> 01:06:44,000
Eine andere Sache ist,

1287
01:06:44,000 --> 01:06:46,000
Sie wollen Objekte detektieren.

1288
01:06:46,000 --> 01:06:48,000
Was weiß ich,

1289
01:06:48,000 --> 01:06:50,000
einen Würfel

1290
01:06:50,000 --> 01:06:52,000
und Katze.

1291
01:06:52,000 --> 01:06:54,000
Dann brauchen Sie irgendwie eine Beschreibung

1292
01:06:54,000 --> 01:06:56,000
von dieser Katze,

1293
01:06:56,000 --> 01:06:58,000
diesem Objekt.

1294
01:06:58,000 --> 01:07:00,000
Und

1295
01:07:00,000 --> 01:07:02,000
da wollen Sie das aber

1296
01:07:02,000 --> 01:07:04,000
detektieren, unabhängig davon,

1297
01:07:04,000 --> 01:07:06,000
wie groß die Katze im Bild ist.

1298
01:07:06,000 --> 01:07:08,000
Groß im Sinne von, wie viele

1299
01:07:08,000 --> 01:07:10,000
Bildpunkte die Katze

1300
01:07:10,000 --> 01:07:12,000
belegt.

1301
01:07:12,000 --> 01:07:14,000
Auch dann ist so eine

1302
01:07:14,000 --> 01:07:16,000
Multi-Resolution-Darstellung

1303
01:07:16,000 --> 01:07:18,000
natürlich gut.

1304
01:07:18,000 --> 01:07:20,000
Sie würden sich merken,

1305
01:07:20,000 --> 01:07:22,000
wie sieht eine Katze bei hoher

1306
01:07:22,000 --> 01:07:24,000
Auflösung aus?

1307
01:07:24,000 --> 01:07:26,000
Und wie sieht

1308
01:07:26,000 --> 01:07:28,000
die Katze bei

1309
01:07:28,000 --> 01:07:30,000
einer niedrigen Auflösung aus?

1310
01:07:30,000 --> 01:07:32,000
Wieder diese Multi-Resolution-Darstellung

1311
01:07:32,000 --> 01:07:34,000
und suchen dann letztendlich, wenn Sie

1312
01:07:34,000 --> 01:07:36,000
ein neues Bild haben, die Katze in verschiedenen

1313
01:07:36,000 --> 01:07:38,000
Auflösungsstufen.

1314
01:07:54,000 --> 01:07:56,000
Okay, mich hat

1315
01:07:56,000 --> 01:07:58,000
das Netz wieder ausgeschossen.

1316
01:08:02,000 --> 01:08:04,000
Wir können

1317
01:08:04,000 --> 01:08:06,000
diese Filterung,

1318
01:08:06,000 --> 01:08:08,000
die wir hier haben,

1319
01:08:08,000 --> 01:08:10,000
von einer Auflösungsstufe zur nächsten,

1320
01:08:10,000 --> 01:08:12,000
natürlich auch nutzen, um die Differenz

1321
01:08:12,000 --> 01:08:14,000
zwischen diesen beiden Bildern

1322
01:08:14,000 --> 01:08:16,000
zu berechnen.

1323
01:08:16,000 --> 01:08:18,000
Also wir könnten hier das Originalbild,

1324
01:08:18,000 --> 01:08:20,000
wir können es filtern und unter Abtasten

1325
01:08:20,000 --> 01:08:22,000
das unsere Multi-Resolution-Darstellung.

1326
01:08:22,000 --> 01:08:24,000
Wir können jetzt dieses Bild wieder hochfiltern,

1327
01:08:24,000 --> 01:08:26,000
dann sind natürlich die hohen Frequenzen weg,

1328
01:08:26,000 --> 01:08:28,000
im Vergleich zu dem Bild, und wir berechnen die Differenz.

1329
01:08:28,000 --> 01:08:30,000
Die sehen wir hier.

1330
01:08:32,000 --> 01:08:34,000
Das ist dann die Laplace-Pyramide.

1331
01:08:34,000 --> 01:08:36,000
Wir speichern die Differenzen zwischen

1332
01:08:36,000 --> 01:08:38,000
den verschiedenen Blenden dieser

1333
01:08:38,000 --> 01:08:40,000
Gauss-Pyramide.

1334
01:08:52,000 --> 01:08:54,000
Hochfilterung,

1335
01:08:54,000 --> 01:08:56,000
da fügen Sie Nullen ein,

1336
01:08:56,000 --> 01:08:58,000
und dann wird eine Filterung durchgeführt.

1337
01:08:58,000 --> 01:09:00,000
So, dass Sie

1338
01:09:00,000 --> 01:09:02,000
für diese Nullen auch

1339
01:09:02,000 --> 01:09:04,000
wieder Werte haben.

1340
01:09:04,000 --> 01:09:06,000
Das ist die ganz klassische Interpolation.

1341
01:09:06,000 --> 01:09:08,000
Egal, ob Sie dann ein Bild haben oder etwas anderes,

1342
01:09:08,000 --> 01:09:10,000
Sie haben hier ein Signal, dann fügen Sie die richtige

1343
01:09:10,000 --> 01:09:12,000
Anzahl von Nullen ein,

1344
01:09:12,000 --> 01:09:14,000
und dann wird ein Tiefpassfilter drüber geschickt.

1345
01:09:14,000 --> 01:09:16,000
Dann haben Sie das hochinterpolierte

1346
01:09:16,000 --> 01:09:18,000
Signal.

1347
01:09:18,000 --> 01:09:20,000
Wenn wir hier jetzt die Gauss-Pyramide haben,

1348
01:09:20,000 --> 01:09:22,000
dann hätten wir hier

1349
01:09:22,000 --> 01:09:24,000
die Laplace-Pyramide.

1350
01:09:24,000 --> 01:09:26,000
Hier

1351
01:09:26,000 --> 01:09:28,000
haben wir das niederfrequente

1352
01:09:28,000 --> 01:09:30,000
Signal, und wenn wir da dann

1353
01:09:30,000 --> 01:09:32,000
diese Differenzsignale noch dazu haben,

1354
01:09:32,000 --> 01:09:34,000
die Detailsignale, dann können wir auch wieder die

1355
01:09:34,000 --> 01:09:36,000
Originalbilder erzeugen.

1356
01:09:40,000 --> 01:09:42,000
Das können Sie in verschiedenen Auflösungsstufen machen.

1357
01:09:42,000 --> 01:09:44,000
Hier steht jetzt Codierung, Decodierung.

1358
01:09:44,000 --> 01:09:46,000
Das hat jetzt nichts mit Bildcodierung zu tun,

1359
01:09:46,000 --> 01:09:48,000
sondern wie repräsentieren Sie das Signal?

1360
01:09:48,000 --> 01:09:50,000
Wir haben hier das

1361
01:09:50,000 --> 01:09:52,000
Basissignal,

1362
01:09:52,000 --> 01:09:54,000
und

1363
01:09:54,000 --> 01:09:56,000
da wird dann durch

1364
01:09:56,000 --> 01:09:58,000
Einfügen von Nullen, Hochabtastung

1365
01:09:58,000 --> 01:10:00,000
und Interpolation

1366
01:10:00,000 --> 01:10:02,000
die nächste Stufe erzeugt,

1367
01:10:02,000 --> 01:10:04,000
die man dann hier in

1368
01:10:04,000 --> 01:10:06,000
mehr oder weniger detailliert, deswegen der Quantisierer,

1369
01:10:06,000 --> 01:10:08,000
repräsentiert und dazu erzielt.

1370
01:10:14,000 --> 01:10:16,000
Bei der Laplace-Pyramide

1371
01:10:16,000 --> 01:10:18,000
haben wir

1372
01:10:18,000 --> 01:10:20,000
natürlich noch mal mehr

1373
01:10:20,000 --> 01:10:22,000
Bildpunkte als in der

1374
01:10:26,000 --> 01:10:28,000
Gaussian-Pyramide.

1375
01:10:28,000 --> 01:10:30,000
Wir haben

1376
01:10:30,000 --> 01:10:32,000
auf alle Fälle mehr

1377
01:10:32,000 --> 01:10:34,000
Bildpunkte als wenn wir eine

1378
01:10:34,000 --> 01:10:36,000
Wavelet-Zerlegung machen.

1379
01:10:36,000 --> 01:10:38,000
Hier die Wavelet-Zerlegung

1380
01:10:38,000 --> 01:10:40,000
mit einer Hierarchiestufe, Sie erinnern sich,

1381
01:10:40,000 --> 01:10:42,000
wir hatten dieses Bild auch noch mal weiter unterteilt.

1382
01:10:42,000 --> 01:10:44,000
Wir haben

1383
01:10:44,000 --> 01:10:46,000
bei der Wavelet-Zerlegung

1384
01:10:46,000 --> 01:10:48,000
immer eine

1385
01:10:48,000 --> 01:10:50,000
Filterung in horizontaler oder vertikaler

1386
01:10:50,000 --> 01:10:52,000
Richtung, das sehen Sie hier.

1387
01:10:52,000 --> 01:10:54,000
Bei der

1388
01:10:54,000 --> 01:10:56,000
Laplace-Pyramide haben wir keine

1389
01:10:56,000 --> 01:10:58,000
Richtungsabhängigkeit. Die Kanten sind alle

1390
01:10:58,000 --> 01:11:00,000
da in beliebigen Richtungen, in den Richtungen

1391
01:11:00,000 --> 01:11:02,000
so wie sie im Originalbild zu sehen sind.

1392
01:11:02,000 --> 01:11:04,000
Wir haben also keine

1393
01:11:04,000 --> 01:11:06,000
orientierungsabhängige Filterung des

1394
01:11:06,000 --> 01:11:08,000
Bildinhalts. Das ist durchaus

1395
01:11:08,000 --> 01:11:10,000
von Vorteil.

1396
01:11:10,000 --> 01:11:12,000
Die Kanten sind in allen Richtungen da.

1397
01:11:16,000 --> 01:11:18,000
Ja,

1398
01:11:18,000 --> 01:11:20,000
wofür verwendet man die

1399
01:11:20,000 --> 01:11:22,000
Bildpyramiden? Also Datenkompression.

1400
01:11:22,000 --> 01:11:24,000
Transport von Bildern, wenn Sie in irgendeiner

1401
01:11:24,000 --> 01:11:26,000
Datenbank suchen, zu suchen im Sonnenuntergang, brauchen Sie

1402
01:11:26,000 --> 01:11:28,000
einfach nur ein ganz kleines Bild, um zu sehen,

1403
01:11:28,000 --> 01:11:30,000
ist überhaupt Sonne drin oder nicht.

1404
01:11:30,000 --> 01:11:32,000
Viele

1405
01:11:32,000 --> 01:11:34,000
Rechenaufgaben

1406
01:11:34,000 --> 01:11:36,000
können Sie

1407
01:11:36,000 --> 01:11:38,000
auch auf kleinen Bildern ausführen

1408
01:11:38,000 --> 01:11:40,000
und dann reduziert das natürlich

1409
01:11:40,000 --> 01:11:42,000
dramatisch den Rechenaufwand.

1410
01:11:42,000 --> 01:11:44,000
Wenn Sie heute

1411
01:11:44,000 --> 01:11:46,000
neuronale Netzwerke trainieren

1412
01:11:46,000 --> 01:11:48,000
auf irgendwelchen großen

1413
01:11:48,000 --> 01:11:50,000
Grafikkarten, dann wird das

1414
01:11:50,000 --> 01:11:52,000
meistens mit Bildern gemacht, der Größe 256

1415
01:11:52,000 --> 01:11:54,000
mal 256 oder kleiner.

1416
01:11:54,000 --> 01:11:56,000
Ein neuronales Netz

1417
01:11:56,000 --> 01:11:58,000
anzuwenden auf

1418
01:11:58,000 --> 01:12:00,000
ein HD-Bild können Sie

1419
01:12:00,000 --> 01:12:02,000
machen,

1420
01:12:02,000 --> 01:12:04,000
dann warten Sie aber lange.

1421
01:12:04,000 --> 01:12:06,000
Vor allem wenn Sie das Netz trainieren wollen.

1422
01:12:06,000 --> 01:12:08,000
Die Anwendung eines neuronalen Netzes ist natürlich nicht ganz

1423
01:12:08,000 --> 01:12:10,000
offen.

1424
01:12:10,000 --> 01:12:12,000
Dafür brauchen Sie jetzt auch letztendlich

1425
01:12:12,000 --> 01:12:14,000
eine

1426
01:12:14,000 --> 01:12:16,000
Merkmalselektion.

1427
01:12:16,000 --> 01:12:18,000
Kanten und Ecken

1428
01:12:18,000 --> 01:12:20,000
können Sie

1429
01:12:20,000 --> 01:12:22,000
in verschiedenen

1430
01:12:22,000 --> 01:12:24,000
Auflösungsstufen

1431
01:12:24,000 --> 01:12:26,000
bestimmen.

1432
01:12:26,000 --> 01:12:28,000
Sie können auch

1433
01:12:28,000 --> 01:12:30,000
diese verschiedenen Auflösungsstufen verwenden

1434
01:12:30,000 --> 01:12:32,000
für alle möglichen Arten der

1435
01:12:32,000 --> 01:12:34,000
Bildverarbeitung, um Bilder ineinander

1436
01:12:34,000 --> 01:12:36,000
überzublenden und ähnliches.

1437
01:12:36,000 --> 01:12:38,000
Hier

1438
01:12:38,000 --> 01:12:40,000
mal ein Bild.

1439
01:12:40,000 --> 01:12:42,000
Unten haben wir die Originalbilder.

1440
01:12:42,000 --> 01:12:44,000
Sie sehen Apfel.

1441
01:12:44,000 --> 01:12:46,000
Hier sehen Sie Orange.

1442
01:12:46,000 --> 01:12:48,000
Hier drüber

1443
01:12:48,000 --> 01:12:50,000
die Laplace-Pyramide

1444
01:12:50,000 --> 01:12:52,000
von diesem

1445
01:12:52,000 --> 01:12:54,000
Signal.

1446
01:12:54,000 --> 01:12:56,000
Und wenn Sie diese beiden

1447
01:12:56,000 --> 01:12:58,000
Signale dann zusammenmischen, haben Sie das

1448
01:12:58,000 --> 01:13:00,000
Bild in verschiedenen

1449
01:13:00,000 --> 01:13:02,000
Auflösungen.

1450
01:13:02,000 --> 01:13:04,000
Und kriegen dann,

1451
01:13:04,000 --> 01:13:06,000
wenn Sie diese Signale, die

1452
01:13:06,000 --> 01:13:08,000
mittelten Signale von dem Apfel

1453
01:13:08,000 --> 01:13:10,000
und der Orange zusammenführen, hier einen

1454
01:13:10,000 --> 01:13:12,000
ganz netten

1455
01:13:12,000 --> 01:13:14,000
Bildübergang. Das ist ein Beispiel,

1456
01:13:14,000 --> 01:13:16,000
wie Sie

1457
01:13:16,000 --> 01:13:18,000
Bilder ineinander vermischen können.

1458
01:13:18,000 --> 01:13:20,000
Diesen glatten Übergang

1459
01:13:20,000 --> 01:13:22,000
kriegen Sie nicht hin,

1460
01:13:22,000 --> 01:13:24,000
wenn Sie das hier mit diesen

1461
01:13:24,000 --> 01:13:26,000
Originalbildern machen. Dadurch, dass wir die

1462
01:13:26,000 --> 01:13:28,000
Bildauflösung haben, werden wir

1463
01:13:28,000 --> 01:13:30,000
letztendlich die Frequenzen,

1464
01:13:30,000 --> 01:13:32,000
die Tieffrequenzen, die wir nicht

1465
01:13:32,000 --> 01:13:34,000
so aufgelöst haben, die hohen Frequenzen,

1466
01:13:34,000 --> 01:13:36,000
die Signale, gut miteinander vermischen.

1467
01:13:36,000 --> 01:13:38,000
Die Tieffrequenzen gehen hier glatt

1468
01:13:38,000 --> 01:13:40,000
ineinander über und die hohen Frequenzen

1469
01:13:40,000 --> 01:13:42,000
haben eine höhere Ortsauflösung, sodass sich

1470
01:13:42,000 --> 01:13:44,000
die Textur des Apfels und der Orange

1471
01:13:44,000 --> 01:13:46,000
schneller ändert.

1472
01:13:50,000 --> 01:13:52,000
Damit

1473
01:13:52,000 --> 01:13:54,000
haben wir diesen Teil auch geschafft.

1474
01:14:06,000 --> 01:14:08,000
Wir haben

1475
01:14:08,000 --> 01:14:10,000
schon viel über Farbe gehört.

1476
01:14:10,000 --> 01:14:12,000
Wir sehen auch Farbe.

1477
01:14:14,000 --> 01:14:16,000
Jetzt ein paar Bilder dazu.

1478
01:14:18,000 --> 01:14:20,000
Was ist Farbe?

1479
01:14:20,000 --> 01:14:22,000
Wird sie

1480
01:14:22,000 --> 01:14:24,000
technisch repräsentiert?

1481
01:14:24,000 --> 01:14:26,000
Und

1482
01:14:26,000 --> 01:14:28,000
wie bekommen wir Bilder hin, in denen die Farben

1483
01:14:28,000 --> 01:14:30,000
ordentlich dargestellt sind?

1484
01:14:30,000 --> 01:14:32,000
Das nennt sich dann Weißabschleich.

1485
01:14:36,000 --> 01:14:38,000
Es gibt

1486
01:14:38,000 --> 01:14:40,000
zwei

1487
01:14:40,000 --> 01:14:42,000
verschiedene Arten Farben darzustellen.

1488
01:14:42,000 --> 01:14:44,000
Wenn Sie eine Lichtquelle

1489
01:14:44,000 --> 01:14:46,000
haben, dann haben

1490
01:14:46,000 --> 01:14:48,000
wir eine additive Farbmischung.

1491
01:14:48,000 --> 01:14:50,000
Das macht der Monitor, auf den

1492
01:14:50,000 --> 01:14:52,000
Sie jetzt gerade schauen. Der hat rote, grüne

1493
01:14:52,000 --> 01:14:54,000
und blaue

1494
01:14:54,000 --> 01:14:56,000
Farbkanäle und wenn

1495
01:14:56,000 --> 01:14:58,000
die alle drei an sind,

1496
01:14:58,000 --> 01:15:00,000
dann ist es weiß,

1497
01:15:00,000 --> 01:15:02,000
hier ist nur der grüne an,

1498
01:15:02,000 --> 01:15:04,000
hier nur der rote, hier der blaue

1499
01:15:04,000 --> 01:15:06,000
und wenn Sie zwei an haben,

1500
01:15:06,000 --> 01:15:08,000
kriegen Sie diese Mischfarben.

1501
01:15:08,000 --> 01:15:10,000
Grün plus Rot gibt Gelb.

1502
01:15:10,000 --> 01:15:12,000
Das

1503
01:15:12,000 --> 01:15:14,000
machen Sie also bei aktiven Displays.

1504
01:15:14,000 --> 01:15:16,000
Wenn Sie passive Displays haben,

1505
01:15:16,000 --> 01:15:18,000
ein Stück Papier,

1506
01:15:18,000 --> 01:15:20,000
dann

1507
01:15:20,000 --> 01:15:22,000
tragen Sie dort Farben auf

1508
01:15:22,000 --> 01:15:24,000
und die sorgen dafür,

1509
01:15:24,000 --> 01:15:26,000
dass Teile des Lichts verschwinden.

1510
01:15:26,000 --> 01:15:28,000
Wir haben dann also eine subtraktive Farbmischung.

1511
01:15:28,000 --> 01:15:30,000
Das Blatt Papier ist

1512
01:15:30,000 --> 01:15:32,000
eher weiß, aber dann können Sie

1513
01:15:32,000 --> 01:15:34,000
Gelb, Cyan und

1514
01:15:34,000 --> 01:15:36,000
dieser

1515
01:15:36,000 --> 01:15:38,000
Farbe, fällt mir der Name gerade nicht ein,

1516
01:15:38,000 --> 01:15:40,000
also diesen hellen Blau,

1517
01:15:42,000 --> 01:15:44,000
aus den weißen Lichtfarben herausfiltern

1518
01:15:44,000 --> 01:15:46,000
und wenn Sie

1519
01:15:46,000 --> 01:15:48,000
alle drei Komponenten herausfiltern, dann ist das Ganze

1520
01:15:48,000 --> 01:15:50,000
schwarz.

1521
01:15:50,000 --> 01:15:52,000
Hier wird also alles weggefiltert,

1522
01:15:52,000 --> 01:15:54,000
dann wird es schwarz. Bei der

1523
01:15:54,000 --> 01:15:56,000
additiven Farbmischung haben wir schwarz,

1524
01:15:56,000 --> 01:15:58,000
wenn keine der Farben an ist.

1525
01:16:02,000 --> 01:16:04,000
Das hier ist aktive Display,

1526
01:16:04,000 --> 01:16:06,000
das hier ist Druck.

1527
01:16:10,000 --> 01:16:12,000
Was sehen wir?

1528
01:16:14,000 --> 01:16:16,000
Wir haben hier einmal

1529
01:16:16,000 --> 01:16:18,000
dargestellt,

1530
01:16:18,000 --> 01:16:20,000
die Wellenlänge des Lichtes,

1531
01:16:20,000 --> 01:16:22,000
damit die Frequenz,

1532
01:16:22,000 --> 01:16:24,000
nach oben die Energie, die

1533
01:16:24,000 --> 01:16:26,000
über der Wellenlänge

1534
01:16:26,000 --> 01:16:28,000
wahrgenommen wird.

1535
01:16:28,000 --> 01:16:30,000
Wir haben eine Beleuchtungsquelle,

1536
01:16:30,000 --> 01:16:32,000
dieses Objekt reflektiert

1537
01:16:32,000 --> 01:16:34,000
das Licht und das

1538
01:16:34,000 --> 01:16:36,000
sehen wir.

1539
01:16:44,000 --> 01:16:46,000
Dann gibt es hier sehr, sehr viele

1540
01:16:46,000 --> 01:16:48,000
Frequenzen oder Wellenlängen

1541
01:16:48,000 --> 01:16:50,000
und unser

1542
01:16:50,000 --> 01:16:52,000
Monitor hat nur RGB

1543
01:16:52,000 --> 01:16:54,000
und unser Auge

1544
01:16:54,000 --> 01:16:56,000
hat einen Schwarz-Weiß-Sensor

1545
01:16:56,000 --> 01:16:58,000
und dann noch

1546
01:16:58,000 --> 01:17:00,000
ein paar Farbsensoren.

1547
01:17:00,000 --> 01:17:02,000
Man kann sich jetzt die Frage, das ist ja berechtigt,

1548
01:17:02,000 --> 01:17:04,000
stellen, warum reichen denn nur

1549
01:17:04,000 --> 01:17:06,000
drei Farben aus, um das gesamte Spektrum

1550
01:17:06,000 --> 01:17:08,000
zu repräsentieren?

1551
01:17:08,000 --> 01:17:10,000
Da haben wir letztendlich mal

1552
01:17:10,000 --> 01:17:12,000
Tests gemacht.

1553
01:17:12,000 --> 01:17:14,000
Man hat drei

1554
01:17:14,000 --> 01:17:16,000
Grundfarben gehabt, hat sie

1555
01:17:16,000 --> 01:17:18,000
gewichtet, überlagert und hat

1556
01:17:18,000 --> 01:17:20,000
dann hier diese Grundfarben gewichtet

1557
01:17:20,000 --> 01:17:22,000
dargestellt und hier war eine Testfarbe.

1558
01:17:22,000 --> 01:17:24,000
Dann hat man an diesen

1559
01:17:24,000 --> 01:17:26,000
Gewichten so lange rumgedreht, bis man

1560
01:17:26,000 --> 01:17:28,000
diese Testfarbe so dargestellt

1561
01:17:28,000 --> 01:17:30,000
hat, dass man einen Unterschied

1562
01:17:30,000 --> 01:17:32,000
nicht sehen konnte. Das können Sie sich vorstellen,

1563
01:17:32,000 --> 01:17:34,000
sind aufwendige subjektive

1564
01:17:34,000 --> 01:17:36,000
Tests, aber da hat man eben auch festgestellt,

1565
01:17:36,000 --> 01:17:38,000
drei Farben reichen aus.

1566
01:17:40,000 --> 01:17:42,000
Also mit den

1567
01:17:42,000 --> 01:17:44,000
drei Grundfarben können wir alle Testsignale

1568
01:17:44,000 --> 01:17:46,000
repräsentieren

1569
01:17:46,000 --> 01:17:48,000
und die

1570
01:17:48,000 --> 01:17:50,000
Gewichte, die wir

1571
01:17:50,000 --> 01:17:52,000
brauchen, um eine Testfarbe

1572
01:17:52,000 --> 01:17:54,000
zu repräsentieren,

1573
01:17:54,000 --> 01:17:56,000
um diese Testfarbe zu repräsentieren,

1574
01:17:56,000 --> 01:17:58,000
stellen wir hier Gewichte ein. Diese Gewichte sind für

1575
01:17:58,000 --> 01:18:00,000
die meisten Menschen

1576
01:18:00,000 --> 01:18:02,000
gleich.

1577
01:18:02,000 --> 01:18:04,000
Das heißt, das, was ich

1578
01:18:04,000 --> 01:18:06,000
als hellrot

1579
01:18:06,000 --> 01:18:08,000
wahrnehme,

1580
01:18:08,000 --> 01:18:10,000
wird bei den meisten von Ihnen

1581
01:18:10,000 --> 01:18:12,000
auch als hellrot wahrgenommen.

1582
01:18:12,000 --> 01:18:14,000
Aber

1583
01:18:14,000 --> 01:18:16,000
kleine Unterschiede gibt es.

1584
01:18:16,000 --> 01:18:18,000
Deswegen gibt es

1585
01:18:18,000 --> 01:18:20,000
ja manchmal Farben, die sind sich sehr ähnlich

1586
01:18:20,000 --> 01:18:22,000
und der eine sagt, das geht gar nicht und der andere

1587
01:18:22,000 --> 01:18:24,000
erkennt den Schlammcharakter

1588
01:18:24,000 --> 01:18:26,000
der Farbe nicht, weil er da eine leicht andere

1589
01:18:26,000 --> 01:18:28,000
Wahrnehmung hat.

1590
01:18:36,000 --> 01:18:38,000
Wir brauchten da auch

1591
01:18:38,000 --> 01:18:40,000
eine subtraktive Farbmischung

1592
01:18:42,000 --> 01:18:44,000
und

1593
01:18:44,000 --> 01:18:46,000
hier haben wir jetzt mal die Spektralwertfunktion

1594
01:18:46,000 --> 01:18:48,000
der Grundfarben,

1595
01:18:48,000 --> 01:18:50,000
also das, was als rot, grün,

1596
01:18:50,000 --> 01:18:52,000
blau dargestellt ist, das ist jetzt nicht

1597
01:18:52,000 --> 01:18:54,000
ein Laser, der auf einer

1598
01:18:54,000 --> 01:18:56,000
Frequenz Energie

1599
01:18:56,000 --> 01:18:58,000
auswendet, auf einer Wellenlänge,

1600
01:18:58,000 --> 01:19:00,000
sondern das waren dann irgendwo schon

1601
01:19:00,000 --> 01:19:02,000
natürliche Lichtquellen, wo sie

1602
01:19:02,000 --> 01:19:04,000
ein Blau haben,

1603
01:19:04,000 --> 01:19:06,000
das aber ein relativ großes Spektrum

1604
01:19:06,000 --> 01:19:08,000
abdeckt.

1605
01:19:08,000 --> 01:19:10,000
Und was hier jetzt etwas ärgerlich

1606
01:19:10,000 --> 01:19:12,000
ist, das Rot muss man

1607
01:19:12,000 --> 01:19:14,000
letztendlich so einstellen, dass es

1608
01:19:14,000 --> 01:19:16,000
hier auch

1609
01:19:16,000 --> 01:19:18,000
negative Energie hat.

1610
01:19:18,000 --> 01:19:20,000
Das ist natürlich schwierig, wenn sie das

1611
01:19:20,000 --> 01:19:22,000
irgendwie technisch realisieren

1612
01:19:22,000 --> 01:19:24,000
wollen, dass sie eine Lampe

1613
01:19:24,000 --> 01:19:26,000
anstellen und

1614
01:19:26,000 --> 01:19:28,000
die Lampe soll Energie aus dem

1615
01:19:28,000 --> 01:19:30,000
Spektrum wegsaugen. Das kann sie nicht, sie kann nur Energie

1616
01:19:30,000 --> 01:19:32,000
liefern.

1617
01:19:36,000 --> 01:19:38,000
Ja, und

1618
01:19:38,000 --> 01:19:40,000
dann kann man da die verschiedenen Integrale

1619
01:19:40,000 --> 01:19:42,000
über die spektralen Lichten

1620
01:19:42,000 --> 01:19:44,000
Energie und die

1621
01:19:44,000 --> 01:19:46,000
Verteilung der Lichtquelle ausrechnen

1622
01:19:46,000 --> 01:19:48,000
und dann zu der Farbempfindung.

1623
01:19:48,000 --> 01:19:50,000
Diese Gewichte

1624
01:19:50,000 --> 01:19:52,000
hat man experimentell bestimmt,

1625
01:19:52,000 --> 01:19:54,000
die Spektralwertfunktionen

1626
01:19:54,000 --> 01:19:56,000
hatte man dann entsprechend auch

1627
01:19:56,000 --> 01:19:58,000
optimiert.

1628
01:19:58,000 --> 01:20:00,000
Hier sehen wir sie.

1629
01:20:00,000 --> 01:20:02,000
Für die technische Realisierung,

1630
01:20:02,000 --> 01:20:04,000
wie gesagt, wegen des negativen

1631
01:20:04,000 --> 01:20:06,000
Bereiches hier im Rot,

1632
01:20:06,000 --> 01:20:08,000
bisschen auch im Grün

1633
01:20:08,000 --> 01:20:10,000
eher schlecht.

1634
01:20:10,000 --> 01:20:12,000
Man hat dann eine

1635
01:20:12,000 --> 01:20:14,000
Norm,

1636
01:20:14,000 --> 01:20:16,000
Spektralwertfunktionen

1637
01:20:16,000 --> 01:20:18,000
definiert,

1638
01:20:18,000 --> 01:20:20,000
die aus RGB

1639
01:20:20,000 --> 01:20:22,000
XYZ berechnet und

1640
01:20:22,000 --> 01:20:24,000
das sind dann die

1641
01:20:24,000 --> 01:20:26,000
Spektralwertfunktionen für

1642
01:20:26,000 --> 01:20:28,000
XYZ,

1643
01:20:28,000 --> 01:20:30,000
die

1644
01:20:30,000 --> 01:20:32,000
erstmal nur positiv sind.

1645
01:20:32,000 --> 01:20:34,000
Das heißt, wenn wir jetzt das hinkriegen,

1646
01:20:34,000 --> 01:20:36,000
dass unsere Lichtquelle

1647
01:20:36,000 --> 01:20:38,000
diese

1648
01:20:38,000 --> 01:20:40,000
Spektren hat, dann können wir damit

1649
01:20:40,000 --> 01:20:42,000
auch alle Farben darstellen.

1650
01:20:42,000 --> 01:20:44,000
Hier haben wir Rot, Grün, Blau, da wissen wir, was das ist.

1651
01:20:48,000 --> 01:20:50,000
Wenn wir

1652
01:20:50,000 --> 01:20:52,000
Rot, Grün, Blau die Werte haben

1653
01:20:52,000 --> 01:20:54,000
und multiplizieren das

1654
01:20:54,000 --> 01:20:56,000
mit diesem Vektor

1655
01:20:56,000 --> 01:20:58,000
kriegen wir X.

1656
01:20:58,000 --> 01:21:00,000
Und

1657
01:21:00,000 --> 01:21:02,000
X wird

1658
01:21:02,000 --> 01:21:04,000
dominiert durch den Rotanteil.

1659
01:21:06,000 --> 01:21:08,000
Und dann

1660
01:21:08,000 --> 01:21:10,000
kommt der Grünanteil.

1661
01:21:10,000 --> 01:21:12,000
Y

1662
01:21:12,000 --> 01:21:14,000
Wenn Sie

1663
01:21:14,000 --> 01:21:16,000
RGB multiplizieren mit dieser Zeile,

1664
01:21:16,000 --> 01:21:18,000
dann sehen Sie, der Grünanteil

1665
01:21:18,000 --> 01:21:20,000
dominiert. Also Y

1666
01:21:20,000 --> 01:21:22,000
entspricht weitestgehend dem

1667
01:21:22,000 --> 01:21:24,000
Grünwert und

1668
01:21:24,000 --> 01:21:26,000
Z entspricht dem Blauwert.

1669
01:21:26,000 --> 01:21:28,000
Deswegen hier auch

1670
01:21:28,000 --> 01:21:30,000
diese Farbzuordnung.

1671
01:21:30,000 --> 01:21:32,000
Und jetzt haben wir keine negativen

1672
01:21:32,000 --> 01:21:34,000
Werte mehr, wenn wir also unser Display

1673
01:21:34,000 --> 01:21:36,000
so hinkriegen, dann können wir alle Farben

1674
01:21:36,000 --> 01:21:38,000
synthetisieren.

1675
01:21:40,000 --> 01:21:42,000
So

1676
01:21:42,000 --> 01:21:44,000
nochmal,

1677
01:21:44,000 --> 01:21:46,000
was sehen wir?

1678
01:21:46,000 --> 01:21:48,000
Wir haben Licht,

1679
01:21:48,000 --> 01:21:50,000
das wird hier irgendwie reflektiert.

1680
01:21:52,000 --> 01:21:54,000
Das menschliche Auge

1681
01:21:56,000 --> 01:21:58,000
hat irgendwelche

1682
01:21:58,000 --> 01:22:00,000
Farbfilter, der ist hier in der

1683
01:22:00,000 --> 01:22:02,000
Normdarstellung.

1684
01:22:02,000 --> 01:22:04,000
Rot, Grün, Blau.

1685
01:22:04,000 --> 01:22:06,000
Und dann

1686
01:22:06,000 --> 01:22:08,000
das Produkt hiervon ist das,

1687
01:22:08,000 --> 01:22:10,000
was wir sehen.

1688
01:22:10,000 --> 01:22:12,000
Das heißt also,

1689
01:22:12,000 --> 01:22:14,000
der Blauanteil multipliziert mit

1690
01:22:14,000 --> 01:22:16,000
dem Signal, was

1691
01:22:16,000 --> 01:22:18,000
von dem Apfel hier ausgesendet wird.

1692
01:22:20,000 --> 01:22:22,000
Liefert uns dann,

1693
01:22:22,000 --> 01:22:24,000
Blauanteil ist hier dieses Ergebnis.

1694
01:22:26,000 --> 01:22:28,000
Grünanteil,

1695
01:22:28,000 --> 01:22:30,000
hier ist die Empfindlichkeit des Auges,

1696
01:22:30,000 --> 01:22:32,000
multipliziert mit der Energie, die wir

1697
01:22:32,000 --> 01:22:34,000
hier in diesem Bereich haben,

1698
01:22:34,000 --> 01:22:36,000
liefert uns diesen Anteil

1699
01:22:36,000 --> 01:22:38,000
und hier haben wir das ganze für den Rotanteil.

1700
01:22:44,000 --> 01:22:46,000
Das hier ist dann also die Farbvernehmung,

1701
01:22:46,000 --> 01:22:48,000
wie wir sie als Mensch haben.

1702
01:22:48,000 --> 01:22:50,000
Darstellung,

1703
01:22:50,000 --> 01:22:52,000
normalerweise sehen Sie das

1704
01:22:52,000 --> 01:22:54,000
in diesen Normfarbtafeln.

1705
01:22:58,000 --> 01:23:00,000
Hier sind

1706
01:23:02,000 --> 01:23:04,000
die XYZ-Werte letztendlich

1707
01:23:04,000 --> 01:23:06,000
dargestellt, aber

1708
01:23:06,000 --> 01:23:08,000
das Ganze ist nur zweidimensional, das heißt, wir haben

1709
01:23:08,000 --> 01:23:10,000
normiert

1710
01:23:12,000 --> 01:23:14,000
auf die Summe aus XY plus Z

1711
01:23:14,000 --> 01:23:16,000
letztendlich so, dass

1712
01:23:18,000 --> 01:23:20,000
X plus Y plus Z gleich 1 ist.

1713
01:23:22,000 --> 01:23:24,000
Das heißt, es reicht

1714
01:23:24,000 --> 01:23:26,000
eine zweidimensionale Darstellung aus,

1715
01:23:26,000 --> 01:23:28,000
um alle Farben darzustellen.

1716
01:23:28,000 --> 01:23:30,000
Blau, Rot, Grün.

1717
01:23:30,000 --> 01:23:32,000
In der Mitte haben wir das

1718
01:23:32,000 --> 01:23:34,000
Weiß

1719
01:23:34,000 --> 01:23:36,000
und

1720
01:23:36,000 --> 01:23:38,000
darstellen können wir jetzt,

1721
01:23:38,000 --> 01:23:40,000
die Abbildung ist so gemacht,

1722
01:23:40,000 --> 01:23:42,000
alle Farben, die wir

1723
01:23:42,000 --> 01:23:44,000
darstellen können

1724
01:23:44,000 --> 01:23:46,000
mit dem, was unser Monitor kann.

1725
01:23:46,000 --> 01:23:48,000
Wenn wir unseren Monitor haben,

1726
01:23:48,000 --> 01:23:50,000
der hat hier einen Blau

1727
01:23:50,000 --> 01:23:52,000
und einen Rot, dann können wir

1728
01:23:52,000 --> 01:23:54,000
durch gewichtete Überlagerung, Ansteuerung

1729
01:23:54,000 --> 01:23:56,000
diese Sachen, alle Farben darstellen, die hier

1730
01:23:56,000 --> 01:23:58,000
auf der Verbindungslinie sind.

1731
01:23:58,000 --> 01:24:00,000
Und wenn Sie

1732
01:24:00,000 --> 01:24:02,000
jetzt mal einen Monitor haben,

1733
01:24:02,000 --> 01:24:04,000
der auch noch eine dritte Farbe zur Verfügung stellt,

1734
01:24:04,000 --> 01:24:06,000
also Grün, dann können wir

1735
01:24:06,000 --> 01:24:08,000
alles darstellen, was

1736
01:24:08,000 --> 01:24:10,000
in diesem Dreieck liegt.

1737
01:24:12,000 --> 01:24:14,000
Was außerhalb dieses Dreiecks liegt,

1738
01:24:14,000 --> 01:24:16,000
können wir nicht darstellen.

1739
01:24:20,000 --> 01:24:22,000
Wenn wir jetzt also

1740
01:24:24,000 --> 01:24:26,000
mehr Farben darstellen wollen,

1741
01:24:26,000 --> 01:24:28,000
ein grüneres Grün,

1742
01:24:28,000 --> 01:24:30,000
dann brauchen wir ein Grün, was hier oben liegt.

1743
01:24:30,000 --> 01:24:32,000
Und es gibt

1744
01:24:32,000 --> 01:24:34,000
verschiedene

1745
01:24:34,000 --> 01:24:36,000
Farbräume,

1746
01:24:36,000 --> 01:24:38,000
die

1747
01:24:38,000 --> 01:24:40,000
sich letztendlich darin unterscheiden,

1748
01:24:40,000 --> 01:24:42,000
wo liegen denn die Referenzpunkte

1749
01:24:42,000 --> 01:24:44,000
für Rot, Grün und Blau.

1750
01:24:44,000 --> 01:24:46,000
Im Laufe der Zeit

1751
01:24:46,000 --> 01:24:48,000
mit fortschreitender technischer Entwicklung

1752
01:24:48,000 --> 01:24:50,000
ist es letztendlich gelungen,

1753
01:24:50,000 --> 01:24:52,000
diese

1754
01:24:52,000 --> 01:24:54,000
Referenzpunkte mehr und mehr

1755
01:24:54,000 --> 01:24:56,000
im Randbereich

1756
01:24:56,000 --> 01:24:58,000
dieser Farbtafel

1757
01:24:58,000 --> 01:25:00,000
zu bekommen.

1758
01:25:02,000 --> 01:25:04,000
Es gibt

1759
01:25:04,000 --> 01:25:06,000
Monitore, Fernseher,

1760
01:25:06,000 --> 01:25:08,000
auch Filme,

1761
01:25:08,000 --> 01:25:10,000
die werden HDR genannt,

1762
01:25:10,000 --> 01:25:12,000
High Dynamic Range.

1763
01:25:12,000 --> 01:25:14,000
Das bedeutet eigentlich erstmal nur,

1764
01:25:14,000 --> 01:25:16,000
dass Sie in diesem Film

1765
01:25:16,000 --> 01:25:18,000
ein helleres

1766
01:25:18,000 --> 01:25:20,000
Weiß darstellen.

1767
01:25:20,000 --> 01:25:22,000
Ihr Monitor kann das.

1768
01:25:22,000 --> 01:25:24,000
Er hat also

1769
01:25:24,000 --> 01:25:26,000
ein helleres Weiß,

1770
01:25:26,000 --> 01:25:28,000
ohne dass das Schwarz auch heller wird.

1771
01:25:28,000 --> 01:25:30,000
Der Dynamikbereich steigt,

1772
01:25:30,000 --> 01:25:32,000
der zwischen hell und dunkel steigt.

1773
01:25:32,000 --> 01:25:34,000
Dafür steht High Dynamic Range.

1774
01:25:34,000 --> 01:25:36,000
Was damit einher geht,

1775
01:25:36,000 --> 01:25:38,000
in den

1776
01:25:38,000 --> 01:25:40,000
technischen Umsetzungen,

1777
01:25:40,000 --> 01:25:42,000
ist aber auch

1778
01:25:42,000 --> 01:25:44,000
White Color Gamut,

1779
01:25:44,000 --> 01:25:46,000
also WCG, steht dabei auch noch mit dabei.

1780
01:25:46,000 --> 01:25:48,000
Das bedeutet, dass Ihr Monitor

1781
01:25:48,000 --> 01:25:50,000
nicht mehr seinen Grün

1782
01:25:50,000 --> 01:25:52,000
Stelle hat, sondern hier weiter oben

1783
01:25:52,000 --> 01:25:54,000
und das Rot ist auch mehr hier in die Kante

1784
01:25:54,000 --> 01:25:56,000
gerutscht, das Blau ist da.

1785
01:25:56,000 --> 01:25:58,000
Das heißt, einher geht, ohne dass einem das jetzt

1786
01:25:58,000 --> 01:26:00,000
groß erzählt wird, neben dem High Dynamic Range

1787
01:26:00,000 --> 01:26:02,000
auch eine Erweiterung des

1788
01:26:02,000 --> 01:26:04,000
Farbraums.

1789
01:26:10,000 --> 01:26:12,000
Die

1790
01:26:12,000 --> 01:26:14,000
Repräsentation der Farbe

1791
01:26:14,000 --> 01:26:16,000
ganz klassisch erstmal durch RGB,

1792
01:26:16,000 --> 01:26:18,000
das heißt, für jeden Bildpunkt haben wir dann

1793
01:26:18,000 --> 01:26:20,000
dreinumerische Werte. Es gibt auch

1794
01:26:20,000 --> 01:26:22,000
Multispektralbilder, vielleicht haben Sie noch

1795
01:26:22,000 --> 01:26:24,000
einen Infrarotkanal dabei,

1796
01:26:24,000 --> 01:26:26,000
das wird für Agraranwendungen

1797
01:26:26,000 --> 01:26:28,000
zum Beispiel gemacht oder

1798
01:26:28,000 --> 01:26:30,000
Satelliten, die ersten Landsat-Satelliten.

1799
01:26:30,000 --> 01:26:32,000
Ich meine, ich hatte sieben

1800
01:26:32,000 --> 01:26:34,000
Farbkanäle, die aufgenommen wurden.

1801
01:26:34,000 --> 01:26:36,000
Das sind dann irgendwelche schmalere Spektralwände.

1802
01:26:36,000 --> 01:26:38,000
Wir haben eine Kamera, die hat

1803
01:26:38,000 --> 01:26:40,000
153, glaube ich,

1804
01:26:40,000 --> 01:26:42,000
Farbkanäle,

1805
01:26:42,000 --> 01:26:44,000
von

1806
01:26:44,000 --> 01:26:46,000
einem Blau bis ins

1807
01:26:46,000 --> 01:26:48,000
Farbkanäle

1808
01:26:48,000 --> 01:26:50,000
Infrarot hinein.

1809
01:26:50,000 --> 01:26:52,000
Es gibt verschiedene Anwendungen,

1810
01:26:52,000 --> 01:26:54,000
je nachdem, was man machen will. Auf alle Fälle

1811
01:26:54,000 --> 01:26:56,000
haben Sie für jeden Bildpunkt einen Vektor

1812
01:26:56,000 --> 01:26:58,000
mit drei oder mehr Werten.

1813
01:26:58,000 --> 01:27:00,000
Wir beschränken uns jetzt hier mal auf

1814
01:27:00,000 --> 01:27:02,000
RGB, also auf das, was wir als Mensch

1815
01:27:02,000 --> 01:27:04,000
typischerweise sehen und da gibt es

1816
01:27:04,000 --> 01:27:06,000
dann verschiedene

1817
01:27:06,000 --> 01:27:08,000
Arten der Darstellung.

1818
01:27:10,000 --> 01:27:12,000
Rot, Grün, Blau.

1819
01:27:12,000 --> 01:27:14,000
Wenn wir jetzt also

1820
01:27:14,000 --> 01:27:16,000
unser

1821
01:27:16,000 --> 01:27:18,000
X, Y und Z-Signal haben,

1822
01:27:18,000 --> 01:27:20,000
dann gibt es hier entsprechend die Formel,

1823
01:27:20,000 --> 01:27:22,000
die das in Rot, Grün, Blau

1824
01:27:22,000 --> 01:27:24,000
ausrechnet. Da gibt es den Standard

1825
01:27:24,000 --> 01:27:26,000
BT601. Das ist das, was

1826
01:27:26,000 --> 01:27:28,000
Ihre Eltern kennen als Farbfernsehen

1827
01:27:28,000 --> 01:27:30,000
oder auch als

1828
01:27:30,000 --> 01:27:32,000
NTSC, wenn Sie im

1829
01:27:32,000 --> 01:27:34,000
amerikanisch dominierten Raum sind.

1830
01:27:34,000 --> 01:27:36,000
Wenn Sie jetzt HDTV

1831
01:27:36,000 --> 01:27:38,000
haben, dann haben wir eine höhere

1832
01:27:38,000 --> 01:27:40,000
örtliche Auflösung. Gleichzeitig wurde aber auch der Farbraum

1833
01:27:40,000 --> 01:27:42,000
erweitert. Das heißt,

1834
01:27:42,000 --> 01:27:44,000
die Umrechnung

1835
01:27:44,000 --> 01:27:46,000
zwischen RGB und

1836
01:27:46,000 --> 01:27:48,000
X, Y und Z ist dann letztendlich

1837
01:27:48,000 --> 01:27:50,000
eine andere.

1838
01:27:52,000 --> 01:27:54,000
Es gibt

1839
01:27:54,000 --> 01:27:56,000
den HSI-Farbraum.

1840
01:27:58,000 --> 01:28:00,000
Das I

1841
01:28:00,000 --> 01:28:02,000
steht für Intensität.

1842
01:28:02,000 --> 01:28:04,000
Intensität 0,

1843
01:28:04,000 --> 01:28:06,000
Schwarz. Intensität 1,

1844
01:28:06,000 --> 01:28:08,000
Weiß.

1845
01:28:08,000 --> 01:28:10,000
Weiß hat keine Farbe mehr.

1846
01:28:10,000 --> 01:28:12,000
Dazwischen

1847
01:28:14,000 --> 01:28:16,000
haben Sie dann

1848
01:28:16,000 --> 01:28:18,000
verschiedene

1849
01:28:18,000 --> 01:28:20,000
Kreise, in denen sich alle Farben

1850
01:28:20,000 --> 01:28:22,000
abbilden. Hier Intensität

1851
01:28:22,000 --> 01:28:24,000
75 haben wir in der Mitte. Das sieht noch

1852
01:28:24,000 --> 01:28:26,000
weiß aus, ist aber nicht weiß, ist grau.

1853
01:28:26,000 --> 01:28:28,000
Bei Intensität

1854
01:28:28,000 --> 01:28:30,000
0,5

1855
01:28:30,000 --> 01:28:32,000
ist hier dargestellt, das ist ein mittleres Grau

1856
01:28:32,000 --> 01:28:34,000
genau in der Mitte.

1857
01:28:34,000 --> 01:28:36,000
Dann haben wir

1858
01:28:36,000 --> 01:28:38,000
außenrum alle Farben

1859
01:28:38,000 --> 01:28:40,000
angeordnet.

1860
01:28:40,000 --> 01:28:42,000
Auf dem Weg von

1861
01:28:42,000 --> 01:28:44,000
dem Grau zum Bildrand

1862
01:28:44,000 --> 01:28:46,000
ändert sich die

1863
01:28:46,000 --> 01:28:48,000
Farbe nicht, aber die Farbesättigung.

1864
01:28:50,000 --> 01:28:52,000
Farbe, Sättigung,

1865
01:28:52,000 --> 01:28:54,000
Intensität. Das ist eine

1866
01:28:54,000 --> 01:28:56,000
Darstellung, die wir hier haben,

1867
01:28:56,000 --> 01:28:58,000
die irgendwo

1868
01:28:58,000 --> 01:29:00,000
unserer

1869
01:29:00,000 --> 01:29:02,000
Beschreibung von Farbe

1870
01:29:02,000 --> 01:29:04,000
sicherlich näher kommt als RGB.

1871
01:29:04,000 --> 01:29:06,000
Wenn ich Ihnen sage, ich habe hier ein Orange und würde Ihnen die

1872
01:29:06,000 --> 01:29:08,000
RGB-Werte nennen, dann

1873
01:29:08,000 --> 01:29:10,000
gucken Sie mich an, was will er von mir.

1874
01:29:10,000 --> 01:29:12,000
Wenn ich Ihnen aber sagen würde, das ist

1875
01:29:12,000 --> 01:29:14,000
ein Orange, das ist sehr hell

1876
01:29:14,000 --> 01:29:16,000
und die Sättigung ist

1877
01:29:16,000 --> 01:29:18,000
mittel, dann würden Sie vielleicht sagen,

1878
01:29:18,000 --> 01:29:20,000
das könnte so ein Orange sein.

1879
01:29:30,000 --> 01:29:32,000
Ob Sie es nun HSI oder

1880
01:29:32,000 --> 01:29:34,000
HSV-Farbraum nennen,

1881
01:29:34,000 --> 01:29:36,000
es kann sein, dass da kleine Unterschiede sind,

1882
01:29:36,000 --> 01:29:38,000
aber wenn, dann sind sie minimal.

1883
01:29:38,000 --> 01:29:40,000
Sind dann Details in der

1884
01:29:40,000 --> 01:29:42,000
Umrechnung, wie kommen sie von einem

1885
01:29:42,000 --> 01:29:44,000
Farbraum zu dem anderen.

1886
01:29:44,000 --> 01:29:46,000
Wie kommen sie von

1887
01:29:46,000 --> 01:29:48,000
RGB

1888
01:29:48,000 --> 01:29:50,000
in HSI.

1889
01:29:50,000 --> 01:29:52,000
Ich meine, HSV ist dasselbe.

1890
01:29:56,000 --> 01:29:58,000
Sie sehen hier die Umrechnungsformeln.

1891
01:29:58,000 --> 01:30:00,000
Wenn ich H berechnen will, muss ich mir erstmal

1892
01:30:00,000 --> 01:30:02,000
einen Theta berechnen

1893
01:30:02,000 --> 01:30:04,000
und dann

1894
01:30:04,000 --> 01:30:06,000
kriege ich hier den Winkel

1895
01:30:06,000 --> 01:30:08,000
raus.

1896
01:30:08,000 --> 01:30:10,000
Hue gibt hier den Winkel und damit die Farbe an.

1897
01:30:10,000 --> 01:30:12,000
Die Sättigung

1898
01:30:12,000 --> 01:30:14,000
kriege ich letztendlich

1899
01:30:14,000 --> 01:30:16,000
durch

1900
01:30:16,000 --> 01:30:18,000
diese Größe heraus und die

1901
01:30:18,000 --> 01:30:20,000
Intensität ist

1902
01:30:20,000 --> 01:30:22,000
der Mittelwert von RGB.

1903
01:30:26,000 --> 01:30:28,000
Der LAB-Farbraum

1904
01:30:30,000 --> 01:30:32,000
ist der Versuch,

1905
01:30:32,000 --> 01:30:34,000
das menschliche Empfinden

1906
01:30:34,000 --> 01:30:36,000
noch besser abzubilden, als wir das

1907
01:30:36,000 --> 01:30:38,000
bei dem letzten Farbraum haben.

1908
01:30:40,000 --> 01:30:42,000
Wenn wir uns hier

1909
01:30:42,000 --> 01:30:44,000
zwei Punkte

1910
01:30:44,000 --> 01:30:46,000
suchen,

1911
01:30:46,000 --> 01:30:48,000
dann können wir ja für diese

1912
01:30:48,000 --> 01:30:50,000
beiden Punkte, für die Farbe

1913
01:30:50,000 --> 01:30:52,000
einen euclidischen Abstand definieren

1914
01:30:52,000 --> 01:30:54,000
und in der Wahrnehmung ist, wenn wir

1915
01:30:54,000 --> 01:30:56,000
den gleichen euclidischen Abstand

1916
01:30:56,000 --> 01:30:58,000
an zwei verschiedenen Stellen

1917
01:30:58,000 --> 01:31:00,000
anschauen,

1918
01:31:00,000 --> 01:31:02,000
dann ist unsere Wahrnehmung, dass die

1919
01:31:02,000 --> 01:31:04,000
Helligkeit oder die Farbunterschiede

1920
01:31:04,000 --> 01:31:06,000
gleich sind.

1921
01:31:06,000 --> 01:31:08,000
Da hat jeder natürlich noch individuelle

1922
01:31:08,000 --> 01:31:10,000
andere Wahrnehmung,

1923
01:31:10,000 --> 01:31:12,000
aber

1924
01:31:12,000 --> 01:31:14,000
der euclidische Abstand hier

1925
01:31:14,000 --> 01:31:16,000
ist

1926
01:31:16,000 --> 01:31:18,000
farbunabhängig.

1927
01:31:18,000 --> 01:31:20,000
Er wird farbunabhängig

1928
01:31:20,000 --> 01:31:22,000
wahrgenommen.

1929
01:31:22,000 --> 01:31:24,000
Hier haben Sie die

1930
01:31:24,000 --> 01:31:26,000
Umrechnungsformeln

1931
01:31:26,000 --> 01:31:28,000
jetzt nicht von RGB

1932
01:31:28,000 --> 01:31:30,000
nach LAB,

1933
01:31:30,000 --> 01:31:32,000
sondern von dem XYZ-Farbraum.

1934
01:31:38,000 --> 01:31:40,000
Soll ich sagen,

1935
01:31:40,000 --> 01:31:42,000
es ist auch aufwendig zu berechnen.

1936
01:31:42,000 --> 01:31:44,000
Was Sie für diesen Farbraum

1937
01:31:44,000 --> 01:31:46,000
sehen und auch für den

1938
01:31:46,000 --> 01:31:48,000
HSI-Farbraum,

1939
01:31:48,000 --> 01:31:50,000
eigentlich wollen Sie

1940
01:31:50,000 --> 01:31:52,000
in denen nicht rechnen.

1941
01:31:54,000 --> 01:31:56,000
Wenn Sie also irgendwelche Merkmale

1942
01:31:56,000 --> 01:31:58,000
extrahieren wollen, um irgendwelche

1943
01:31:58,000 --> 01:32:00,000
Bildanalysen zu machen, dann versuchen Sie

1944
01:32:00,000 --> 01:32:02,000
in, also der erste Versuch ist, Sie

1945
01:32:02,000 --> 01:32:04,000
rechnen im Schwarz-Weiß-Bild. Das geht am schnellsten.

1946
01:32:04,000 --> 01:32:06,000
Wenn die Farbe wichtig ist, dann

1947
01:32:06,000 --> 01:32:08,000
rechnen Sie eben in RGB.

1948
01:32:08,000 --> 01:32:10,000
Aber Sie werden einen Teufel tun

1949
01:32:10,000 --> 01:32:12,000
und in diesen Farbräumen rechnen.

1950
01:32:12,000 --> 01:32:14,000
Diese Farbräume, die benutzen Sie nur, wenn Sie

1951
01:32:14,000 --> 01:32:16,000
Benutzerinteraktionen haben und Sie wollen den Menschen

1952
01:32:16,000 --> 01:32:18,000
irgendwie es ermöglichen,

1953
01:32:18,000 --> 01:32:20,000
leicht die Farben zu ändern.

1954
01:32:20,000 --> 01:32:22,000
Wenn Menschen sagen,

1955
01:32:22,000 --> 01:32:24,000
drehen Sie mal an den RGB-Werten, dann sind wir überfordert.

1956
01:32:24,000 --> 01:32:26,000
Und wenn wir von Farben, von Settings

1957
01:32:26,000 --> 01:32:28,000
und von Helligkeit reden, dann

1958
01:32:28,000 --> 01:32:30,000
kriegen wir das schon eher ein.

1959
01:32:34,000 --> 01:32:36,000
Es gibt weitere Farbmodelle.

1960
01:32:36,000 --> 01:32:38,000
YIQ,

1961
01:32:38,000 --> 01:32:40,000
das ist NTSC,

1962
01:32:40,000 --> 01:32:42,000
das ist das

1963
01:32:42,000 --> 01:32:44,000
Farbfernsehen der USA.

1964
01:32:44,000 --> 01:32:46,000
Sie kennen

1965
01:32:46,000 --> 01:32:48,000
das wahrscheinlich, ARG haben wir heute

1966
01:32:48,000 --> 01:32:50,000
schon gehört, auspacken, einschalten,

1967
01:32:50,000 --> 01:32:52,000
geht oder auch nicht.

1968
01:32:52,000 --> 01:32:54,000
NTSC steht für Never the Same

1969
01:32:54,000 --> 01:32:56,000
Color,

1970
01:32:56,000 --> 01:32:58,000
weil eine Helligkeitsänderung

1971
01:32:58,000 --> 01:33:00,000
zu einer Farbveränderung führt.

1972
01:33:00,000 --> 01:33:02,000
Das ist bei YUV.

1973
01:33:02,000 --> 01:33:04,000
YUV ist auch das

1974
01:33:04,000 --> 01:33:06,000
Schwarz-Weiß-Signal und das ist das Farbdifferenz-Signal.

1975
01:33:06,000 --> 01:33:08,000
Das ist also das anonyme Farbfernsehen.

1976
01:33:08,000 --> 01:33:10,000
Nicht der Fall.

1977
01:33:10,000 --> 01:33:12,000
Hier haben wir RGB.

1978
01:33:12,000 --> 01:33:14,000
So wird der Schwarz-Weiß-Anteil

1979
01:33:14,000 --> 01:33:16,000
berechnet und hier die Farbdifferenz-Signale.

1980
01:33:18,000 --> 01:33:20,000
Und in der Video-Codierung

1981
01:33:20,000 --> 01:33:22,000
wird YCbECA

1982
01:33:22,000 --> 01:33:24,000
verwendet. Das ist letztendlich auch

1983
01:33:24,000 --> 01:33:26,000
Schwarz-Weiß-Signal und die Farbdifferenz-Signale.

1984
01:33:26,000 --> 01:33:28,000
Aber

1985
01:33:28,000 --> 01:33:30,000
aus RGB berechnet, so dass

1986
01:33:30,000 --> 01:33:32,000
die Korrelation zwischen diesen

1987
01:33:32,000 --> 01:33:34,000
drei Farbanteilen möglichst

1988
01:33:34,000 --> 01:33:36,000
gering ist.

1989
01:33:36,000 --> 01:33:38,000
Außerdem wird

1990
01:33:38,000 --> 01:33:40,000
dafür die Farben noch im Offset

1991
01:33:40,000 --> 01:33:42,000
drauf addiert.

1992
01:33:42,000 --> 01:33:44,000
Das hier ist jetzt die

1993
01:33:44,000 --> 01:33:46,000
8-Bit-Darstellung offensichtlich.

1994
01:33:46,000 --> 01:33:48,000
CMYK

1995
01:33:48,000 --> 01:33:50,000
für einen Vierfarbdruck.

1996
01:33:50,000 --> 01:33:52,000
Wenn Sie zu einem guten Drucker gehen,

1997
01:33:52,000 --> 01:33:54,000
nicht wie ihr Farbdrucker zu Hause,

1998
01:33:54,000 --> 01:33:56,000
dann wird mit Vierfarben gedruckt.

1999
01:33:56,000 --> 01:33:58,000
Jetzt kennen Sie das

2000
01:33:58,000 --> 01:34:00,000
noch alles.

2001
01:34:00,000 --> 01:34:02,000
Wir machen ein Foto.

2002
01:34:04,000 --> 01:34:06,000
Mein Hemd ist weiß.

2003
01:34:08,000 --> 01:34:10,000
Abends sitzen Sie bei Kerzenschein

2004
01:34:10,000 --> 01:34:12,000
im Restaurant.

2005
01:34:12,000 --> 01:34:14,000
Wieder ein Foto.

2006
01:34:14,000 --> 01:34:16,000
Das Hemd ist dann plötzlich

2007
01:34:16,000 --> 01:34:18,000
nicht mehr weiß.

2008
01:34:18,000 --> 01:34:20,000
Rotstichig.

2009
01:34:22,000 --> 01:34:24,000
Das will man nicht unbedingt.

2010
01:34:24,000 --> 01:34:26,000
Dafür gibt es den sogenannten

2011
01:34:26,000 --> 01:34:28,000
Weißabgleich.

2012
01:34:28,000 --> 01:34:30,000
Was ist ein weißes Objekt?

2013
01:34:30,000 --> 01:34:32,000
Ein weißes Objekt ist ein Objekt,

2014
01:34:32,000 --> 01:34:34,000
was das gesamte sichtbare

2015
01:34:34,000 --> 01:34:36,000
Licht gleichförmig

2016
01:34:36,000 --> 01:34:38,000
reflektiert.

2017
01:34:40,000 --> 01:34:42,000
Unabhängig davon,

2018
01:34:42,000 --> 01:34:44,000
wie die Beleuchtung ist,

2019
01:34:44,000 --> 01:34:46,000
mein weißes Hemd

2020
01:34:46,000 --> 01:34:48,000
werden Sie immer als weiß wahrnehmen.

2021
01:34:48,000 --> 01:34:50,000
Selbst wenn

2022
01:34:50,000 --> 01:34:52,000
ich bei Tageslicht bin,

2023
01:34:52,000 --> 01:34:54,000
draußen in der Sonne,

2024
01:34:54,000 --> 01:34:56,000
wo die Lichtquelle sehr viel

2025
01:34:56,000 --> 01:34:58,000
blaues Licht aussendet.

2026
01:34:58,000 --> 01:35:00,000
Oder auch im Extrem,

2027
01:35:00,000 --> 01:35:02,000
ich sitze im Restaurant mit Kerzenschein,

2028
01:35:02,000 --> 01:35:04,000
wo wir sehr viel rotes Licht in der Beleuchtung haben

2029
01:35:04,000 --> 01:35:06,000
und wenig blaue Energie.

2030
01:35:06,000 --> 01:35:08,000
Das Auge merkt das,

2031
01:35:08,000 --> 01:35:10,000
das weiß bleibt weiß.

2032
01:35:10,000 --> 01:35:12,000
Wenn Sie das jetzt mit einer Kamera machen,

2033
01:35:12,000 --> 01:35:14,000
die macht diese Kompensation nicht.

2034
01:35:16,000 --> 01:35:18,000
Die rechnet also

2035
01:35:18,000 --> 01:35:20,000
die Beleuchtung nicht raus.

2036
01:35:20,000 --> 01:35:22,000
Das heißt, Sie müssen das Bild

2037
01:35:22,000 --> 01:35:24,000
dann,

2038
01:35:24,000 --> 01:35:26,000
Sie müssen den Sensor irgendwie kalibrieren.

2039
01:35:26,000 --> 01:35:28,000
Dazu müssen Sie

2040
01:35:28,000 --> 01:35:30,000
diesen Weißpunkt kennen.

2041
01:35:30,000 --> 01:35:32,000
Da gibt es verschiedene

2042
01:35:32,000 --> 01:35:34,000
Verfahren, wie das gemacht wird.

2043
01:35:34,000 --> 01:35:36,000
Zum Beispiel hältst du

2044
01:35:36,000 --> 01:35:38,000
einen Punkt im Bild,

2045
01:35:38,000 --> 01:35:40,000
dann nimmt die Kamera an,

2046
01:35:40,000 --> 01:35:42,000
oh, das muss weiß sein und richtet dann

2047
01:35:42,000 --> 01:35:44,000
die Umrechnung der Farben

2048
01:35:44,000 --> 01:35:46,000
entsprechend ein.

2049
01:35:46,000 --> 01:35:48,000
Da gibt es dann diese

2050
01:35:48,000 --> 01:35:50,000
Korrekturfaktoren, diese linearen Faktoren

2051
01:35:50,000 --> 01:35:52,000
für rot, grün und blau.

2052
01:35:56,000 --> 01:35:58,000
Und entsprechend der Farbtemperatur

2053
01:35:58,000 --> 01:36:00,000
wird das dann

2054
01:36:00,000 --> 01:36:02,000
gewählt.

2055
01:36:04,000 --> 01:36:06,000
Also,

2056
01:36:06,000 --> 01:36:08,000
hier haben wir ein Bild.

2057
01:36:08,000 --> 01:36:10,000
Das sind jetzt erstmal,

2058
01:36:10,000 --> 01:36:12,000
wenn Sie so wollen, das sind die Rohdaten.

2059
01:36:12,000 --> 01:36:14,000
Das ist das, was der Sensor misst.

2060
01:36:14,000 --> 01:36:16,000
Jetzt guckt

2061
01:36:16,000 --> 01:36:18,000
die Logik

2062
01:36:18,000 --> 01:36:20,000
der Rechner auf ihrer Kamera,

2063
01:36:20,000 --> 01:36:22,000
wo ist es denn besonders hell? Das ist hier.

2064
01:36:22,000 --> 01:36:24,000
Und von diesem hellen Bereich wird angenommen,

2065
01:36:24,000 --> 01:36:26,000
der ist weiß.

2066
01:36:28,000 --> 01:36:30,000
Wenn man jetzt mal

2067
01:36:30,000 --> 01:36:32,000
im HSI-Farbraum guckt,

2068
01:36:32,000 --> 01:36:34,000
die hellen Bildpunkte,

2069
01:36:34,000 --> 01:36:36,000
wenn die weiß wären,

2070
01:36:36,000 --> 01:36:38,000
dann müssten sie ja auf diesem Graukeil liegen.

2071
01:36:38,000 --> 01:36:40,000
Es wird festgestellt, die hellen Bildpunkte

2072
01:36:40,000 --> 01:36:42,000
liegen aber irgendwie so.

2073
01:36:42,000 --> 01:36:44,000
Dann haben wir einen Farbstich.

2074
01:36:44,000 --> 01:36:46,000
Dann wird einfach das ganze

2075
01:36:46,000 --> 01:36:48,000
RGB-Spektrum, diese Faktoren,

2076
01:36:48,000 --> 01:36:50,000
die wir gerade hatten, so umgerechnet,

2077
01:36:50,000 --> 01:36:52,000
dass das hier zum Leben kommt

2078
01:36:52,000 --> 01:36:54,000
und

2079
01:36:54,000 --> 01:36:56,000
der Grünstich ist weg.

2080
01:36:58,000 --> 01:37:00,000
Das setzt voraus,

2081
01:37:00,000 --> 01:37:02,000
dass die Annahme,

2082
01:37:02,000 --> 01:37:04,000
die hellsten Bildbereiche sind weiß,

2083
01:37:04,000 --> 01:37:06,000
auch stimmt.

2084
01:37:06,000 --> 01:37:08,000
Ich war mal irgendwo

2085
01:37:08,000 --> 01:37:10,000
im Urwald und an einer Stelle

2086
01:37:10,000 --> 01:37:12,000
war alles grün.

2087
01:37:12,000 --> 01:37:14,000
Es war so grün,

2088
01:37:14,000 --> 01:37:16,000
dass auch mein Auge

2089
01:37:16,000 --> 01:37:18,000
das Weiß nicht mehr zum Weiß

2090
01:37:18,000 --> 01:37:20,000
machte, sondern es war einfach grün.

2091
01:37:20,000 --> 01:37:22,000
Dann habe ich ein Bild gemacht.

2092
01:37:22,000 --> 01:37:24,000
Da ist das irgendwie gar nicht zu sehen

2093
01:37:24,000 --> 01:37:26,000
gewesen, weil

2094
01:37:26,000 --> 01:37:28,000
der hellste Bildbereich wurde auf Grau

2095
01:37:28,000 --> 01:37:30,000
korrigiert und damit war

2096
01:37:30,000 --> 01:37:32,000
der Grünstich,

2097
01:37:32,000 --> 01:37:34,000
der wirklich da war,

2098
01:37:34,000 --> 01:37:36,000
weg.

2099
01:37:36,000 --> 01:37:38,000
Wenn sie die Rohdaten

2100
01:37:38,000 --> 01:37:40,000
des Bildes haben,

2101
01:37:40,000 --> 01:37:42,000
dann

2102
01:37:42,000 --> 01:37:44,000
können sie das natürlich

2103
01:37:44,000 --> 01:37:46,000
wieder beheben und wiederherstellen.

2104
01:37:46,000 --> 01:37:48,000
Wenn sie nur das JPEG-Bild ihrer Kamera haben,

2105
01:37:48,000 --> 01:37:50,000
nicht die Rohdaten, dann speichern sie letztendlich

2106
01:37:50,000 --> 01:37:52,000
dieses kompensierte Bild

2107
01:37:52,000 --> 01:37:54,000
ab und dann sind

2108
01:37:54,000 --> 01:37:56,000
die Effekte weg.

2109
01:37:56,000 --> 01:37:58,000
Je nachdem,

2110
01:37:58,000 --> 01:38:00,000
wie die

2111
01:38:00,000 --> 01:38:02,000
Farbtemperatur

2112
01:38:02,000 --> 01:38:04,000
eines Bildes dann wahrgenommen

2113
01:38:04,000 --> 01:38:06,000
wird, sieht das Bild

2114
01:38:06,000 --> 01:38:08,000
so aus, wie Sie es hier

2115
01:38:08,000 --> 01:38:10,000
sehen. Wenn wir jetzt auf diese Bilder

2116
01:38:10,000 --> 01:38:12,000
gucken für 2800 Kelvin,

2117
01:38:12,000 --> 01:38:14,000
das ist also

2118
01:38:14,000 --> 01:38:16,000
Kerzenlicht oder Glühlampenlicht.

2119
01:38:16,000 --> 01:38:18,000
4500 Kelvin,

2120
01:38:18,000 --> 01:38:20,000
das ist schon eher draußen,

2121
01:38:20,000 --> 01:38:22,000
aber

2122
01:38:22,000 --> 01:38:24,000
es ist

2123
01:38:24,000 --> 01:38:26,000
nicht volles Tageslicht.

2124
01:38:26,000 --> 01:38:28,000
10.000 Kelvin, das wäre dann

2125
01:38:28,000 --> 01:38:30,000
nackiger Sonnenschein.

2126
01:38:30,000 --> 01:38:32,000
Wenn Sie jetzt

2127
01:38:32,000 --> 01:38:34,000
die Rohdaten, die dazu

2128
01:38:34,000 --> 01:38:36,000
gehören, kompensieren und

2129
01:38:36,000 --> 01:38:38,000
sagen, das hellste muss wohl weiß sein

2130
01:38:38,000 --> 01:38:40,000
und das ist in diesem Bild wohl der Fall,

2131
01:38:40,000 --> 01:38:42,000
weiß hier oder hier, dann haben Sie

2132
01:38:42,000 --> 01:38:44,000
eine automatische Farbkorrektur und Sie

2133
01:38:44,000 --> 01:38:46,000
bekommen ein Bild, was

2134
01:38:46,000 --> 01:38:48,000
richtig ist.

2135
01:38:48,000 --> 01:38:50,000
Das kann auch

2136
01:38:50,000 --> 01:38:52,000
daneben gehen.

2137
01:38:52,000 --> 01:38:54,000
Das hier

2138
01:38:54,000 --> 01:38:56,000
ist

2139
01:38:56,000 --> 01:38:58,000
das Bild,

2140
01:38:58,000 --> 01:39:00,000
wie es

2141
01:39:00,000 --> 01:39:02,000
aus der automatischen Farbkorrektur rauskommt.

2142
01:39:02,000 --> 01:39:04,000
Die hellsten Bereiche

2143
01:39:04,000 --> 01:39:06,000
sind diese Blätter.

2144
01:39:06,000 --> 01:39:08,000
Da wird dann gesagt, die sind weiß.

2145
01:39:08,000 --> 01:39:10,000
Damit kriegen wir hier

2146
01:39:10,000 --> 01:39:12,000
das Bild, was Sie

2147
01:39:12,000 --> 01:39:14,000
links sehen.

2148
01:39:14,000 --> 01:39:16,000
Die reale Lilie sieht aber so

2149
01:39:16,000 --> 01:39:18,000
aus.

2150
01:39:18,000 --> 01:39:20,000
Wenn Sie die beiden Bilder jetzt vergleichen, würde man sagen,

2151
01:39:20,000 --> 01:39:22,000
hier hat die Lilie einen Blaustich.

2152
01:39:22,000 --> 01:39:24,000
Das ist jetzt vielleicht nicht so ganz offensichtlich, aber

2153
01:39:24,000 --> 01:39:26,000
wenn man das Original kennt,

2154
01:39:26,000 --> 01:39:28,000
wenn man mit dem Auge drauf guckt, dann erkennt man, dass

2155
01:39:28,000 --> 01:39:30,000
die Farbkorrektur schief gegangen ist.

2156
01:39:30,000 --> 01:39:32,000
Weil eben das, was als weiß

2157
01:39:32,000 --> 01:39:34,000
angenommen wird, nicht weiß ist.

2158
01:39:38,000 --> 01:39:40,000
Wir hatten jetzt Farbmischung,

2159
01:39:40,000 --> 01:39:42,000
entweder additive

2160
01:39:42,000 --> 01:39:44,000
Farbmischung, das heißt, Sie haben

2161
01:39:44,000 --> 01:39:46,000
verschiedene Lichtquellen, die Farben bringen

2162
01:39:46,000 --> 01:39:48,000
oder subtraktive Farbmischung,

2163
01:39:48,000 --> 01:39:50,000
das heißt, beim Druck wird

2164
01:39:50,000 --> 01:39:52,000
ein Teil

2165
01:39:52,000 --> 01:39:54,000
des Spektrums aus der Beleuchtung rausgenommen.

2166
01:39:56,000 --> 01:39:58,000
Das Farbverempfinden

2167
01:39:58,000 --> 01:40:00,000
der Menschen ist recht ähnlich.

2168
01:40:00,000 --> 01:40:02,000
Deswegen funktionieren die

2169
01:40:02,000 --> 01:40:04,000
Monitore auch. Ein Orange

2170
01:40:04,000 --> 01:40:06,000
ist für mich eine gewisse

2171
01:40:06,000 --> 01:40:08,000
RGB-Kombination und für Sie

2172
01:40:08,000 --> 01:40:10,000
ist diese

2173
01:40:10,000 --> 01:40:12,000
RGB-Kombination nahezu

2174
01:40:12,000 --> 01:40:14,000
identisch.

2175
01:40:14,000 --> 01:40:16,000
Es gibt verschiedene Farbmodelle.

2176
01:40:16,000 --> 01:40:18,000
RGB bei den Displays ist das, was

2177
01:40:18,000 --> 01:40:20,000
dominiert, eigentlich das Einzige, was es

2178
01:40:20,000 --> 01:40:22,000
gibt.

2179
01:40:22,000 --> 01:40:24,000
Der Farbraum, der mit den Displays dargestellt

2180
01:40:24,000 --> 01:40:26,000
werden kann,

2181
01:40:26,000 --> 01:40:28,000
ist im Laufe der Jahre immer größer

2182
01:40:28,000 --> 01:40:30,000
geworden, weil man in der Lage war,

2183
01:40:30,000 --> 01:40:32,000
die Rot-Grün-Blau, die Primaris

2184
01:40:32,000 --> 01:40:34,000
Farben weiter auseinanderzusetzen

2185
01:40:34,000 --> 01:40:36,000
auf dieser CEI-Farbtafel.

2186
01:40:40,000 --> 01:40:42,000
Es gibt daneben noch die Farbräume, die den menschlichen

2187
01:40:42,000 --> 01:40:44,000
Empfinden

2188
01:40:44,000 --> 01:40:46,000
interessender erscheinen.

2189
01:40:46,000 --> 01:40:48,000
Wir unterscheiden natürlich

2190
01:40:48,000 --> 01:40:50,000
Helligkeit, Farbe und Farbsättigung.

2191
01:40:50,000 --> 01:40:52,000
Das ist der HSI-Raum,

2192
01:40:52,000 --> 01:40:54,000
der wird für Interaktionen

2193
01:40:54,000 --> 01:40:56,000
gerne verwendet.

2194
01:40:56,000 --> 01:40:58,000
Der LAB-Raum, bei dem euklidische

2195
01:40:58,000 --> 01:41:00,000
Abstände gleich dem menschlichen

2196
01:41:00,000 --> 01:41:02,000
Empfinden entsprechen,

2197
01:41:02,000 --> 01:41:04,000
wird auch gerne,

2198
01:41:04,000 --> 01:41:06,000
aber eher selten eingesetzt.

2199
01:41:06,000 --> 01:41:08,000
Zum Schluss hat man nochmal über das Thema

2200
01:41:08,000 --> 01:41:10,000
Weißabgleich gesprochen.

2201
01:41:10,000 --> 01:41:12,000
Damit sind wir auch dann hier durch.

2202
01:41:14,000 --> 01:41:16,000
Heute geht das alles

2203
01:41:16,000 --> 01:41:18,000
viel schneller als erwartet.

2204
01:41:20,000 --> 01:41:22,000
Dann machen wir jetzt mal eine 5-Minuten-Pause,

2205
01:41:22,000 --> 01:41:24,000
die ich nutze, um

2206
01:41:26,000 --> 01:41:28,000
eine neue Datei hochzuladen.

2207
01:41:30,000 --> 01:41:32,000
Und so ich einen Kaffee und bis gleich.

2208
01:41:40,000 --> 01:41:42,000
Bildanalyse wird wichtiger,

2209
01:41:42,000 --> 01:41:44,000
weil wir heute immer mehr in den Bildern erkennen können.

2210
01:41:46,000 --> 01:41:48,000
Das hat überwiegend etwas

2211
01:41:48,000 --> 01:41:50,000
mit Rechenleistung zu tun,

2212
01:41:50,000 --> 01:41:52,000
nicht so sehr mit künstlicher Intelligenz

2213
01:41:52,000 --> 01:41:54,000
oder neuronalen Netzen.

2214
01:41:54,000 --> 01:41:56,000
Wir waren einfach vor 20 Jahren nicht in der Lage,

2215
01:41:56,000 --> 01:41:58,000
zu vertretbaren Kosten

2216
01:41:58,000 --> 01:42:00,000
ein Bild mit 20 Millionen Pixeln

2217
01:42:02,000 --> 01:42:04,000
aufzunehmen oder zu verarbeiten.

2218
01:42:04,000 --> 01:42:06,000
Was wollen wir?

2219
01:42:06,000 --> 01:42:08,000
Wir schauen uns ein Bild an

2220
01:42:08,000 --> 01:42:10,000
und wir wollen wissen,

2221
01:42:10,000 --> 01:42:12,000
was ist da drin.

2222
01:42:12,000 --> 01:42:14,000
Dann gibt es eine

2223
01:42:14,000 --> 01:42:16,000
Low-Level-Bildanalyse.

2224
01:42:16,000 --> 01:42:18,000
Da wollen wir jetzt nicht wissen,

2225
01:42:18,000 --> 01:42:20,000
da ist Karl Otto,

2226
01:42:20,000 --> 01:42:22,000
sondern wir wollen vielleicht wissen,

2227
01:42:22,000 --> 01:42:24,000
da ist ein Gesicht.

2228
01:42:24,000 --> 01:42:26,000
Oder wir wollen wissen,

2229
01:42:26,000 --> 01:42:28,000
wo sind die Kanten.

2230
01:42:30,000 --> 01:42:32,000
Ein Menschen,

2231
01:42:32,000 --> 01:42:34,000
kann ich sagen,

2232
01:42:34,000 --> 01:42:36,000
was siehst du da?

2233
01:42:36,000 --> 01:42:38,000
Hier ist ein Bild,

2234
01:42:38,000 --> 01:42:40,000
erzähl mal und dann kommt typischerweise

2235
01:42:40,000 --> 01:42:42,000
was Sinnvolles zurück.

2236
01:42:42,000 --> 01:42:44,000
Einem Computer können sie das nicht sagen.

2237
01:42:44,000 --> 01:42:46,000
Ganz wichtig,

2238
01:42:46,000 --> 01:42:48,000
eine aufgabenorientierte

2239
01:42:48,000 --> 01:42:50,000
Interpretation des Bildinhaltes ist möglich

2240
01:42:50,000 --> 01:42:52,000
und nur das ist möglich.

2241
01:42:52,000 --> 01:42:54,000
Die Aufgabe muss vorher klar sein.

2242
01:42:54,000 --> 01:42:56,000
Die Aufgaben

2243
01:42:56,000 --> 01:42:58,000
in der Bildanalyse sind unterschiedlich,

2244
01:42:58,000 --> 01:43:00,000
bedeutet unterschiedliche Algorithmen.

2245
01:43:00,000 --> 01:43:02,000
Oder auch

2246
01:43:02,000 --> 01:43:04,000
unterschiedliche

2247
01:43:04,000 --> 01:43:06,000
Lösungswege.

2248
01:43:06,000 --> 01:43:08,000
Bildverarbeitung ist eine Abfolge

2249
01:43:08,000 --> 01:43:10,000
von Schritten, die irgendwo

2250
01:43:10,000 --> 01:43:12,000
Sinn machen,

2251
01:43:12,000 --> 01:43:14,000
aber es gibt keine Theorie,

2252
01:43:14,000 --> 01:43:16,000
die sagt, hier ein Bild,

2253
01:43:16,000 --> 01:43:18,000
hier ist die Aufgabe, wo ist der Hund

2254
01:43:18,000 --> 01:43:20,000
und dann eine Formel, mit der ich

2255
01:43:20,000 --> 01:43:22,000
ausrechnen kann, in welchen Schritten

2256
01:43:22,000 --> 01:43:24,000
ich diese Bildanalyse

2257
01:43:24,000 --> 01:43:26,000
durchführen kann.

2258
01:43:26,000 --> 01:43:28,000
Beispiele

2259
01:43:28,000 --> 01:43:30,000
zu Basisalgorithmen

2260
01:43:30,000 --> 01:43:32,000
und

2261
01:43:32,000 --> 01:43:34,000
dem, was so

2262
01:43:34,000 --> 01:43:36,000
hier besprochen werden soll.

2263
01:43:36,000 --> 01:43:38,000
Digitale Bildverarbeitung,

2264
01:43:38,000 --> 01:43:40,000
da gibt es unterschiedliche

2265
01:43:40,000 --> 01:43:42,000
Nomenklaturen,

2266
01:43:42,000 --> 01:43:44,000
was das ist. Auf alle Fälle

2267
01:43:44,000 --> 01:43:46,000
besteht

2268
01:43:46,000 --> 01:43:48,000
Einigkeit darüber,

2269
01:43:48,000 --> 01:43:50,000
Bildverarbeitung hat als Eingang

2270
01:43:50,000 --> 01:43:52,000
ein Bild und als Ausgang

2271
01:43:52,000 --> 01:43:54,000
Informationen zu dem Bild.

2272
01:43:54,000 --> 01:43:56,000
Die Bildverarbeitung

2273
01:43:56,000 --> 01:43:58,000
könnte dann zum Beispiel Bildverbesserung sein,

2274
01:43:58,000 --> 01:44:00,000
Bildfilterung und

2275
01:44:00,000 --> 01:44:02,000
die Extraktion von

2276
01:44:02,000 --> 01:44:04,000
Merkmalen, Ecken,

2277
01:44:04,000 --> 01:44:06,000
Kanten,

2278
01:44:06,000 --> 01:44:08,000
Segmenten,

2279
01:44:08,000 --> 01:44:10,000
Regionen von Einheitlichkeit.

2280
01:44:10,000 --> 01:44:12,000
Die

2281
01:44:12,000 --> 01:44:14,000
Bildanalyse

2282
01:44:14,000 --> 01:44:16,000
nimmt diese

2283
01:44:16,000 --> 01:44:18,000
Merkmale,

2284
01:44:18,000 --> 01:44:20,000
die teilweise auch im Rahmen der

2285
01:44:20,000 --> 01:44:22,000
Bildanalyse berechnet werden,

2286
01:44:22,000 --> 01:44:24,000
versucht dann eine Bildinterpretation

2287
01:44:24,000 --> 01:44:26,000
auf Neudeutsch Computer Vision

2288
01:44:26,000 --> 01:44:28,000
oder auch

2289
01:44:28,000 --> 01:44:30,000
Mustererkennung.

2290
01:44:32,000 --> 01:44:34,000
Das ist so zu den Begrifflichkeiten

2291
01:44:34,000 --> 01:44:36,000
und wir

2292
01:44:36,000 --> 01:44:38,000
werden uns sicherlich

2293
01:44:38,000 --> 01:44:40,000
hier auf dem unteren Bereich

2294
01:44:40,000 --> 01:44:42,000
mehr verschenken.

2295
01:44:46,000 --> 01:44:48,000
Eine wichtige Sache

2296
01:44:48,000 --> 01:44:50,000
für effiziente

2297
01:44:50,000 --> 01:44:52,000
Bildcodierung, aber auch für

2298
01:44:52,000 --> 01:44:54,000
Überwachungskameras zum Beispiel,

2299
01:44:54,000 --> 01:44:56,000
ist, was hat sich verändert?

2300
01:44:56,000 --> 01:44:58,000
Eine Möglichkeit,

2301
01:44:58,000 --> 01:45:00,000
wie man so etwas machen könnte,

2302
01:45:00,000 --> 01:45:02,000
Sie sehen hier einmal das Bild

2303
01:45:02,000 --> 01:45:04,000
ohne Mensch und einmal mit Mensch.

2304
01:45:04,000 --> 01:45:06,000
Sie nehmen diese beiden Bilder, berechnen die Differenz

2305
01:45:06,000 --> 01:45:08,000
und dann werden Sie feststellen,

2306
01:45:08,000 --> 01:45:10,000
oh,

2307
01:45:10,000 --> 01:45:12,000
an den meisten Stellen ist die Differenz von 0

2308
01:45:12,000 --> 01:45:14,000
verschieden, aber wann liegt das da an der Sensorrausch?

2309
01:45:14,000 --> 01:45:16,000
Hier ist eine schwach beleuchtete Szene,

2310
01:45:16,000 --> 01:45:18,000
also an dem viel rauschenden Bild.

2311
01:45:18,000 --> 01:45:20,000
Wir werden also einen Schwellwert auf

2312
01:45:20,000 --> 01:45:22,000
diese bildpunktweisen Änderungen anwenden.

2313
01:45:22,000 --> 01:45:24,000
Dort, wo die Veränderung groß ist,

2314
01:45:24,000 --> 01:45:26,000
vermuten wir, hat sich auch etwas verändert.

2315
01:45:26,000 --> 01:45:28,000
Hier haben wir ein Binärbild, das sehen Sie

2316
01:45:28,000 --> 01:45:30,000
hier und

2317
01:45:30,000 --> 01:45:32,000
dieses Binärbild sieht

2318
01:45:32,000 --> 01:45:34,000
etwas erschreckend nicht so aus,

2319
01:45:34,000 --> 01:45:36,000
wie wir uns vorstellen. Also wir sehen hier genau,

2320
01:45:36,000 --> 01:45:38,000
wo der Mensch ist, da gibt es gar keine,

2321
01:45:38,000 --> 01:45:40,000
also könnte ich Ihnen allen sagen,

2322
01:45:40,000 --> 01:45:42,000
zeichnen Sie mal, wo der Mensch ist und

2323
01:45:42,000 --> 01:45:44,000
wir würden alle zu einem mehr oder weniger

2324
01:45:44,000 --> 01:45:46,000
identischen Ergebnis kommen.

2325
01:45:46,000 --> 01:45:48,000
Keiner von Ihnen würde auf die Idee kommen,

2326
01:45:48,000 --> 01:45:50,000
den Schatten des Menschen als Teil

2327
01:45:50,000 --> 01:45:52,000
des Menschen oder Teil der Veränderung

2328
01:45:52,000 --> 01:45:54,000
zu deklarieren und auch hier die einzelnen

2329
01:45:54,000 --> 01:45:56,000
Punkte würden wir nicht haben.

2330
01:45:56,000 --> 01:45:58,000
Wir würden aber alle den Brustbereich

2331
01:45:58,000 --> 01:46:00,000
als Teil der Veränderung markieren,

2332
01:46:00,000 --> 01:46:02,000
obwohl anscheinend dieses T-Shirt und

2333
01:46:02,000 --> 01:46:04,000
dieser Balken

2334
01:46:04,000 --> 01:46:06,000
die gleiche Farbe haben.

2335
01:46:06,000 --> 01:46:08,000
Warum? Weil wir wissen, was ein Mensch ist

2336
01:46:08,000 --> 01:46:10,000
und wir wissen, da sind nicht nur einzelne

2337
01:46:10,000 --> 01:46:12,000
Teile vom Menschen aufgetaucht,

2338
01:46:12,000 --> 01:46:14,000
sondern das muss der ganze Mensch sein.

2339
01:46:14,000 --> 01:46:16,000
Also wird man versuchen,

2340
01:46:16,000 --> 01:46:18,000
durch sogenannte morphologische Operationen

2341
01:46:18,000 --> 01:46:20,000
dieses Ding

2342
01:46:20,000 --> 01:46:22,000
zu verarbeiten, sodass da nach

2343
01:46:22,000 --> 01:46:24,000
Möglichkeit ein ganzer Mensch rauskommt

2344
01:46:24,000 --> 01:46:26,000
und

2345
01:46:26,000 --> 01:46:28,000
dann wird man

2346
01:46:28,000 --> 01:46:30,000
aus dem, was aus der Maske, die dann

2347
01:46:30,000 --> 01:46:32,000
hier rauskommt, Merkmale brechen.

2348
01:46:32,000 --> 01:46:34,000
Was diese morphologischen Operationen

2349
01:46:34,000 --> 01:46:36,000
mit Sicherheit schaffen, ist die einzelnen

2350
01:46:36,000 --> 01:46:38,000
Bildpunkte, die wir hier haben,

2351
01:46:38,000 --> 01:46:40,000
zu löschen. Ob Sie hier einen kompletten

2352
01:46:40,000 --> 01:46:42,000
Oberkörper daraus kriegen,

2353
01:46:42,000 --> 01:46:44,000
das

2354
01:46:44,000 --> 01:46:46,000
können Sie erzwingen, aber das hat dann

2355
01:46:46,000 --> 01:46:48,000
womöglich für andere Bildteile irgendwelche

2356
01:46:48,000 --> 01:46:50,000
Nachteile.

2357
01:46:52,000 --> 01:46:54,000
Wenn man das hat, könnte man dann

2358
01:46:54,000 --> 01:46:56,000
sagen, wir klassifizieren.

2359
01:46:56,000 --> 01:46:58,000
Also Kantenextraktion.

2360
01:46:58,000 --> 01:47:00,000
Zum Beispiel,

2361
01:47:00,000 --> 01:47:02,000
wenn Sie

2362
01:47:02,000 --> 01:47:04,000
Straßen extrahieren wollen,

2363
01:47:04,000 --> 01:47:06,000
hier mal

2364
01:47:06,000 --> 01:47:08,000
das Luftbild in der Großaufnahme,

2365
01:47:08,000 --> 01:47:10,000
hier im Detail und hier dann mal

2366
01:47:10,000 --> 01:47:12,000
durch Kantenextraktion

2367
01:47:14,000 --> 01:47:16,000
gefundene Straßen.

2368
01:47:16,000 --> 01:47:18,000
Was Sie auch schon gleich sehen, die Kanten sind hier

2369
01:47:18,000 --> 01:47:20,000
nicht ideal.

2370
01:47:20,000 --> 01:47:22,000
Wir

2371
01:47:22,000 --> 01:47:24,000
als Menschen sehen, da sind die Straßen markiert,

2372
01:47:24,000 --> 01:47:26,000
aber dass hier die Lücken zu schließen sind

2373
01:47:26,000 --> 01:47:28,000
zwischen diesen

2374
01:47:28,000 --> 01:47:30,000
einzelnen Kanten, das ist schon wieder etwas,

2375
01:47:30,000 --> 01:47:32,000
was wir hier im Kopf machen. Das müssen wir

2376
01:47:32,000 --> 01:47:34,000
Computer erst mal getrennt beibringen.

2377
01:47:36,000 --> 01:47:38,000
Hier ein Beispiel, sicherlich

2378
01:47:38,000 --> 01:47:40,000
wichtig für autonomes Fahren, dass man die

2379
01:47:40,000 --> 01:47:42,000
Fahrbahnrandmarkierung erkennt.

2380
01:47:42,000 --> 01:47:44,000
Das klappt gut, das wissen Sie.

2381
01:47:44,000 --> 01:47:46,000
Es gibt für alle möglichen

2382
01:47:46,000 --> 01:47:48,000
Fahrzeuge einen Spurhalteassistenten,

2383
01:47:48,000 --> 01:47:50,000
der sich irgendwie am Straßenrand

2384
01:47:50,000 --> 01:47:52,000
und an die Fahrbahnmarkierung orientiert.

2385
01:47:56,000 --> 01:47:58,000
Moderne Autos sagen Ihnen immer,

2386
01:47:58,000 --> 01:48:00,000
wie schnell Sie fahren dürfen.

2387
01:48:02,000 --> 01:48:04,000
Manche erlauben es Ihnen dann auch einzustellen,

2388
01:48:04,000 --> 01:48:06,000
dass wenn Sie zum Beispiel 20 Kilometer

2389
01:48:06,000 --> 01:48:08,000
oberhalb dieser Geschwindigkeit sind,

2390
01:48:08,000 --> 01:48:10,000
dass es dann piept.

2391
01:48:10,000 --> 01:48:12,000
Die erkennen

2392
01:48:12,000 --> 01:48:14,000
die Verkehrszeichen.

2393
01:48:14,000 --> 01:48:16,000
Vielleicht werden erstmal geometrische

2394
01:48:16,000 --> 01:48:18,000
Primitive gefunden,

2395
01:48:18,000 --> 01:48:20,000
Kreise, Achtecke

2396
01:48:20,000 --> 01:48:22,000
und irgendwann wird dann auch aus diesen

2397
01:48:22,000 --> 01:48:24,000
Kreisen versucht,

2398
01:48:24,000 --> 01:48:26,000
herauszukriegen, was stehen denn da

2399
01:48:26,000 --> 01:48:28,000
für Zahlen drin.

2400
01:48:30,000 --> 01:48:32,000
Manchmal will man auch Formen finden

2401
01:48:34,000 --> 01:48:36,000
und da ist es dann

2402
01:48:36,000 --> 01:48:38,000
wichtig, dass man diese Formen

2403
01:48:38,000 --> 01:48:40,000
unabhängig finden kann.

2404
01:48:44,000 --> 01:48:46,000
Wie könnte man sowas machen?

2405
01:48:46,000 --> 01:48:48,000
Man erzeugt erstmal ein Modell von dem, was man haben will.

2406
01:48:50,000 --> 01:48:52,000
Mit der Bildverarbeitung

2407
01:48:52,000 --> 01:48:54,000
nehmen Sie ein paar Bilder auf,

2408
01:48:54,000 --> 01:48:56,000
mitteln Sie die Bilder,

2409
01:48:56,000 --> 01:48:58,000
damit Sie Rauschen raushaben

2410
01:48:58,000 --> 01:49:00,000
und haben dann hier ein

2411
01:49:00,000 --> 01:49:02,000
Referenzbild, was

2412
01:49:02,000 --> 01:49:04,000
eine kleine Auflösung hat.

2413
01:49:04,000 --> 01:49:06,000
Vielleicht nehmen Sie auch

2414
01:49:06,000 --> 01:49:08,000
CAD-Daten, weil

2415
01:49:08,000 --> 01:49:10,000
das eine

2416
01:49:10,000 --> 01:49:12,000
produzierte

2417
01:49:12,000 --> 01:49:14,000
Geometrie ist, aus der können Sie ein synthetisches

2418
01:49:14,000 --> 01:49:16,000
Bild erzeugen

2419
01:49:16,000 --> 01:49:18,000
und daraus ein Modell

2420
01:49:18,000 --> 01:49:20,000
generieren. Dieses Modell hat

2421
01:49:20,000 --> 01:49:22,000
dann auch noch ein paar Parameter, die

2422
01:49:22,000 --> 01:49:24,000
vielleicht beschreiben, was sich an dem

2423
01:49:24,000 --> 01:49:26,000
Modell verändern kann, wenn ich es jetzt in der

2424
01:49:26,000 --> 01:49:28,000
realen Welt suche.

2425
01:49:30,000 --> 01:49:32,000
Das machen Sie

2426
01:49:32,000 --> 01:49:34,000
einmal.

2427
01:49:34,000 --> 01:49:36,000
Das machen Sie

2428
01:49:36,000 --> 01:49:38,000
für klassische

2429
01:49:38,000 --> 01:49:40,000
Algorithmen,

2430
01:49:40,000 --> 01:49:42,000
mit denen Sie versuchen

2431
01:49:42,000 --> 01:49:44,000
wollen, irgendwelche Objekte zu finden.

2432
01:49:44,000 --> 01:49:46,000
Das machen Sie aber auch, wenn Sie neuronale

2433
01:49:46,000 --> 01:49:48,000
Netze erzeugen wollen. Dann erzeugen Sie sich erstmal dieses

2434
01:49:48,000 --> 01:49:50,000
Modell und das machen Sie einmal.

2435
01:49:50,000 --> 01:49:52,000
Und dann gehen Sie in den

2436
01:49:52,000 --> 01:49:54,000
Live-Betrieb, haben Sie ein Bild.

2437
01:49:54,000 --> 01:49:56,000
Auf das Bild

2438
01:49:56,000 --> 01:49:58,000
wenden Sie Ihr Modell an.

2439
01:49:58,000 --> 01:50:00,000
Sie versuchen, das Modell, was Sie haben, auf das Bild anzupassen.

2440
01:50:00,000 --> 01:50:02,000
Sie haben noch

2441
01:50:02,000 --> 01:50:04,000
irgendwelche Applikationsparameter, die

2442
01:50:04,000 --> 01:50:06,000
Ihnen vielleicht sagen, wie groß

2443
01:50:06,000 --> 01:50:08,000
ist denn das Objekt, für das Sie

2444
01:50:08,000 --> 01:50:10,000
das Modell haben.

2445
01:50:10,000 --> 01:50:12,000
Wie groß ist das Modell zu finden?

2446
01:50:12,000 --> 01:50:14,000
Vielleicht haben Sie da andere Farbkanäle.

2447
01:50:14,000 --> 01:50:16,000
Hier haben Sie ein Farbmodell trainiert,

2448
01:50:16,000 --> 01:50:18,000
hier haben Sie nur schwarz-weiß Bilder oder ähnliches.

2449
01:50:18,000 --> 01:50:20,000
Da haben Sie also immer noch irgendwelche

2450
01:50:20,000 --> 01:50:22,000
Parameter, die Sie für die Anwendung einstellen müssen.

2451
01:50:22,000 --> 01:50:24,000
Und man kommt da zum Beispiel raus, Position,

2452
01:50:24,000 --> 01:50:26,000
Winkel, Größe

2453
01:50:26,000 --> 01:50:28,000
und auch ganz wichtig,

2454
01:50:28,000 --> 01:50:30,000
wie sicher ist sich

2455
01:50:30,000 --> 01:50:32,000
der Algorithmus, dass er nun

2456
01:50:32,000 --> 01:50:34,000
dieses Modell

2457
01:50:34,000 --> 01:50:36,000
in dem Bild gefunden hat.

2458
01:50:36,000 --> 01:50:38,000
Und hier

2459
01:50:38,000 --> 01:50:40,000
in diesem Beispiel, dieses Modell,

2460
01:50:40,000 --> 01:50:42,000
was man hier hat, ist sicherlich irgendwie

2461
01:50:42,000 --> 01:50:44,000
durch die Konturen gestoppt.

2462
01:50:46,000 --> 01:50:48,000
Gesichtsdetektion

2463
01:50:48,000 --> 01:50:50,000
hatte ich schon

2464
01:50:50,000 --> 01:50:52,000
erwähnt.

2465
01:50:52,000 --> 01:50:54,000
Das ist der Viola Jones

2466
01:50:54,000 --> 01:50:56,000
Gesichtsdetektor.

2467
01:50:56,000 --> 01:50:58,000
Sie haben

2468
01:50:58,000 --> 01:51:00,000
ein Grauwertbild,

2469
01:51:00,000 --> 01:51:02,000
das reicht, um

2470
01:51:02,000 --> 01:51:04,000
ein

2471
01:51:04,000 --> 01:51:06,000
Gesicht zu finden.

2472
01:51:06,000 --> 01:51:08,000
Das Bild filtern Sie

2473
01:51:08,000 --> 01:51:10,000
zuerst mit einer Maske

2474
01:51:10,000 --> 01:51:12,000
und dort, wo diese Maske ausschlägt,

2475
01:51:12,000 --> 01:51:14,000
da filtern Sie

2476
01:51:14,000 --> 01:51:16,000
dann mit einer zweiten Maske drüber

2477
01:51:16,000 --> 01:51:18,000
und da, wo dann

2478
01:51:18,000 --> 01:51:20,000
dieses Filter ausschlägt, da haben Sie

2479
01:51:20,000 --> 01:51:22,000
beide Filter ausgeschlagen.

2480
01:51:22,000 --> 01:51:24,000
Sie haben noch weiteren Filter, nur noch

2481
01:51:24,000 --> 01:51:26,000
kriegen dann

2482
01:51:26,000 --> 01:51:28,000
wieder ein Merkmalsvektor,

2483
01:51:28,000 --> 01:51:30,000
wie groß sind die Filterausschläge

2484
01:51:30,000 --> 01:51:32,000
für diese ganzen Bereiche

2485
01:51:32,000 --> 01:51:34,000
und wenn dieser Merkmalsvektor

2486
01:51:34,000 --> 01:51:36,000
in Ihrem Modell ähnlich ist,

2487
01:51:36,000 --> 01:51:38,000
dann

2488
01:51:38,000 --> 01:51:40,000
haben Sie da einen Klassifikator, der

2489
01:51:40,000 --> 01:51:42,000
Ihnen die Ähnlichkeit beschreibt

2490
01:51:42,000 --> 01:51:44,000
und aufgrund der Ähnlichkeit wird dann entschieden,

2491
01:51:44,000 --> 01:51:46,000
das Gesicht oder nicht.

2492
01:51:48,000 --> 01:51:50,000
Der Klassifikator, der muss letztendlich

2493
01:51:50,000 --> 01:51:52,000
wissen, wie sieht denn das normale Gesicht aus.

2494
01:51:52,000 --> 01:51:54,000
Dazu brauchen Sie Trainingsbeispiele

2495
01:51:54,000 --> 01:51:56,000
und wenn Sie

2496
01:51:56,000 --> 01:51:58,000
in Ihren Trainingsbeispielen nur

2497
01:51:58,000 --> 01:52:00,000
ältere

2498
01:52:00,000 --> 01:52:02,000
Herren haben,

2499
01:52:02,000 --> 01:52:04,000
ältere weiße Herren,

2500
01:52:04,000 --> 01:52:06,000
dann ist

2501
01:52:06,000 --> 01:52:08,000
dieser Gesichtsdetektor

2502
01:52:08,000 --> 01:52:10,000
offensichtlich nicht brauchbar.

2503
01:52:10,000 --> 01:52:12,000
Die Trainingsdaten,

2504
01:52:12,000 --> 01:52:14,000
die Sie haben, die müssen Ihren Anwendungsbereich

2505
01:52:14,000 --> 01:52:16,000
abdecken.

2506
01:52:16,000 --> 01:52:18,000
Das heißt, da müssen alle

2507
01:52:18,000 --> 01:52:20,000
ja, da müssen

2508
01:52:20,000 --> 01:52:22,000
letztendlich alle Geschlechter, alle Altersgruppen

2509
01:52:22,000 --> 01:52:24,000
oder auch alle Rassen vertreten sein.

2510
01:52:30,000 --> 01:52:32,000
Hier mal einen

2511
01:52:32,000 --> 01:52:34,000
Überblick,

2512
01:52:34,000 --> 01:52:36,000
was man

2513
01:52:36,000 --> 01:52:38,000
mit einem Bild machen kann.

2514
01:52:38,000 --> 01:52:40,000
Wir hatten schon mal

2515
01:52:40,000 --> 01:52:42,000
Restauration,

2516
01:52:42,000 --> 01:52:44,000
Entrauschung, Modellierung

2517
01:52:44,000 --> 01:52:46,000
als Beispiel

2518
01:52:46,000 --> 01:52:48,000
in unserer Anwendung.

2519
01:52:48,000 --> 01:52:50,000
Kalibrierung kann man natürlich auch

2520
01:52:50,000 --> 01:52:52,000
machen.

2521
01:52:52,000 --> 01:52:54,000
Kantendetektion

2522
01:52:54,000 --> 01:52:56,000
gehört dazu, einfache Strukturen,

2523
01:52:56,000 --> 01:52:58,000
man könnte Bewegungen schätzen,

2524
01:52:58,000 --> 01:53:00,000
man kann Texturdiskriptoren

2525
01:53:00,000 --> 01:53:02,000
entwickeln, das sind alles Komponenten,

2526
01:53:02,000 --> 01:53:04,000
die zu einem Feature führen.

2527
01:53:04,000 --> 01:53:06,000
Wenn Sie jetzt irgendwie

2528
01:53:06,000 --> 01:53:08,000
ein Modell entwickeln wollen, ich suche

2529
01:53:08,000 --> 01:53:10,000
eine Katze, wie sieht denn die

2530
01:53:10,000 --> 01:53:12,000
klassische Katze aus oder ich suche Buchstaben,

2531
01:53:12,000 --> 01:53:14,000
wie sieht das normale handgeschriebene

2532
01:53:14,000 --> 01:53:16,000
F aus und so weiter,

2533
01:53:16,000 --> 01:53:18,000
also sicherlich irgendwo

2534
01:53:18,000 --> 01:53:20,000
für diese Features eine Mittelwertbildung

2535
01:53:20,000 --> 01:53:22,000
machen müssen, also eine

2536
01:53:22,000 --> 01:53:24,000
Repräsentation finden, die die

2537
01:53:24,000 --> 01:53:26,000
Variabilität irgendwie reduziert.

2538
01:53:26,000 --> 01:53:28,000
Das bedeutet nicht, dass

2539
01:53:28,000 --> 01:53:30,000
Sie nur ein Modell für ein handgeschriebenes

2540
01:53:30,000 --> 01:53:32,000
F haben, vielleicht haben Sie auch zwei oder drei Modelle.

2541
01:53:36,000 --> 01:53:38,000
Wenn Sie diese Feature-Images,

2542
01:53:38,000 --> 01:53:40,000
Feature-Bilder dann haben, dann können Sie

2543
01:53:40,000 --> 01:53:42,000
Regionen identifizieren, wo Sie verschiedene Features finden.

2544
01:53:42,000 --> 01:53:44,000
Da kann man

2545
01:53:44,000 --> 01:53:46,000
dann die Formen analysieren, man kann

2546
01:53:46,000 --> 01:53:48,000
die Morphologie verändern,

2547
01:53:48,000 --> 01:53:50,000
also auf Binärbildern

2548
01:53:50,000 --> 01:53:52,000
zum Beispiel einzelne Punkte entfernen

2549
01:53:52,000 --> 01:53:54,000
oder die Konturen glätten

2550
01:53:54,000 --> 01:53:56,000
und dann kommt man irgendwann

2551
01:53:56,000 --> 01:53:58,000
dazu, dass man Objekte vielleicht

2552
01:53:58,000 --> 01:54:00,000
klassifizieren kann.

2553
01:54:00,000 --> 01:54:02,000
Mit dem, was hier rot

2554
01:54:02,000 --> 01:54:04,000
umrandet ist, beschäftigen wir uns

2555
01:54:04,000 --> 01:54:06,000
im Rahmen der Vorlesung

2556
01:54:06,000 --> 01:54:08,000
eine Auswahl dessen, was man

2557
01:54:08,000 --> 01:54:10,000
mit Bildern machen kann.

2558
01:54:10,000 --> 01:54:12,000
Wir werden uns als nächstes

2559
01:54:12,000 --> 01:54:14,000
mit der diskreten Geometrieanalyse

2560
01:54:14,000 --> 01:54:16,000
von Binärbildern, also Sie werden

2561
01:54:16,000 --> 01:54:18,000
das Bild irgendwie binarisiert

2562
01:54:18,000 --> 01:54:20,000
beschäftigen, welche Bildpunkte

2563
01:54:20,000 --> 01:54:22,000
sind benachbart,

2564
01:54:22,000 --> 01:54:24,000
wie können wir die Formen verändern,

2565
01:54:24,000 --> 01:54:26,000
was für Eigenschaften haben Binäre Objekte

2566
01:54:26,000 --> 01:54:28,000
und dann werden wir uns noch mit Bildsegmentierung,

2567
01:54:28,000 --> 01:54:30,000
Kantenfindung, Segmentierung

2568
01:54:30,000 --> 01:54:32,000
beschäftigen und zum Schluss nochmal

2569
01:54:32,000 --> 01:54:34,000
mit ein paar anderen Punkten.

2570
01:54:40,000 --> 01:54:46,000
Also fangen wir mal mit den

2571
01:54:46,000 --> 01:54:48,000
Bildern an.

2572
01:54:48,000 --> 01:54:50,000
Bildpunkte sind benachbart,

2573
01:54:50,000 --> 01:54:52,000
das ist ja irgendwie ganz klar.

2574
01:54:52,000 --> 01:54:54,000
Wenn man da genauer hinguckt,

2575
01:54:54,000 --> 01:54:56,000
wird man feststellen,

2576
01:54:56,000 --> 01:54:58,000
dass wir uns einigen müssen

2577
01:54:58,000 --> 01:55:00,000
auf eine Definition von Benachbarschaft.

2578
01:55:00,000 --> 01:55:02,000
Was hängt zusammen?

2579
01:55:02,000 --> 01:55:04,000
Wie können wir so Objekte

2580
01:55:04,000 --> 01:55:06,000
repräsentieren?

2581
01:55:06,000 --> 01:55:08,000
Wenn wir das klar haben,

2582
01:55:08,000 --> 01:55:10,000
dann können wir versuchen,

2583
01:55:10,000 --> 01:55:12,000
diese Objekte zu

2584
01:55:12,000 --> 01:55:14,000
verarbeiten und zu analysieren.

2585
01:55:14,000 --> 01:55:16,000
Das Bild hatten wir ja schon,

2586
01:55:16,000 --> 01:55:18,000
Differenzbild, Schwellwertbildung,

2587
01:55:18,000 --> 01:55:20,000
dann haben wir hier dieses Bild,

2588
01:55:20,000 --> 01:55:22,000
wo wir eigentlich nur diese Veränderung

2589
01:55:22,000 --> 01:55:24,000
finden wollen, aber wir haben hier einzelne Punkte,

2590
01:55:24,000 --> 01:55:26,000
wir haben den Schatten und der Brustbereich fehlt.

2591
01:55:26,000 --> 01:55:28,000
Wir gehen jetzt davon aus,

2592
01:55:28,000 --> 01:55:30,000
wir haben dieses Binärbild

2593
01:55:30,000 --> 01:55:32,000
und das hier sind die Dinge,

2594
01:55:32,000 --> 01:55:34,000
die wir als nächstes besprechen wollen.

2595
01:55:34,000 --> 01:55:36,000
Also wir

2596
01:55:36,000 --> 01:55:38,000
kriegen ein Binärbild her.

2597
01:55:38,000 --> 01:55:40,000
Ein Binärbild

2598
01:55:42,000 --> 01:55:44,000
kann man repräsentieren

2599
01:55:44,000 --> 01:55:46,000
als 0 und 1. Wenn Sie sich so ein Bild

2600
01:55:46,000 --> 01:55:48,000
auf dem Monitor angucken, dann ist das schwarz.

2601
01:55:48,000 --> 01:55:50,000
Das heißt,

2602
01:55:50,000 --> 01:55:52,000
für die Visualisierung

2603
01:55:52,000 --> 01:55:54,000
wäre es sicherlich sinnvoll,

2604
01:55:54,000 --> 01:55:56,000
dieses Binärbild schwarz ist 0,

2605
01:55:56,000 --> 01:55:58,000
weiß ist 255

2606
01:55:58,000 --> 01:56:00,000
darzustellen, aber hier haben wir jetzt mal

2607
01:56:00,000 --> 01:56:02,000
0 und 1.

2608
01:56:02,000 --> 01:56:04,000
0 und 255 zuorten.

2609
01:56:04,000 --> 01:56:06,000
1 geht

2610
01:56:06,000 --> 01:56:08,000
an die Stelle, wo das Eingangsbild

2611
01:56:08,000 --> 01:56:10,000
oberhalb eines Schwellwerts ist.

2612
01:56:10,000 --> 01:56:12,000
Ganz einfache Binärisierung

2613
01:56:12,000 --> 01:56:14,000
und unser Binärbild

2614
01:56:14,000 --> 01:56:16,000
kann dann in diesem

2615
01:56:16,000 --> 01:56:18,000
Binärbild zwei Zustände eingeben.

2616
01:56:18,000 --> 01:56:20,000
Wir können dann sagen,

2617
01:56:20,000 --> 01:56:22,000
da gibt es die Menge PA und PA

2618
01:56:22,000 --> 01:56:24,000
quer. Das eine sind

2619
01:56:24,000 --> 01:56:26,000
die 0 und das andere sind die 1

2620
01:56:26,000 --> 01:56:28,000
und die zusammen ergeben das gesamte Bild.

2621
01:56:28,000 --> 01:56:30,000
Wir sagen, die weißen Pixel,

2622
01:56:30,000 --> 01:56:32,000
der 1 sind die Vordergrundpixel.

2623
01:56:32,000 --> 01:56:34,000
Vordergrund

2624
01:56:34,000 --> 01:56:36,000
heißt nicht, dass das im Bild vorne ist, sondern

2625
01:56:36,000 --> 01:56:38,000
das sind die Bildpunkte, die für

2626
01:56:38,000 --> 01:56:40,000
die Analyse im Vordergrund stehen. Das sind die interessanten Pixel.

2627
01:56:40,000 --> 01:56:42,000
Später werden es dann

2628
01:56:42,000 --> 01:56:44,000
die Objektpixel und Hintergrund

2629
01:56:44,000 --> 01:56:46,000
interessiert uns eher nicht. Das sind die uninteressanten Pixel.

2630
01:56:48,000 --> 01:56:50,000
Wenn das

2631
01:56:50,000 --> 01:56:52,000
Ganze hier das Bild ist,

2632
01:56:52,000 --> 01:56:54,000
dann ist das hier zum Beispiel S und das ist das

2633
01:56:54,000 --> 01:56:56,000
Komplement. Das ist jetzt einfach

2634
01:56:56,000 --> 01:56:58,000
ein Mengenlehrer. Wenn Sie zwei Mengen S und T

2635
01:56:58,000 --> 01:57:00,000
vereinigen, dann ist das hier

2636
01:57:00,000 --> 01:57:02,000
die Schnittmenge. Das ist das, wo sie

2637
01:57:02,000 --> 01:57:04,000
sich überlappen. Wir können natürlich

2638
01:57:04,000 --> 01:57:06,000
auch

2639
01:57:06,000 --> 01:57:08,000
die Differenz bilden

2640
01:57:08,000 --> 01:57:10,000
zwischen

2641
01:57:10,000 --> 01:57:12,000
S und T.

2642
01:57:12,000 --> 01:57:14,000
Wir nehmen von S T weg.

2643
01:57:14,000 --> 01:57:16,000
Das heißt, diese Schnittmenge wird abgezogen.

2644
01:57:16,000 --> 01:57:18,000
Hier haben wir den Fall,

2645
01:57:18,000 --> 01:57:20,000
dass S T enthält.

2646
01:57:20,000 --> 01:57:22,000
Das heißt also,

2647
01:57:22,000 --> 01:57:24,000
S vereinigt T gibt T

2648
01:57:24,000 --> 01:57:26,000
und diese beiden Dinger sind

2649
01:57:26,000 --> 01:57:28,000
separiert. Das heißt, die Schnittmenge

2650
01:57:28,000 --> 01:57:30,000
ist gut. Einfache Mengenlehrer.

2651
01:57:30,000 --> 01:57:32,000
Ich hatte das in der 5. Klasse.

2652
01:57:32,000 --> 01:57:34,000
Ich weiß nicht, wann Sie das gelernt haben.

2653
01:57:34,000 --> 01:57:36,000
Nachbarschaft. Welche

2654
01:57:36,000 --> 01:57:38,000
Bildpunkte sind benachbart?

2655
01:57:38,000 --> 01:57:40,000
Hier haben wir einen Bildpunkt.

2656
01:57:40,000 --> 01:57:42,000
Welche Nachbarn hat er?

2657
01:57:42,000 --> 01:57:44,000
Wir sind uns alle einig.

2658
01:57:44,000 --> 01:57:46,000
Der hat vier Nachbarn.

2659
01:57:46,000 --> 01:57:48,000
Vielleicht sind wir uns nicht alle einig.

2660
01:57:48,000 --> 01:57:50,000
Manche sagen, der hat acht Nachbarn.

2661
01:57:50,000 --> 01:57:52,000
Ich habe da keine Meinung

2662
01:57:52,000 --> 01:57:54,000
dazu. Es ist vier oder acht.

2663
01:57:54,000 --> 01:57:56,000
Sie müssen das festlegen.

2664
01:57:56,000 --> 01:57:58,000
Nachbarschaft ist

2665
01:57:58,000 --> 01:58:00,000
nicht klar, was das ist.

2666
01:58:00,000 --> 01:58:02,000
Sie müssen sagen, wir haben eine Vierer-Nachbarschaft.

2667
01:58:02,000 --> 01:58:04,000
Dann sind wir bei Modell A.

2668
01:58:04,000 --> 01:58:06,000
Oder wir haben eine Achter-Nachbarschaft.

2669
01:58:06,000 --> 01:58:08,000
Und

2670
01:58:12,000 --> 01:58:14,000
die Frage ist natürlich auch noch,

2671
01:58:14,000 --> 01:58:16,000
haben alle Objekte dann eine Vierer-Nachbarschaft?

2672
01:58:16,000 --> 01:58:18,000
Oder haben manche eine Vierer-Nachbarschaft

2673
01:58:18,000 --> 01:58:20,000
und manche haben eine Achter-Nachbarschaft?

2674
01:58:21,000 --> 01:58:23,000
Ihre Entscheidung.

2675
01:58:23,000 --> 01:58:25,000
Schauen wir uns dieses Bild an.

2676
01:58:25,000 --> 01:58:27,000
Wenn wir davon ausgehen, dass

2677
01:58:27,000 --> 01:58:29,000
benachbart Vierer-Nachbarschaft

2678
01:58:29,000 --> 01:58:31,000
heißt,

2679
01:58:31,000 --> 01:58:33,000
dann ist diese graue Fläche

2680
01:58:33,000 --> 01:58:35,000
bestätigt aus zwei Teilen.

2681
01:58:35,000 --> 01:58:37,000
Weil diese beiden Punkte sind nicht

2682
01:58:37,000 --> 01:58:39,000
miteinander verbunden.

2683
01:58:39,000 --> 01:58:41,000
Wenn wir sagen

2684
01:58:43,000 --> 01:58:45,000
Achter-Nachbarschaft,

2685
01:58:45,000 --> 01:58:47,000
dann ist diese graue Fläche

2686
01:58:47,000 --> 01:58:49,000
ein Objekt, weil diese beiden Punkte

2687
01:58:49,000 --> 01:58:51,000
sind miteinander verbunden.

2688
01:58:51,000 --> 01:58:53,000
Interessanterweise, wenn wir dann sagen,

2689
01:58:53,000 --> 01:58:55,000
der Hintergrund

2690
01:58:55,000 --> 01:58:57,000
hat auch die Achter-Nachbarschaft,

2691
01:58:57,000 --> 01:58:59,000
dann haben wir hier nur eine Hintergrundfläche.

2692
01:58:59,000 --> 01:59:01,000
Dann schneidet die Hintergrundfläche

2693
01:59:01,000 --> 01:59:03,000
die zusammenhängende Vordergrundfläche.

2694
01:59:03,000 --> 01:59:05,000
Also dem menschlichen Empfinden

2695
01:59:05,000 --> 01:59:07,000
widerspricht das so ein bisschen.

2696
01:59:07,000 --> 01:59:09,000
Deutet darauf hin, womöglich muss man

2697
01:59:09,000 --> 01:59:11,000
verschiedene Nachbarschaften wählen.

2698
01:59:11,000 --> 01:59:13,000
Das Objekt hat vielleicht eine Achter-Nachbarschaft

2699
01:59:13,000 --> 01:59:15,000
und der Hintergrund wird über eine Vierer-Nachbarschaft

2700
01:59:15,000 --> 01:59:17,000
definiert.

2701
01:59:19,000 --> 01:59:21,000
Die Vierer-Nachbarschaft wird mit N4

2702
01:59:21,000 --> 01:59:23,000
bezeichnet und für einen

2703
01:59:23,000 --> 01:59:25,000
Bildpunkt ist das dann der Bildpunkt

2704
01:59:25,000 --> 01:59:27,000
rechts, links, unten

2705
01:59:27,000 --> 01:59:29,000
und oben.

2706
01:59:29,000 --> 01:59:31,000
Bei der Achter-Nachbarschaft haben sie

2707
01:59:31,000 --> 01:59:33,000
eben dann noch

2708
01:59:33,000 --> 01:59:35,000
diese vier Pixel

2709
01:59:35,000 --> 01:59:37,000
dazu.

2710
01:59:37,000 --> 01:59:39,000
Die Nachbarschaftsrelation

2711
01:59:39,000 --> 01:59:41,000
ist binär.

2712
01:59:41,000 --> 01:59:43,000
Man ist benachbart

2713
01:59:43,000 --> 01:59:45,000
oder eben auch nicht und sie ist symmetrisch.

2714
01:59:45,000 --> 01:59:47,000
Wenn sie mit mir benachbart sind,

2715
01:59:47,000 --> 01:59:49,000
bin ich auch mit ihnen benachbart.

2716
01:59:49,000 --> 01:59:51,000
Oder auch nicht.

2717
02:00:01,000 --> 02:00:03,000
Wann hängen

2718
02:00:03,000 --> 02:00:05,000
jetzt zwei Bildpunkte zusammen?

2719
02:00:07,000 --> 02:00:09,000
Zwei nicht benachbarte Bildpunkte.

2720
02:00:11,000 --> 02:00:13,000
Die seien jetzt mal

2721
02:00:13,000 --> 02:00:15,000
entweder Vordergrund

2722
02:00:15,000 --> 02:00:17,000
oder Hintergrundpixel, also Objektpixel.

2723
02:00:19,000 --> 02:00:21,000
Wir sprechen jetzt mal über die Objektpixel.

2724
02:00:21,000 --> 02:00:23,000
Dann heißen sie Zusammenhängen, wenn eine Folge von Pixeln

2725
02:00:23,000 --> 02:00:25,000
existiert, sodass aufeinanderfolgende

2726
02:00:25,000 --> 02:00:27,000
Pixel benachbart

2727
02:00:27,000 --> 02:00:29,000
sind.

2728
02:00:33,000 --> 02:00:35,000
Und wenn

2729
02:00:35,000 --> 02:00:37,000
P mit Q

2730
02:00:37,000 --> 02:00:39,000
zusammenhängend ist, dann auch

2731
02:00:39,000 --> 02:00:41,000
umgekehrt.

2732
02:00:41,000 --> 02:00:43,000
Und ein Objekt,

2733
02:00:43,000 --> 02:00:45,000
das ist jetzt eine Definition,

2734
02:00:45,000 --> 02:00:47,000
ist eine Teilmenge von Pixeln,

2735
02:00:47,000 --> 02:00:49,000
wenn alle Pixel

2736
02:00:49,000 --> 02:00:51,000
zusammenhängend sind.

2737
02:00:51,000 --> 02:00:53,000
Wenn wir also eine Achternachbarschaft

2738
02:00:53,000 --> 02:00:55,000
definieren,

2739
02:00:55,000 --> 02:00:57,000
dann ist

2740
02:00:57,000 --> 02:00:59,000
dieser Punkt

2741
02:00:59,000 --> 02:01:01,000
zusammenhängend

2742
02:01:01,000 --> 02:01:03,000
mit dem Punkt hier oben,

2743
02:01:03,000 --> 02:01:05,000
weil wir hier eine Verbindung haben.

2744
02:01:05,000 --> 02:01:07,000
Dann ist das alles ein Objekt.

2745
02:01:07,000 --> 02:01:09,000
Dann können wir sagen,

2746
02:01:09,000 --> 02:01:11,000
unsere Objekte

2747
02:01:11,000 --> 02:01:13,000
müssen zusammenhängend sein,

2748
02:01:13,000 --> 02:01:15,000
aber der Zusammenhang ist mit der

2749
02:01:15,000 --> 02:01:17,000
Vierernachbarschaft definiert, dann haben wir hier

2750
02:01:17,000 --> 02:01:19,000
zwei Objekte, weil dann dieser Punkt

2751
02:01:19,000 --> 02:01:21,000
mit dem hier nicht verbunden ist.

2752
02:01:29,000 --> 02:01:31,000
Jetzt haben wir hier noch mal

2753
02:01:31,000 --> 02:01:33,000
ein Bild.

2754
02:01:33,000 --> 02:01:35,000
S1 wäre

2755
02:01:35,000 --> 02:01:37,000
Hintergrund.

2756
02:01:37,000 --> 02:01:39,000
S2 sei mal unser Objekt.

2757
02:01:39,000 --> 02:01:41,000
S3 und S4 Löcher

2758
02:01:41,000 --> 02:01:43,000
in S

2759
02:01:43,000 --> 02:01:45,000
in unserem Objekt.

2760
02:01:45,000 --> 02:01:47,000
S2 oder auch

2761
02:01:47,000 --> 02:01:49,000
S.

2762
02:01:53,000 --> 02:01:55,000
Hier ist jetzt noch mal ganz klar

2763
02:01:55,000 --> 02:01:57,000
definiert

2764
02:01:57,000 --> 02:01:59,000
Nachbarschaft.

2765
02:01:59,000 --> 02:02:01,000
Wir definieren uns eine Menge S.

2766
02:02:01,000 --> 02:02:03,000
Die besteht aus diesen vier Flächen.

2767
02:02:03,000 --> 02:02:05,000
Und

2768
02:02:05,000 --> 02:02:07,000
dann ist die Komplementärmenge die Vereinigung

2769
02:02:07,000 --> 02:02:09,000
S1 und S6.

2770
02:02:09,000 --> 02:02:11,000
Wenn wir Vierernachbarschaft haben, dann

2771
02:02:11,000 --> 02:02:13,000
sind diese vier Gebiete nicht zusammenhängend.

2772
02:02:13,000 --> 02:02:15,000
Und auch

2773
02:02:15,000 --> 02:02:17,000
das Weiße

2774
02:02:17,000 --> 02:02:19,000
ist nicht zusammenhängend.

2775
02:02:19,000 --> 02:02:21,000
Achternachbarschaft

2776
02:02:25,000 --> 02:02:27,000
dann ist S zusammenhängend.

2777
02:02:27,000 --> 02:02:29,000
Und S2 ist auch zusammenhängend.

2778
02:02:31,000 --> 02:02:33,000
Das was man wahrscheinlich machen will

2779
02:02:33,000 --> 02:02:35,000
ist, man sagt,

2780
02:02:35,000 --> 02:02:37,000
das Objekt S

2781
02:02:37,000 --> 02:02:39,000
soll zusammenhängend sein über die Achternachbarschaft.

2782
02:02:39,000 --> 02:02:41,000
Und der Hintergrund

2783
02:02:41,000 --> 02:02:43,000
wird über die Vierernachbarschaft

2784
02:02:43,000 --> 02:02:45,000
definiert. Das heißt also, S6 ist

2785
02:02:45,000 --> 02:02:47,000
ein Loch in S.

2786
02:02:55,000 --> 02:02:57,000
Wir unterscheiden

2787
02:02:57,000 --> 02:02:59,000
zwischen

2788
02:02:59,000 --> 02:03:01,000
einzelnen Punkten

2789
02:03:01,000 --> 02:03:03,000
in dem Binärbild, was wir vorhin hatten.

2790
02:03:03,000 --> 02:03:05,000
Das ist ein starkes Rauschen.

2791
02:03:09,000 --> 02:03:11,000
Und einzelne Punkte

2792
02:03:11,000 --> 02:03:13,000
sind

2793
02:03:13,000 --> 02:03:15,000
also wir unterscheiden

2794
02:03:15,000 --> 02:03:17,000
zwischen Einzelpunkten, Randpunkten, Innenpunkten

2795
02:03:17,000 --> 02:03:19,000
und Bogenpunkten.

2796
02:03:19,000 --> 02:03:21,000
Innenpunkt ist irgendwo innen drin im Objekt.

2797
02:03:21,000 --> 02:03:23,000
Randpunkt ist am Rand.

2798
02:03:23,000 --> 02:03:25,000
Und ein Bogenpunkt

2799
02:03:25,000 --> 02:03:27,000
der ist

2800
02:03:27,000 --> 02:03:29,000
auf einer Linie.

2801
02:03:29,000 --> 02:03:31,000
Ein Einzelpunkt

2802
02:03:31,000 --> 02:03:33,000
in der Vierernachbarschaft

2803
02:03:33,000 --> 02:03:35,000
wäre hier das A.

2804
02:03:35,000 --> 02:03:37,000
Und dieser Bildpunkt ist auch ein Einzelpunkt in der Achternachbarschaft.

2805
02:03:37,000 --> 02:03:39,000
Wenn wir hier so eine

2806
02:03:39,000 --> 02:03:41,000
Linie haben,

2807
02:03:41,000 --> 02:03:43,000
A ist dann nur ein Einzelpunkt

2808
02:03:43,000 --> 02:03:45,000
in der Vierernachbarschaft, weil er keinen Nachbarn

2809
02:03:45,000 --> 02:03:47,000
in der Vierernachbarschaft hat.

2810
02:03:47,000 --> 02:03:49,000
In der Achternachbarschaft hat er offensichtlich.

2811
02:03:49,000 --> 02:03:51,000
Wenn ein Punkt komplett umrandet ist

2812
02:03:51,000 --> 02:03:53,000
von seinesgleichen,

2813
02:03:53,000 --> 02:03:55,000
dann ist es ein Innenpunkt hier in der

2814
02:03:55,000 --> 02:03:57,000
Achternachbarschaft und in der Vierernachbarschaft.

2815
02:03:57,000 --> 02:03:59,000
Hier ist A

2816
02:03:59,000 --> 02:04:01,000
Innenpunkt in der Vierernachbarschaft

2817
02:04:01,000 --> 02:04:03,000
offensichtlich nicht in der Achternachbarschaft.

2818
02:04:03,000 --> 02:04:05,000
Denn dieser Punkt gehört ja nicht zum Objekt.

2819
02:04:09,000 --> 02:04:11,000
Hier haben wir ein Objekt.

2820
02:04:11,000 --> 02:04:13,000
Hier ein Nichtobjekt.

2821
02:04:13,000 --> 02:04:15,000
Dann sind in unserer Darstellung

2822
02:04:15,000 --> 02:04:17,000
sicherlich in unserer Wahrnehmung diese

2823
02:04:17,000 --> 02:04:19,000
vier Punkte Kandidaten für Randpunkte.

2824
02:04:19,000 --> 02:04:21,000
Dieses A

2825
02:04:21,000 --> 02:04:23,000
ist ein Randpunkt sowohl in der Vierernachbarschaft

2826
02:04:23,000 --> 02:04:25,000
als auch in der Achternachbarschaft.

2827
02:04:25,000 --> 02:04:27,000
Dieser Punkt ist ein Randpunkt

2828
02:04:27,000 --> 02:04:29,000
in der Achternachbarschaft. Woran erkennt man

2829
02:04:29,000 --> 02:04:31,000
einen Randpunkt? Einer der Nachbarn gehört

2830
02:04:33,000 --> 02:04:35,000
zum Gegenteil.

2831
02:04:35,000 --> 02:04:37,000
Wenn A ein Objekt ist, dann muss

2832
02:04:37,000 --> 02:04:39,000
ein Hintergrundpixel

2833
02:04:39,000 --> 02:04:41,000
Nachbar sein. Also das hier ist nur ein

2834
02:04:41,000 --> 02:04:43,000
Randpunkt in der Achternachbarschaft.

2835
02:04:43,000 --> 02:04:45,000
Ein Bogenpunkt.

2836
02:04:47,000 --> 02:04:49,000
Da haben wir dann zwei Nachbarn,

2837
02:04:49,000 --> 02:04:51,000
die

2838
02:04:51,000 --> 02:04:53,000
das gleiche Label haben

2839
02:04:53,000 --> 02:04:55,000
wie ich selber. Das A hier

2840
02:04:55,000 --> 02:04:57,000
ist eine Linie. Das hier ist dann ein

2841
02:04:57,000 --> 02:04:59,000
Bogenpunkt in der Vierernachbarschaft.

2842
02:04:59,000 --> 02:05:01,000
Das hier wäre kein Bogenpunkt

2843
02:05:01,000 --> 02:05:03,000
in der Vierernachbarschaft.

2844
02:05:03,000 --> 02:05:05,000
Die Linie gehört hier auf, aber in der Achternachbarschaft.

2845
02:05:15,000 --> 02:05:17,000
Dann gibt es

2846
02:05:17,000 --> 02:05:19,000
Nachbarschaftsfahnen. Das sind

2847
02:05:19,000 --> 02:05:21,000
letztendlich Algorithmen zur Bestimmung

2848
02:05:21,000 --> 02:05:23,000
von binären Objekten aus binären Bildern.

2849
02:05:23,000 --> 02:05:25,000
Da geht es also darum,

2850
02:05:25,000 --> 02:05:27,000
allen Objekten, die

2851
02:05:27,000 --> 02:05:29,000
zusammenhängend sind,

2852
02:05:29,000 --> 02:05:31,000
ein Label zuzuordnen.

2853
02:05:31,000 --> 02:05:33,000
Und wenn sie dann zehn verschiedene zusammenhängende

2854
02:05:33,000 --> 02:05:35,000
Gebiete haben, dann haben sie Hintergrund und neun Objekte

2855
02:05:35,000 --> 02:05:37,000
wahrscheinlich.

2856
02:05:39,000 --> 02:05:41,000
Eingang wäre

2857
02:05:41,000 --> 02:05:43,000
typischerweise ein binär Bild

2858
02:05:43,000 --> 02:05:45,000
und Ausgabe wäre dann so

2859
02:05:45,000 --> 02:05:47,000
ein eingefärbtes Bild, wo sie

2860
02:05:47,000 --> 02:05:49,000
jedem Objekt eine eigene Farbe geben.

2861
02:05:53,000 --> 02:05:55,000
Das wichtigste

2862
02:05:55,000 --> 02:05:57,000
Verfahren auf diesem Gebiet ist diese

2863
02:05:57,000 --> 02:05:59,000
Connected Component Analysis

2864
02:05:59,000 --> 02:06:01,000
oder auch deutsche Zusammenhangsanalyse.

2865
02:06:01,000 --> 02:06:03,000
Zusammenhängende

2866
02:06:03,000 --> 02:06:05,000
Pixel werden einem gemeinsamen Objekt

2867
02:06:05,000 --> 02:06:07,000
zugeordnet. Sie bekommen

2868
02:06:07,000 --> 02:06:09,000
einen gemeinsamen Label

2869
02:06:11,000 --> 02:06:13,000
und man

2870
02:06:13,000 --> 02:06:15,000
geht letztendlich zeilenweise durchs

2871
02:06:15,000 --> 02:06:17,000
Bild. Das ist also relativ schnell.

2872
02:06:17,000 --> 02:06:19,000
Ein relativ schnelles

2873
02:06:19,000 --> 02:06:21,000
Verfahren.

2874
02:06:21,000 --> 02:06:23,000
Das, was da zu programmieren ist.

2875
02:06:29,000 --> 02:06:31,000
Gibt es noch eine Frage zu

2876
02:06:31,000 --> 02:06:33,000
diesem hier?

2877
02:06:33,000 --> 02:06:35,000
Einen Bogenpunkt können Sie sich vorstellen. Das ist ein Punkt

2878
02:06:35,000 --> 02:06:37,000
in der Linie. Aber wenn Sie jetzt hier noch

2879
02:06:37,000 --> 02:06:39,000
einen Nachbarn hätten, dann wäre das eine Verzweigung.

2880
02:06:39,000 --> 02:06:41,000
Da kann man

2881
02:06:41,000 --> 02:06:43,000
sich jetzt überschreiten. Ich würde jetzt sagen, das ist kein

2882
02:06:43,000 --> 02:06:45,000
Bogenpunkt. Wenn Sie aber Linienverfolgung

2883
02:06:45,000 --> 02:06:47,000
machen, wäre so ein Punkt,

2884
02:06:47,000 --> 02:06:49,000
wo eine Linie hier ist

2885
02:06:49,000 --> 02:06:51,000
und vielleicht so eine Linie wieder etwas,

2886
02:06:51,000 --> 02:06:53,000
was Sie speziell in der Software

2887
02:06:53,000 --> 02:06:55,000
behandeln müssen.

2888
02:06:55,000 --> 02:06:57,000
Kantenverfolgung machen wir

2889
02:06:57,000 --> 02:06:59,000
als Mensch ganz, ganz einfach. Wenn Sie es programmieren

2890
02:06:59,000 --> 02:07:01,000
wollen, dann kriegen Sie

2891
02:07:01,000 --> 02:07:03,000
graue Haare. Freuen Sie sich, wenn das schon

2892
02:07:03,000 --> 02:07:05,000
jemand für Sie gemacht hat.

2893
02:07:05,000 --> 02:07:07,000
Zeilenkoinzidenzverfahren.

2894
02:07:09,000 --> 02:07:11,000
Ihr Bild kriegt irgendein Label

2895
02:07:11,000 --> 02:07:13,000
und abhängig

2896
02:07:13,000 --> 02:07:15,000
davon, Sie gehen dann mit so

2897
02:07:15,000 --> 02:07:17,000
einem dreieckigen Fenster übers

2898
02:07:17,000 --> 02:07:19,000
Bild, schauen sich diese

2899
02:07:19,000 --> 02:07:21,000
drei Werte an und daraus entscheiden Sie

2900
02:07:21,000 --> 02:07:23,000
nein, schauen Sie sich nur diese

2901
02:07:23,000 --> 02:07:25,000
beiden Werte an, dann entscheiden Sie, was

2902
02:07:25,000 --> 02:07:27,000
bekommt

2903
02:07:27,000 --> 02:07:29,000
hier, was kommt hier für ein Label.

2904
02:07:35,000 --> 02:07:37,000
Wenn wir

2905
02:07:37,000 --> 02:07:39,000
hier ein Label haben und

2906
02:07:39,000 --> 02:07:41,000
hier kommt jetzt ein neues

2907
02:07:41,000 --> 02:07:43,000
Objekt dazu, eine andere Farbe,

2908
02:07:43,000 --> 02:07:45,000
dann kriegen wir einen neuen Label.

2909
02:07:47,000 --> 02:07:49,000
Wenn wir

2910
02:07:49,000 --> 02:07:51,000
die Situation haben, hier ein

2911
02:07:51,000 --> 02:07:53,000
Label, hier ein Label und der neue

2912
02:07:53,000 --> 02:07:55,000
Bildpunkt hat die gleiche

2913
02:07:55,000 --> 02:07:57,000
Farbe wieder vorangegangen, dann bekommt

2914
02:07:57,000 --> 02:07:59,000
dieser Punkt IJ

2915
02:07:59,000 --> 02:08:01,000
diesen Label. Also

2916
02:08:01,000 --> 02:08:03,000
das hier ist das Ergebnis.

2917
02:08:05,000 --> 02:08:07,000
Wenn die Situation umgekehrt ist,

2918
02:08:07,000 --> 02:08:09,000
das hier ist der aktuelle Punkt

2919
02:08:09,000 --> 02:08:11,000
und der Punkt da drüber, den gleichen

2920
02:08:11,000 --> 02:08:13,000
Label, dann wird dieser Punkt den Label von hier oben

2921
02:08:13,000 --> 02:08:15,000
bekommen. Also das hier ist das Ergebnis.

2922
02:08:17,000 --> 02:08:19,000
Und

2923
02:08:19,000 --> 02:08:21,000
wenn wir die Situation

2924
02:08:21,000 --> 02:08:23,000
haben, dass wir hier einen Punkt haben,

2925
02:08:23,000 --> 02:08:25,000
oben und unten

2926
02:08:25,000 --> 02:08:27,000
gleiche Farbe, aber

2927
02:08:27,000 --> 02:08:29,000
unterschiedliche Label,

2928
02:08:29,000 --> 02:08:31,000
dann

2929
02:08:31,000 --> 02:08:33,000
nehmen wir hier den kleineren

2930
02:08:33,000 --> 02:08:35,000
Label, den kleineren von diesen beiden

2931
02:08:35,000 --> 02:08:37,000
und alle

2932
02:08:37,000 --> 02:08:39,000
Punkte, die den höheren Label haben,

2933
02:08:41,000 --> 02:08:43,000
bekommen jetzt den kleineren Label.

2934
02:08:43,000 --> 02:08:45,000
Das bedeutet also,

2935
02:08:45,000 --> 02:08:47,000
wenn ich hier so ein Objekt habe,

2936
02:08:47,000 --> 02:08:49,000
ich würde das hier irgendwie finden und irgendwann

2937
02:08:49,000 --> 02:08:51,000
habe ich verschiedene Objekte und irgendwann

2938
02:08:51,000 --> 02:08:53,000
wachsen sie zusammen. Und wenn sie zusammenwachsen,

2939
02:08:53,000 --> 02:08:55,000
das wird durch diesen

2940
02:08:55,000 --> 02:08:57,000
Fall

2941
02:08:57,000 --> 02:08:59,000
abgedeckt, bekommen sie

2942
02:08:59,000 --> 02:09:01,000
ein

2943
02:09:01,000 --> 02:09:03,000
gleiches Label. Und dann muss

2944
02:09:03,000 --> 02:09:05,000
natürlich ein Gebiet umgelabelt werden.

2945
02:09:09,000 --> 02:09:11,000
Und das führt dazu,

2946
02:09:11,000 --> 02:09:13,000
wenn Sie jetzt hier über dieses Bild gehen,

2947
02:09:13,000 --> 02:09:15,000
dann geben Sie ja hier den Label 1.

2948
02:09:15,000 --> 02:09:17,000
Wir gehen ja immer mit so einem

2949
02:09:17,000 --> 02:09:19,000
Muster darüber. Hier haben wir jetzt

2950
02:09:19,000 --> 02:09:21,000
die Situation, die hier

2951
02:09:21,000 --> 02:09:23,000
beschrieben ist. Also wird hier die 1 verteilt.

2952
02:09:23,000 --> 02:09:25,000
Gehen wir weiter, passiert nichts.

2953
02:09:25,000 --> 02:09:27,000
Dann fangen wir hier an.

2954
02:09:27,000 --> 02:09:29,000
Jetzt haben wir wieder diese Situation, jetzt wird ein

2955
02:09:29,000 --> 02:09:31,000
neuer Label vergeben. Das wird die 2

2956
02:09:31,000 --> 02:09:33,000
sein.

2957
02:09:33,000 --> 02:09:35,000
Dann

2958
02:09:35,000 --> 02:09:37,000
laufen wir hier weiter.

2959
02:09:39,000 --> 02:09:41,000
Hier wird dann die 1

2960
02:09:41,000 --> 02:09:43,000
vergeben werden, weil wir die da drum

2961
02:09:43,000 --> 02:09:45,000
haben. Und

2962
02:09:45,000 --> 02:09:47,000
wenn wir dann hier drüber laufen, werden wir merken,

2963
02:09:47,000 --> 02:09:49,000
dass diese beiden Regionen zusammen gehören.

2964
02:09:49,000 --> 02:09:51,000
Und dann wird die 2,

2965
02:09:51,000 --> 02:09:53,000
der Label wird dann gelöscht,

2966
02:09:53,000 --> 02:09:55,000
wird durch die 1 ersetzt und

2967
02:09:55,000 --> 02:09:57,000
hier treffen wir dann auf die 3.

2968
02:10:07,000 --> 02:10:09,000
Okay, das ist vielleicht erstmal genug

2969
02:10:09,000 --> 02:10:11,000
für heute.

2970
02:10:11,000 --> 02:10:13,000
Das hier ist ein Randverfolgungsverfahren.

2971
02:10:13,000 --> 02:10:15,000
Da machen wir dann beim nächsten Mal weiter.

2972
02:10:15,000 --> 02:10:17,000
Merken Sie sich auf alle Fälle,

2973
02:10:17,000 --> 02:10:19,000
Connected Component Analyse,

2974
02:10:19,000 --> 02:10:21,000
das ist

2975
02:10:21,000 --> 02:10:23,000
das klassische Verfahren, mit dem Sie

2976
02:10:23,000 --> 02:10:25,000
verschiedene

2977
02:10:25,000 --> 02:10:27,000
Bereiche eines Binärbildes,

2978
02:10:27,000 --> 02:10:29,000
verschiedene zusammenhängende

2979
02:10:29,000 --> 02:10:31,000
Bereiche eines

2980
02:10:31,000 --> 02:10:33,000
Binärbildes eindeutig identifizieren können.

2981
02:10:33,000 --> 02:10:35,000
Das können Sie gerne

2982
02:10:35,000 --> 02:10:37,000
selber programmieren. Sie können aber auch

2983
02:10:37,000 --> 02:10:39,000
letztendlich auf Bibliotheken zugreifen,

2984
02:10:39,000 --> 02:10:41,000
die das für Sie tun.

2985
02:10:41,000 --> 02:10:43,000
Das ist bei der Bildverarbeitung

2986
02:10:43,000 --> 02:10:45,000
letztendlich das typische Vorgehen.

2987
02:10:45,000 --> 02:10:47,000
Die meisten elementaren

2988
02:10:47,000 --> 02:10:49,000
Algorithmen,

2989
02:10:49,000 --> 02:10:51,000
alle Algorithmen, die wir hier im Rahmen der

2990
02:10:51,000 --> 02:10:53,000
Vorlesung besprechen, die gibt es schon

2991
02:10:53,000 --> 02:10:55,000
implementiert, egal ob Sie das mit Matlab oder

2992
02:10:55,000 --> 02:10:57,000
Python machen. Nutzen Sie

2993
02:10:57,000 --> 02:10:59,000
die Bibliotheken und

2994
02:10:59,000 --> 02:11:01,000
wenden Sie das an.

2995
02:11:01,000 --> 02:11:03,000
Gut, somit

2996
02:11:03,000 --> 02:11:05,000
sind wir durch für heute.

2997
02:11:05,000 --> 02:11:07,000
Bis zum nächsten Mal.

